{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Square Connect API",
    "description": "Client library for accessing the Square Connect APIs",
    "termsOfService": "https://connect.squareup.com/tos",
    "contact": {
      "name": "Square Developer Platform",
      "email": "developers@squareup.com",
      "url": "https://squareup.com/developers"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Read the official documentation here:",
    "url": "https://docs.connect.squareup.com/"
  },
  "host": "connect.squareup.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "authorizationUrl": "https://connect.squareup.com/oauth2/authorize",
      "flow": "accessCode",
      "tokenUrl": "https://connect.squareup.com/oauth2/token",
      "scopes": {
        "MERCHANT_PROFILE_READ": "GET endpoints related to a merchant\u0027s business and location entities. Almost all Connect API applications need this permission in order to obtain a merchant\u0027s location IDs",
        "PAYMENTS_READ": "GET endpoints related to transactions and refunds",
        "PAYMENTS_WRITE": "POST, PUT, and DELETE endpoints related to transactions and refunds. E-commerce applications must request this permission",
        "CUSTOMERS_READ": " GET endpoints related to customer management",
        "CUSTOMERS_WRITE": "POST, PUT, and DELETE endpoints related to customer management",
        "SETTLEMENTS_READ": "GET endpoints related to settlements (deposits)",
        "BANK_ACCOUNTS_READ": "GET endpoints related to a merchant\u0027s bank accounts",
        "ITEMS_READ": "GET endpoints related to a merchant\u0027s item library",
        "ITEMS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant\u0027s item library",
        "ORDERS_READ": "GET endpoints related to a merchant\u0027s orders",
        "ORDERS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant\u0027s orders",
        "EMPLOYEES_READ": "GET endpoints related to employee management",
        "EMPLOYEES_WRITE": "POST, PUT, and DELETE endpoints related to employee management",
        "TIMECARDS_READ": "GET endpoints related to employee timecards",
        "TIMECARDS_WRITE": "POST, PUT, and DELETE endpoints related to employee timecards",
        "PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS": "Allow third party applications to deduct a portion of each transaction amount.",
        "PAYMENTS_WRITE_IN_PERSON": "POST, PUT, and DELETE endpoints. Grants write access to transaction and refunds information.",
        "INVENTORY_READ": "GET endpoints related to a merchant\u0027s inventory",
        "INVENTORY_WRITE": "POST, PUT, and DELETE endpoints related to a merchant\u0027s inventory"
      }
    },
    "oauth2ClientSecret": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "paths": {
    "/mobile/authorization-code": {
      "post": {
        "tags": [
          "MobileAuthorization"
        ],
        "summary": "CreateMobileAuthorizationCode",
        "operationId": "CreateMobileAuthorizationCode",
        "description": "Generates code to authorize a mobile application to connect to a Square card reader\n\nAuthorization codes are one-time-use and expire __60 minutes__ after being issued.\n\n__Important:__ The `Authorization` header you provide to this endpoint must have the following format:\n\n```\nAuthorization: Bearer ACCESS_TOKEN\n```\n\nReplace `ACCESS_TOKEN` with a [valid production authorization credential](https://docs.connect.squareup.com/get-started#step-4-understand-the-different-application-credentials).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE_IN_PERSON"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE_IN_PERSON"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateMobileAuthorizationCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMobileAuthorizationCodeResponse"
            }
          }
        }
      }
    },
    "/oauth2/clients/{client_id}/access-token/renew": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RenewToken",
        "operationId": "RenewToken",
        "description": "`RenewToken` is deprecated. For information about refreshing OAuth access tokens, see \n[Renew OAuth Token](/authz/oauth/cookbook/oauth-renew).\n\n\nRenews an OAuth access token before it expires.\n\nOAuth access tokens besides your application\u0027s personal access token expire after __30 days__.\nYou can also renew expired tokens within __15 days__ of their expiration.\nYou cannot renew an access token that has been expired for more than 15 days.\nInstead, the associated user must re-complete the OAuth flow from the beginning.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [application dashboard](https://connect.squareup.com/apps).",
        "x-release-status": "DEPRECATED",
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "Your application\u0027s ID, available from the [application dashboard](https://connect.squareup.com/apps).",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RenewTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RenewTokenResponse"
            }
          }
        }
      }
    },
    "/oauth2/revoke": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RevokeToken",
        "operationId": "RevokeToken",
        "description": "Revokes an access token generated with the OAuth flow.\n\nIf an account has more than one OAuth access token for your application, this\nendpoint revokes all of them, regardless of which token you specify. When an\nOAuth access token is revoked, all of the active subscriptions associated\nwith that OAuth token are canceled immediately.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [application dashboard](https://connect.squareup.com/apps).",
        "x-release-status": "PUBLIC",
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RevokeTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeTokenResponse"
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "ObtainToken",
        "operationId": "ObtainToken",
        "description": "Returns an OAuth access token. \n\nThe endpoint supports distinct methods of obtaining OAuth access tokens. \nApplications specify a method by adding the `grant_type` parameter \nin the request and also provide relevant information. \nFor more information, see [OAuth access token management](/authz/oauth/how-it-works#oauth-access-token-management). \n\n__Note:__ Regardless of the method application specified,\nthe endpoint always returns two items; an OAuth access token and \na refresh token in the response. \n\nBy default, the OAuth API lets up to 500 Square accounts authorize your\napplication. Please\n[contact support](https://squareup.com/help/us/en/contact?prefill\u003ddeveloper_api)\nif you are developing an application for a larger audience.\n\n__OAuth tokens should only live on secure servers. Application clients\nshould never interact directly with OAuth tokens__.",
        "x-release-status": "PUBLIC",
        "x-sq-version": "2019-03-13",
        "security": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/ObtainTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObtainTokenResponse"
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "RetrieveBusiness",
        "operationId": "RetrieveBusiness",
        "description": "Get a business\u0027s information.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Merchant"
            }
          }
        }
      }
    },
    "/v1/me/employees": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployees",
        "operationId": "ListEmployees",
        "description": "Provides summary information for all of a business\u0027s employees.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_created_at",
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_created_at",
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "external_id",
            "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Employee"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployee",
        "operationId": "CreateEmployee",
        "description": " Use the CreateEmployee endpoint to add an employee to a Square\naccount. Employees created with the Connect API have an initial status\nof `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale\nuntil they are activated from the Square Dashboard. Employee status\ncannot be changed with the Connect API.\n\n\u003caside class\u003d\"important\"\u003e\nEmployee entities cannot be deleted. To disable employee profiles,\nset the employee\u0027s status to \u003ccode\u003eINACTIVE\u003c/code\u003e\n\u003c/aside\u003e",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      }
    },
    "/v1/me/employees/{employee_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployee",
        "operationId": "RetrieveEmployee",
        "description": "Provides the details for a single employee.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "The employee\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployee",
        "operationId": "UpdateEmployee",
        "description": "",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "The ID of the role to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      }
    },
    "/v1/me/locations": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "ListLocations",
        "operationId": "ListLocations",
        "description": "Provides details for a business\u0027s locations, including their IDs.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Merchant"
              }
            }
          }
        }
      }
    },
    "/v1/me/roles": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployeeRoles",
        "operationId": "ListEmployeeRoles",
        "description": "Provides summary information for all of a business\u0027s employee roles.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1EmployeeRole"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployeeRole",
        "operationId": "CreateEmployeeRole",
        "description": "Creates an employee role you can then assign to employees.\n\nSquare accounts can include any number of roles that can be assigned to\nemployees. These roles define the actions and permissions granted to an\nemployee with that role. For example, an employee with a \"Shift Manager\"\nrole might be able to issue refunds in Square Point of Sale, whereas an\nemployee with a \"Clerk\" role might not.\n\nRoles are assigned with the [V1UpdateEmployee](#endpoint-v1updateemployee)\nendpoint. An employee can have only one role at a time.\n\nIf an employee has no role, they have none of the permissions associated\nwith roles. All employees can accept payments with Square Point of Sale.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_role",
            "in": "body",
            "required": true,
            "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      }
    },
    "/v1/me/roles/{role_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployeeRole",
        "operationId": "RetrieveEmployeeRole",
        "description": "Provides the details for a single employee role.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "description": "The role\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployeeRole",
        "operationId": "UpdateEmployeeRole",
        "description": "Modifies the details of an employee role.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "description": "The ID of the role to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      }
    },
    "/v1/me/timecards": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListTimecards",
        "operationId": "ListTimecards",
        "description": "Provides summary information for all of a business\u0027s employee timecards.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which timecards are listed in the response, based on their created_at field.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "employee_id",
            "description": "If provided, the endpoint returns only timecards for the employee with the specified ID.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockin_time",
            "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockin_time",
            "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockout_time",
            "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockout_time",
            "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don\u0027t provide this parameter, both valid and deleted timecards are returned.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Timecard"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateTimecard",
        "operationId": "CreateTimecard",
        "description": "Creates a timecard for an employee and clocks them in with an\n`API_CREATE` event and a `clockin_time` set to the current time unless\nthe request provides a different value. To import timecards from another\nsystem (rather than clocking someone in). Specify the `clockin_time`\nand* `clockout_time` in the request.\n\nTimecards correspond to exactly one shift for a given employee, bounded\nby the `clockin_time` and `clockout_time` fields. An employee is\nconsidered clocked in if they have a timecard that doesn\u0027t have a\n`clockout_time` set. An employee that is currently clocked in cannot\nbe clocked in a second time.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}": {
      "delete": {
        "tags": [
          "V1Employees"
        ],
        "summary": "DeleteTimecard",
        "operationId": "DeleteTimecard",
        "description": "Deletes a timecard. Timecards can also be deleted through the\nSquare Dashboard. Deleted timecards are still accessible through\nConnect API endpoints, but cannot be modified. The `deleted` field of\nthe `Timecard` object indicates whether the timecard has been deleted.\n\n*Note**: By default, deleted timecards appear alongside valid timecards in\nresults returned by the [ListTimecards](#endpoint-v1employees-listtimecards)\nendpoint. To filter deleted timecards, include the `deleted` query\nparameter in the list request.\n\n\u003caside\u003e\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.\n\u003c/aside\u003e",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The ID of the timecard to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveTimecard",
        "operationId": "RetrieveTimecard",
        "description": "Provides the details for a single timecard.\n\u003caside\u003e\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.\n\u003c/aside\u003e",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The timecard\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateTimecard",
        "operationId": "UpdateTimecard",
        "description": "Modifies the details of a timecard with an `API_EDIT` event for\nthe timecard. Updating an active timecard with a `clockout_time`\nclocks the employee out.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "TThe ID of the timecard to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}/events": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListTimecardEvents",
        "operationId": "ListTimecardEvents",
        "description": "Provides summary information for all events associated with a\nparticular timecard.\n\n\u003caside\u003e\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.\n\u003c/aside\u003e",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The ID of the timecard to list events for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1TimecardEvent"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListBankAccounts",
        "operationId": "ListBankAccounts",
        "description": "Provides non-confidential details for all of a location\u0027s associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list bank accounts for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1BankAccount"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveBankAccount",
        "operationId": "RetrieveBankAccount",
        "description": "Provides non-confidential details for a merchant\u0027s associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the bank account\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bank_account_id",
            "description": "The bank account\u0027s Square-issued ID. You obtain this value from Settlement objects returned.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1BankAccount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListCashDrawerShifts",
        "operationId": "ListCashDrawerShifts",
        "description": "Provides the details for all of a location\u0027s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list cash drawer shifts for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1CashDrawerShift"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts/{shift_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveCashDrawerShift",
        "operationId": "RetrieveCashDrawerShift",
        "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list cash drawer shifts for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "shift_id",
            "description": "The shift\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1CashDrawerShift"
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListCategories",
        "operationId": "ListCategories",
        "description": "Lists all of a location\u0027s item categories.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list categories for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Category"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateCategory",
        "operationId": "CreateCategory",
        "description": "Creates an item category.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories/{category_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteCategory",
        "operationId": "DeleteCategory",
        "description": "Deletes an existing item category.\n*Note**: DeleteCategory returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteCategoryRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "category_id",
            "description": "The ID of the category to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateCategory",
        "operationId": "UpdateCategory",
        "description": "Modifies the details of an existing item category.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the category\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "category_id",
            "description": "The ID of the category to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListDiscounts",
        "operationId": "ListDiscounts",
        "description": "Lists all of a location\u0027s discounts.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list categories for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Discount"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateDiscount",
        "operationId": "CreateDiscount",
        "description": "Creates a discount.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts/{discount_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteDiscount",
        "operationId": "DeleteDiscount",
        "description": "Deletes an existing discount.\n*Note**: DeleteDiscount returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteDiscountRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "discount_id",
            "description": "The ID of the discount to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateDiscount",
        "operationId": "UpdateDiscount",
        "description": "Modifies the details of an existing discount.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the category\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "discount_id",
            "description": "The ID of the discount to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListFees",
        "operationId": "ListFees",
        "description": "Lists all of a location\u0027s fees (taxes).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list fees for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Fee"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateFee",
        "operationId": "CreateFee",
        "description": "Creates a fee (tax).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create a fee for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees/{fee_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteFee",
        "operationId": "DeleteFee",
        "description": "Deletes an existing fee (tax).\n*Note**: DeleteFee returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteFeeRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateFee",
        "operationId": "UpdateFee",
        "description": "Modifies the details of an existing fee (tax).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListInventory",
        "operationId": "ListInventory",
        "description": "Provides inventory information for all of a merchant\u0027s inventory-enabled item variations.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1InventoryEntry"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory/{variation_id}": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "AdjustInventory",
        "operationId": "AdjustInventory",
        "description": "Adjusts an item variation\u0027s current available inventory.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to adjust inventory information for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1AdjustInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1InventoryEntry"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListItems",
        "operationId": "ListItems",
        "description": "Provides summary information for all of a location\u0027s items.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "The ID of the location to list items for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Item"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateItem",
        "operationId": "CreateItem",
        "description": "Creates an item and at least one variation for it. Item-related\nentities include fields you can use to associate them with entities in a\nnon-Square system.\n\nWhen you create an item-related entity, you can optionally specify its\n`id`. This value must be unique among all IDs ever specified for the\naccount, including those specified by other applications. You can never\nreuse an entity ID. If you do not specify an ID, Square generates one\nfor the entity.\n\nItem variations have a `user_data` string that lets you associate\narbitrary metadata with the variation. The string cannot exceed 255\ncharacters.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteItem",
        "operationId": "DeleteItem",
        "description": "Deletes an existing item and all item variations associated with it.\n*Note**: DeleteItem returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteItemRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "RetrieveItem",
        "operationId": "RetrieveItem",
        "description": "Provides the details for a single item, including associated modifier lists and fees.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The item\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateItem",
        "operationId": "UpdateItem",
        "description": "Modifies the core details of an existing item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/fees/{fee_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "RemoveFee",
        "operationId": "RemoveFee",
        "description": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the fee to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to apply.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "ApplyFee",
        "operationId": "ApplyFee",
        "description": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the fee to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to apply.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "RemoveModifierList",
        "operationId": "RemoveModifierList",
        "description": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to remove.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to remove the modifier list from.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "ApplyModifierList",
        "operationId": "ApplyModifierList",
        "description": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to apply.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the modifier list to.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateVariation",
        "operationId": "CreateVariation",
        "description": "Creates an item variation for an existing item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The item\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations/{variation_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteVariation",
        "operationId": "DeleteVariation",
        "description": "Deletes an existing item variation from an item.\n*Note**: DeleteVariation returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteVariationRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to delete.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateVariation",
        "operationId": "UpdateVariation",
        "description": "Modifies the details of an existing item variation.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListModifierLists",
        "operationId": "ListModifierLists",
        "description": "Lists all of a location\u0027s modifier lists.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list modifier lists for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1ModifierList"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateModifierList",
        "operationId": "CreateModifierList",
        "description": "Creates an item modifier list and at least one modifier option for it.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create a modifier list for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteModifierList",
        "operationId": "DeleteModifierList",
        "description": "Deletes an existing item modifier list and all modifier options\nassociated with it.\n*Note**: DeleteModifierList returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteModifierListRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "RetrieveModifierList",
        "operationId": "RetrieveModifierList",
        "description": "Provides the details for a single modifier list.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The modifier list\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateModifierList",
        "operationId": "UpdateModifierList",
        "description": "Modifies the details of an existing item modifier list.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1UpdateModifierListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateModifierOption",
        "operationId": "CreateModifierOption",
        "description": "Creates an item modifier option and adds it to a modifier list.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteModifierOption",
        "operationId": "DeleteModifierOption",
        "description": "Deletes an existing item modifier option from a modifier list.\n*Note**: DeleteModifierOption returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteModifierOptionRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to delete.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateModifierOption",
        "operationId": "UpdateModifierOption",
        "description": "Modifies the details of an existing item modifier option.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListOrders",
        "operationId": "ListOrders",
        "description": "Provides summary information for a merchant\u0027s online store orders.",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list online store orders for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Order"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders/{order_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveOrder",
        "operationId": "RetrieveOrder",
        "description": "Provides comprehensive information for a single online store order, including the order\u0027s history.",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order_id",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Order"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "UpdateOrder",
        "operationId": "UpdateOrder",
        "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order_id",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1UpdateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Order"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListPages",
        "operationId": "ListPages",
        "description": "Lists all of a location\u0027s Favorites pages in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list Favorites pages for.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Page"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreatePage",
        "operationId": "CreatePage",
        "description": "Creates a Favorites page in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeletePage",
        "operationId": "DeletePage",
        "description": "Deletes an existing Favorites page and all of its cells.\n*Note**: DeletePage returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeletePageRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdatePage",
        "operationId": "UpdatePage",
        "description": "Modifies the details of a Favorites page in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}/cells": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeletePageCell",
        "operationId": "DeletePageCell",
        "description": "Deletes a cell from a Favorites page in Square Register.\n*Note**: DeletePageCell returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeletePageCellRequest` object\nas documented below.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "row",
            "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "page_id",
            "description": "The ID of the page to delete.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "column",
            "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdatePageCell",
        "operationId": "UpdatePageCell",
        "description": "Modifies a cell of a Favorites page in Square Register.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page the cell belongs to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1PageCell"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListPayments",
        "operationId": "ListPayments",
        "description": "Provides summary information for all payments taken for a given\nSquare account during a date range. Date ranges cannot exceed 1 year in\nlength. See Date ranges for details of inclusive and exclusive dates.\n\n*Note**: Details for payments processed with Square Point of Sale while\nin offline mode may not be transmitted to Square for up to 72 hours.\nOffline payments have a `created_at` value that reflects the time the\npayment was originally processed, not the time it was subsequently\ntransmitted to Square. Consequently, the ListPayments endpoint might\nlist an offline payment chronologically between online payments that\nwere seen in a previous request.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business\u0027s locations.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "The order in which payments are listed in the response.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "include_partial",
            "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Payment"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments/{payment_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrievePayment",
        "operationId": "RetrievePayment",
        "description": "Provides comprehensive information for a single payment.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the payment\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "payment_id",
            "description": "The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Payment"
            }
          }
        }
      }
    },
    "/v1/{location_id}/refunds": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListRefunds",
        "operationId": "ListRefunds",
        "description": "Provides the details for all refunds initiated by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list refunds for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Refund"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "CreateRefund",
        "operationId": "CreateRefund",
        "description": "Issues a refund for a previously processed payment. You must issue\na refund within 60 days of the associated payment.\n\nYou cannot issue a partial refund for a split tender payment. You must\ninstead issue a full or partial refund for a particular tender, by\nproviding the applicable tender id to the V1CreateRefund endpoint.\nIssuing a full refund for a split tender payment refunds all tenders\nassociated with the payment.\n\nIssuing a refund for a card payment is not reversible. For development\npurposes, you can create fake cash payments in Square Point of Sale and\nrefund them.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the original payment\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Refund"
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListSettlements",
        "operationId": "ListSettlements",
        "description": "Provides summary information for all deposits and withdrawals\ninitiated by Square to a linked bank account during a date range. Date\nranges cannot exceed one year in length.\n\n*Note**: the ListSettlements endpoint does not provide entry\ninformation.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns payments aggregated from all of the business\u0027s locations.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
            "enum": [
              "SENT",
              "FAILED"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Settlement"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements/{settlement_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveSettlement",
        "operationId": "RetrieveSettlement",
        "description": "Provides comprehensive information for a single settlement.\n\nThe returned `Settlement` objects include an `entries` field that lists\nthe transactions that contribute to the settlement total. Most\nsettlement entries correspond to a payment payout, but settlement\nentries are also generated for less common events, like refunds, manual\nadjustments, or chargeback holds.\n\nSquare initiates its regular deposits as indicated in the\n[Deposit Options with Square](https://squareup.com/help/us/en/article/3807)\nhelp article. Details for a regular deposit are usually not available\nfrom Connect API endpoints before 10 p.m. PST the same day.\n\nSquare does not know when an initiated settlement **completes**, only\nwhether it has failed. A completed settlement is typically reflected in\na bank account within 3 business days, but in exceptional cases it may\ntake longer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the settlements\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "settlement_id",
            "description": "The settlement\u0027s Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Settlement"
            }
          }
        }
      }
    },
    "/v2/apple-pay/domains": {
      "post": {
        "tags": [
          "ApplePay"
        ],
        "summary": "RegisterDomain",
        "operationId": "RegisterDomain",
        "description": "Activates a domain for use with Web Apple Pay and Square. A validation\nwill be performed on this domain by Apple to ensure is it properly set up as\nan Apple Pay enabled domain.\n\nThis endpoint provides an easy way for platform developers to bulk activate\nWeb Apple Pay with Square for merchants using their platform.\n\nTo learn more about Apple Pay on Web see the Apple Pay section in the\n[Embedding the Square Payment Form](/payments/sqpaymentform/overview) guide.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RegisterDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterDomainResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-delete": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchDeleteCatalogObjects",
        "operationId": "BatchDeleteCatalogObjects",
        "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only include IDs that were\nactually deleted.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-retrieve": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchRetrieveCatalogObjects",
        "operationId": "BatchRetrieveCatalogObjects",
        "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-upsert": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchUpsertCatalogObjects",
        "operationId": "BatchUpsertCatalogObjects",
        "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as the total object count for the\nrequest (items, variations, modifier lists, discounts, and taxes) is no more\nthan 10,000.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/info": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "CatalogInfo",
        "operationId": "CatalogInfo",
        "description": "Returns information about the Square Catalog API, such as batch size\nlimits for `BatchUpsertCatalogObjects`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogInfoResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "ListCatalog",
        "operationId": "ListCatalog",
        "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The types parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "types",
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCatalogResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpsertCatalogObject",
        "operationId": "UpsertCatalogObject",
        "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object/{object_id}": {
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "DeleteCatalogObject",
        "operationId": "DeleteCatalogObject",
        "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The ID of the [CatalogObject](#type-catalogobject) to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCatalogObjectResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "RetrieveCatalogObject",
        "operationId": "RetrieveCatalogObject",
        "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The object ID of any type of [CatalogObject](#type-catalogobject)s to be retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "include_related_objects",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/search": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogObjects",
        "operationId": "SearchCatalogObjects",
        "description": "Queries the targeted catalog using a variety of query types:\n[CatalogQuerySortedAttribute](#type-catalogquerysortedattribute),\n[CatalogQueryExact](#type-catalogqueryexact),\n[CatalogQueryRange](#type-catalogqueryrange),\n[CatalogQueryText](#type-catalogquerytext),\n[CatalogQueryItemsForTax](#type-catalogqueryitemsfortax), and\n[CatalogQueryItemsForModifierList](#type-catalogqueryitemsformodifierlist).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-modifier-lists": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemModifierLists",
        "operationId": "UpdateItemModifierLists",
        "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-taxes": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemTaxes",
        "operationId": "UpdateItemTaxes",
        "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesResponse"
            }
          }
        }
      }
    },
    "/v2/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "ListCustomers",
        "operationId": "ListCustomers",
        "description": "Lists a business\u0027s customers.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_field",
            "description": "Indicates how Customers should be sorted. Default: `DEFAULT`. See\n[CustomerSortField](#type-customersortfield) for possible values.",
            "enum": [
              "DEFAULT",
              "CREATED_AT"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order. Default: `ASC`. See [SortOrder](#type-sortorder)\nfor possible values.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomer",
        "operationId": "CreateCustomer",
        "description": "Creates a new customer for a business, which can have associated cards on file.\n\nYou must provide __at least one__ of the following values in your request to this\nendpoint:\n\n- `given_name`\n- `family_name`\n- `company_name`\n- `email_address`\n- `phone_number`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/customers/search": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "SearchCustomers",
        "operationId": "SearchCustomers",
        "description": "Searches the customer profiles associated with a Square account.\nCalling SearchCustomers without an explicit query parameter returns all\ncustomer profiles ordered alphabetically based on `given_name` and\n`family_name`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCustomersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCustomersResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomer",
        "operationId": "DeleteCustomer",
        "description": "Deletes a customer from a business, along with any linked cards on file. When two profiles\nare merged into a single profile, that profile is assigned a new `customer_id`. You must use the\nnew `customer_id` to delete merged profiles.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "RetrieveCustomer",
        "operationId": "RetrieveCustomer",
        "description": "Returns details for a single customer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "UpdateCustomer",
        "operationId": "UpdateCustomer",
        "description": "Updates the details of an existing customer. When two profiles are merged\ninto a single profile, that profile is assigned a new `customer_id`. You must use\nthe new `customer_id` to update merged profiles.\n\nYou cannot edit a customer\u0027s cards on file with this endpoint. To make changes\nto a card on file, you must delete the existing card on file with the\n[DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the\n[CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to update.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomerCard",
        "operationId": "CreateCustomerCard",
        "description": "Adds a card on file to an existing customer.\n\nAs with charges, calls to `CreateCustomerCard` are idempotent. Multiple\ncalls with the same card nonce return the same card record that was created\nwith the provided nonce during the _first_ call.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to link the card on file to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards/{card_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomerCard",
        "operationId": "DeleteCustomerCard",
        "description": "Removes a card on file from a customer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer that the card on file belongs to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "card_id",
            "description": "The ID of the card on file to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "ListEmployees",
        "operationId": "ListEmployees",
        "description": "Gets a list of `Employee` objects for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "Filter employees returned to only those that are associated with the\nspecified location.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "Specifies the EmployeeStatus to filter the employee by.",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The number of employees to be returned on each page.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "The token required to retrieve the specified page of results.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEmployeesResponse"
            }
          }
        }
      }
    },
    "/v2/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "RetrieveEmployee",
        "operationId": "RetrieveEmployee",
        "description": "Gets an `Employee` by Square-assigned employee `ID` (UUID)",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the employee that was requested.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveEmployeeResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/adjustment/{adjustment_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryAdjustment",
        "operationId": "RetrieveInventoryAdjustment",
        "description": "Returns the [InventoryAdjustment](#type-inventoryadjustment) object\nwith the provided `adjustment_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "adjustment_id",
            "description": "ID of the [InventoryAdjustment](#type-inventoryadjustment) to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryAdjustmentResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-change": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchChangeInventory",
        "operationId": "BatchChangeInventory",
        "description": "Applies adjustments and counts to the provided item quantities.\n\nOn success: returns the current calculated counts for all objects\nreferenced in the request.\nOn failure: returns a list of related errors.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchChangeInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchChangeInventoryResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-retrieve-changes": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryChanges",
        "operationId": "BatchRetrieveInventoryChanges",
        "description": "Returns historical physical counts and adjustments based on the\nprovided filter criteria.\n\nResults are paginated and sorted in ascending order according their\n`occurred_at` timestamp (oldest first).\n\nBatchRetrieveInventoryChanges is a catch-all query endpoint for queries\nthat cannot be handled by other, simpler endpoints.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryChangesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryChangesResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-retrieve-counts": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryCounts",
        "operationId": "BatchRetrieveInventoryCounts",
        "description": "Returns current counts for the provided\n[CatalogObject](#type-catalogobject)s at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`calculated_at` timestamp (newest first).\n\nWhen `updated_after` is specified, only counts that have changed since that\ntime (based on the server timestamp for the most recent change) are\nreturned. This allows clients to perform a \"sync\" operation, for example\nin response to receiving a Webhook notification.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryCountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryCountsResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/physical-count/{physical_count_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryPhysicalCount",
        "operationId": "RetrieveInventoryPhysicalCount",
        "description": "Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount)\nobject with the provided `physical_count_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "physical_count_id",
            "description": "ID of the\n[InventoryPhysicalCount](#type-inventoryphysicalcount) to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryPhysicalCountResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/{catalog_object_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryCount",
        "operationId": "RetrieveInventoryCount",
        "description": "Retrieves the current calculated stock count for a given\n[CatalogObject](#type-catalogobject) at a given set of\n[Location](#type-location)s. Responses are paginated and unsorted.\nFor more sophisticated queries, use a batch endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "catalog_object_id",
            "description": "ID of the [CatalogObject](#type-catalogobject) to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_ids",
            "description": "The [Location](#type-location) IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryCountResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/{catalog_object_id}/changes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryChanges",
        "operationId": "RetrieveInventoryChanges",
        "description": "Returns a set of physical counts and inventory adjustments for the\nprovided [CatalogObject](#type-catalogobject) at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`occurred_at` timestamp (newest first).\n\nThere are no limits on how far back the caller can page. This endpoint is\nuseful when displaying recent changes for a specific item. For more\nsophisticated queries, use a batch endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "catalog_object_id",
            "description": "ID of the [CatalogObject](#type-catalogobject) to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_ids",
            "description": "The [Location](#type-location) IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryChangesResponse"
            }
          }
        }
      }
    },
    "/v2/labor/break-types": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListBreakTypes",
        "operationId": "ListBreakTypes",
        "description": "Returns a paginated list of `BreakType` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "Filter Break Types returned to only those that are associated with the\nspecified location.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Break Type results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBreakTypesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateBreakType",
        "operationId": "CreateBreakType",
        "description": "Creates a new `BreakType`. \n\nA `BreakType` is a template for creating `Break` objects. \nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `break_name`\n- `expected_duration`\n- `is_paid`\n\nYou can only have 3 `BreakType` instances per location. If you attempt to add a 4th\n`BreakType` for a location, an `INVALID_REQUEST_ERROR` \"Exceeded limit of 3 breaks per location.\"\nis returned.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateBreakTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBreakTypeResponse"
            }
          }
        }
      }
    },
    "/v2/labor/break-types/{id}": {
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteBreakType",
        "operationId": "DeleteBreakType",
        "description": "Deletes an existing `BreakType`. \n\nA `BreakType` can be deleted even if it is referenced from a `Shift`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being deleted.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBreakTypeResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetBreakType",
        "operationId": "GetBreakType",
        "description": "Returns a single `BreakType` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBreakTypeResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateBreakType",
        "operationId": "UpdateBreakType",
        "description": "Updates an existing `BreakType`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateBreakTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBreakTypeResponse"
            }
          }
        }
      }
    },
    "/v2/labor/employee-wages": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListEmployeeWages",
        "operationId": "ListEmployeeWages",
        "description": "Returns a paginated list of `EmployeeWage` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "Filter wages returned to only those that are associated with the\nspecified employee.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Employee Wage results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEmployeeWagesResponse"
            }
          }
        }
      }
    },
    "/v2/labor/employee-wages/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetEmployeeWage",
        "operationId": "GetEmployeeWage",
        "description": "Returns a single `EmployeeWage` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `EmployeeWage` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEmployeeWageResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateShift",
        "operationId": "CreateShift",
        "description": "Creates a new `Shift`. \n\nA `Shift` represents a complete work day for a single employee. \nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `employee_id`\n- `start_at`\n\nAn attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:\n- The `status` of the new `Shift` is `OPEN` and the employee has another \nshift with an `OPEN` status. \n- The `start_at` date is in the future\n- the `start_at` or `end_at` overlaps another shift for the same employee\n- If `Break`s are set in the request, a break `start_at`\nmust not be before the `Shift.start_at`. A break `end_at` must not be after\nthe `Shift.end_at`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateShiftRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateShiftResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts/search": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "SearchShifts",
        "operationId": "SearchShifts",
        "description": "Returns a paginated list of `Shift` records for a business. \nThe list to be returned can be filtered by:\n- Location IDs **and**\n- employee IDs **and**\n- shift status (`OPEN`, `CLOSED`) **and**\n- shift start **and**\n- shift end **and**\n- work day details\n\nThe list can be sorted by:\n- `start_at`\n- `end_at`\n- `created_at`\n- `updated_at`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchShiftsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchShiftsResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts/{id}": {
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteShift",
        "operationId": "DeleteShift",
        "description": "Deletes a `Shift`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `Shift` being deleted.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteShiftResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetShift",
        "operationId": "GetShift",
        "description": "Returns a single `Shift` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `Shift` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetShiftResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateShift",
        "operationId": "UpdateShift",
        "description": "Updates an existing `Shift`. \n\nWhen adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have \nthe `end_at` property set to a valid RFC-3339 datetime string. \n\nWhen closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`\nset on each `Break`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE",
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE",
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID of the object being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateShiftRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateShiftResponse"
            }
          }
        }
      }
    },
    "/v2/labor/workweek-configs": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListWorkweekConfigs",
        "operationId": "ListWorkweekConfigs",
        "description": "Returns a list of `WorkweekConfig` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "description": "Maximum number of Workweek Configs to return per page.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Workweek Config results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListWorkweekConfigsResponse"
            }
          }
        }
      }
    },
    "/v2/labor/workweek-configs/{id}": {
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateWorkweekConfig",
        "operationId": "UpdateWorkweekConfig",
        "description": "Updates a `WorkweekConfig`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `WorkweekConfig` object being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateWorkweekConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateWorkweekConfigResponse"
            }
          }
        }
      }
    },
    "/v2/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "ListLocations",
        "operationId": "ListLocations",
        "description": "Provides the details for all of a business\u0027s locations.\n\nMost other Connect API endpoints have a required `location_id` path parameter.\nThe `id` field of the [`Location`](#type-location) objects returned by this\nendpoint correspond to that `location_id` parameter.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLocationsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/additional-recipient-receivable-refunds": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "ListAdditionalRecipientReceivableRefunds",
        "operationId": "ListAdditionalRecipientReceivableRefunds",
        "description": "Returns a list of refunded transactions (across all possible originating locations) relating to monies\ncredited to the provided location ID by another Square account using the `additional_recipients` field in a transaction.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list AdditionalRecipientReceivableRefunds for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAdditionalRecipientReceivableRefundsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/additional-recipient-receivables": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "ListAdditionalRecipientReceivables",
        "operationId": "ListAdditionalRecipientReceivables",
        "description": "Returns a list of receivables (across all possible sending locations) representing monies credited\nto the provided location ID by another Square account using the `additional_recipients` field in a transaction.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list AdditionalRecipientReceivables for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAdditionalRecipientReceivablesResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/checkouts": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "CreateCheckout",
        "operationId": "CreateCheckout",
        "description": "Links a `checkoutId` to a `checkout_page_url` that customers will\nbe directed to in order to provide their payment information using a\npayment processing workflow hosted on connect.squareup.com.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the business location to associate the checkout with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateOrder",
        "operationId": "CreateOrder",
        "description": "Creates an [Order](#type-order) that can then be referenced as `order_id` in a\nrequest to the [Charge](#endpoint-charge) endpoint. Orders specify products for\npurchase, along with discounts, taxes, and other settings to apply to the purchase.\n\nTo associate a created order with a request to the Charge endpoint, provide the\norder\u0027s `id` in the `order_id` field of your request.\n\nYou cannot modify an order after you create it. If you need to modify an order,\ninstead create a new order with modified details.\n\nTo learn more about the Orders API, see the\n[Orders API Overview](/products/orders/overview).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the business location to associate the order with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateOrderResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/orders/batch-retrieve": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "BatchRetrieveOrders",
        "operationId": "BatchRetrieveOrders",
        "description": "Retrieves a set of [Order](#type-order)s by their IDs.\n\nIf a given Order ID does not exist, the ID is ignored instead of generating an error.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the orders\u0027 associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveOrdersResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/refunds": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListRefunds",
        "operationId": "ListRefunds",
        "description": "Lists refunds for one of a business\u0027s locations.\n\nIn addition to full or partial tender refunds processed through Square APIs,\nrefunds may result from itemized returns or exchanges through Square\u0027s\nPoint of Sale applications.\n\nRefunds with a `status` of `PENDING` are not currently included in this\nendpoint\u0027s response.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list refunds for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRefundsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListTransactions",
        "operationId": "ListTransactions",
        "description": "Lists transactions for a particular location.\n\nTransactions include payment information from sales and exchanges and refund\ninformation from returns and exchanges.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list transactions for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Charge",
        "operationId": "Charge",
        "description": "Charges a card represented by a card nonce or a customer\u0027s card on file.\n\nYour request to this endpoint must include _either_:\n\n- A value for the `card_nonce` parameter (to charge a card nonce generated\nwith the `SqPaymentForm`)\n- Values for the `customer_card_id` and `customer_id` parameters (to charge\na customer\u0027s card on file)\n\nIn order for an eCommerce payment to potentially qualify for\n[Square chargeback protection](https://squareup.com/help/article/5394), you\n_must_ provide values for the following parameters in your request:\n\n- `buyer_email_address`\n- At least one of `billing_address` or `shipping_address`\n\nWhen this response is returned, the amount of Square\u0027s processing fee might not yet be\ncalculated. To obtain the processing fee, wait about ten seconds and call\n[RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`\nfield of each [Tender included](#type-tender) in the transaction.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to associate the created transaction with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/ChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargeResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "RetrieveTransaction",
        "operationId": "RetrieveTransaction",
        "description": "Retrieves details for a single transaction.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the transaction\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the transaction to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CaptureTransaction",
        "operationId": "CaptureTransaction",
        "description": "Captures a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CaptureTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CreateRefund",
        "operationId": "CreateRefund",
        "description": "Initiates a refund for a previously charged tender.\n\nYou must issue a refund within 120 days of the associated payment. See\n[this article](https://squareup.com/help/us/en/article/5060) for more information\non refund behavior.\n\nNOTE: Card-present transactions with Interac credit cards **cannot be\nrefunded using the Connect API**. Interac transactions must refunded\nin-person (e.g., dipping the card using POS app).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the original transaction\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the original transaction that includes the tender to refund.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRefundResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "VoidTransaction",
        "operationId": "VoidTransaction",
        "description": "Cancels a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2019-03-13",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VoidTransactionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CardBrand": {
      "type": "string",
      "enum": [
        "OTHER_BRAND",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "DISCOVER_DINERS",
        "JCB",
        "CHINA_UNIONPAY",
        "SQUARE_GIFT_CARD"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_BRAND",
          "description": ""
        },
        {
          "name": "VISA",
          "description": ""
        },
        {
          "name": "MASTERCARD",
          "description": ""
        },
        {
          "name": "AMERICAN_EXPRESS",
          "description": ""
        },
        {
          "name": "DISCOVER",
          "description": ""
        },
        {
          "name": "DISCOVER_DINERS",
          "description": ""
        },
        {
          "name": "JCB",
          "description": ""
        },
        {
          "name": "CHINA_UNIONPAY",
          "description": ""
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": ""
        }
      ],
      "description": "Indicates a card\u0027s brand, such as `VISA` or `MASTERCARD`.",
      "x-release-status": "PUBLIC"
    },
    "CatalogDiscountType": {
      "type": "string",
      "enum": [
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PERCENTAGE",
          "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
        },
        {
          "name": "FIXED_AMOUNT",
          "description": "Apply the discount as a fixed amount (e.g., $1.00) off the item price."
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": "Apply the discount as a variable percentage off the item price. The percentage will be specified at the time of sale."
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": "Apply the discount as a variable amount off the item price. The amount will be specified at the time of sale."
        }
      ],
      "description": "How to apply a [CatalogDiscount](#type-catalogdiscount) to a [CatalogItem](#type-catalogitem).",
      "x-release-status": "PUBLIC"
    },
    "CatalogItemProductType": {
      "type": "string",
      "enum": [
        "REGULAR",
        "GIFT_CARD",
        "APPOINTMENTS_SERVICE",
        "RETAIL_ITEM",
        "RESTAURANT_ITEM"
      ],
      "x-enum-elements": [
        {
          "name": "REGULAR",
          "description": "An ordinary item."
        },
        {
          "name": "GIFT_CARD",
          "description": "A Square gift card."
        },
        {
          "name": "APPOINTMENTS_SERVICE",
          "description": "A service that can be booked using the Square Appointments app."
        },
        {
          "name": "RETAIL_ITEM",
          "description": "An item associated with the Retail vertical."
        },
        {
          "name": "RESTAURANT_ITEM",
          "description": "An item associated with the Restaurants vertical."
        }
      ],
      "description": "The type of a [CatalogItem](#type-catalogitem). Connect V2 only allows the creation of `REGULAR` items.",
      "x-release-status": "PUBLIC"
    },
    "CatalogModifierListSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": "Indicates that a [CatalogModifierList](#type-catalogmodifierlist) allows only a\nsingle [CatalogModifier](#type-catalogmodifier) to be selected."
        },
        {
          "name": "MULTIPLE",
          "description": "Indicates that a [CatalogModifierList](#type-catalogmodifierlist) allows multiple\n[CatalogModifier](#type-catalogmodifier) to be selected."
        }
      ],
      "description": "Indicates whether a [CatalogModifierList](#type-catalogmodifierlist) supports multiple selections.",
      "x-release-status": "PUBLIC"
    },
    "CatalogObjectType": {
      "type": "string",
      "enum": [
        "ITEM",
        "CATEGORY",
        "ITEM_VARIATION",
        "TAX",
        "DISCOUNT",
        "MODIFIER_LIST",
        "MODIFIER"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": "An item, corresponding to [CatalogItem](#type-catalogitem). The item-specific data\nwill be stored in the `item_data` field."
        },
        {
          "name": "CATEGORY",
          "description": "A category, corresponding to [CatalogCategory](#type-catalogcategory). The category-specific data\nwill be stored in the `category_data` field."
        },
        {
          "name": "ITEM_VARIATION",
          "description": "An item variation, corresponding to [CatalogItemVariation](#type-catalogitemvariation). The\nitem variation-specific data will be stored in the `item_variation_data` field."
        },
        {
          "name": "TAX",
          "description": "A tax, corresponding to [CatalogTax](#type-catalogtax). The tax-specific data\nwill be stored in the `tax_data` field."
        },
        {
          "name": "DISCOUNT",
          "description": "A discount, corresponding to [CatalogDiscount](#type-catalogdiscount). The discount-specific data\nwill be stored in the `discount_data` field."
        },
        {
          "name": "MODIFIER_LIST",
          "description": "A modifier list, corresponding to [CatalogModifierList](#type-catalogmodifierlist).\nThe modifier list-specific data will be stored in the `modifier_list_data` field."
        },
        {
          "name": "MODIFIER",
          "description": "A modifier, corresponding to [CatalogModifier](#type-catalogmodifier). The modifier-specific data\nwill be stored in the `modifier_data` field."
        }
      ],
      "description": "Possible kinds of [CatalogObject](#type-catalogobject)s returned from the Catalog, each\ncontaining type-specific properties in the `*_data` field corresponding to the object type.",
      "x-release-status": "PUBLIC"
    },
    "CatalogPricingType": {
      "type": "string",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PRICING",
          "description": "The [CatalogItemVariation](#type-catalogitemvariation)\u0027s price is fixed."
        },
        {
          "name": "VARIABLE_PRICING",
          "description": "The [CatalogItemVariation](#type-catalogitemvariation)\u0027s price is entered at the time of sale."
        }
      ],
      "description": "Indicates whether the price of a [CatalogItemVariation](#type-catalogitemvariation) should be entered manually at the time of sale.",
      "x-release-status": "PUBLIC"
    },
    "Country": {
      "type": "string",
      "enum": [
        "ZZ",
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AX",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BQ",
        "BR",
        "BS",
        "BT",
        "BV",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GF",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GP",
        "GQ",
        "GR",
        "GS",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HM",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MQ",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NF",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TF",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "UM",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ],
      "x-enum-elements": [
        {
          "name": "ZZ",
          "description": ""
        },
        {
          "name": "AD",
          "description": ""
        },
        {
          "name": "AE",
          "description": ""
        },
        {
          "name": "AF",
          "description": ""
        },
        {
          "name": "AG",
          "description": ""
        },
        {
          "name": "AI",
          "description": ""
        },
        {
          "name": "AL",
          "description": ""
        },
        {
          "name": "AM",
          "description": ""
        },
        {
          "name": "AO",
          "description": ""
        },
        {
          "name": "AQ",
          "description": ""
        },
        {
          "name": "AR",
          "description": ""
        },
        {
          "name": "AS",
          "description": ""
        },
        {
          "name": "AT",
          "description": ""
        },
        {
          "name": "AU",
          "description": ""
        },
        {
          "name": "AW",
          "description": ""
        },
        {
          "name": "AX",
          "description": ""
        },
        {
          "name": "AZ",
          "description": ""
        },
        {
          "name": "BA",
          "description": ""
        },
        {
          "name": "BB",
          "description": ""
        },
        {
          "name": "BD",
          "description": ""
        },
        {
          "name": "BE",
          "description": ""
        },
        {
          "name": "BF",
          "description": ""
        },
        {
          "name": "BG",
          "description": ""
        },
        {
          "name": "BH",
          "description": ""
        },
        {
          "name": "BI",
          "description": ""
        },
        {
          "name": "BJ",
          "description": ""
        },
        {
          "name": "BL",
          "description": ""
        },
        {
          "name": "BM",
          "description": ""
        },
        {
          "name": "BN",
          "description": ""
        },
        {
          "name": "BO",
          "description": ""
        },
        {
          "name": "BQ",
          "description": ""
        },
        {
          "name": "BR",
          "description": ""
        },
        {
          "name": "BS",
          "description": ""
        },
        {
          "name": "BT",
          "description": ""
        },
        {
          "name": "BV",
          "description": ""
        },
        {
          "name": "BW",
          "description": ""
        },
        {
          "name": "BY",
          "description": ""
        },
        {
          "name": "BZ",
          "description": ""
        },
        {
          "name": "CA",
          "description": ""
        },
        {
          "name": "CC",
          "description": ""
        },
        {
          "name": "CD",
          "description": ""
        },
        {
          "name": "CF",
          "description": ""
        },
        {
          "name": "CG",
          "description": ""
        },
        {
          "name": "CH",
          "description": ""
        },
        {
          "name": "CI",
          "description": ""
        },
        {
          "name": "CK",
          "description": ""
        },
        {
          "name": "CL",
          "description": ""
        },
        {
          "name": "CM",
          "description": ""
        },
        {
          "name": "CN",
          "description": ""
        },
        {
          "name": "CO",
          "description": ""
        },
        {
          "name": "CR",
          "description": ""
        },
        {
          "name": "CU",
          "description": ""
        },
        {
          "name": "CV",
          "description": ""
        },
        {
          "name": "CW",
          "description": ""
        },
        {
          "name": "CX",
          "description": ""
        },
        {
          "name": "CY",
          "description": ""
        },
        {
          "name": "CZ",
          "description": ""
        },
        {
          "name": "DE",
          "description": ""
        },
        {
          "name": "DJ",
          "description": ""
        },
        {
          "name": "DK",
          "description": ""
        },
        {
          "name": "DM",
          "description": ""
        },
        {
          "name": "DO",
          "description": ""
        },
        {
          "name": "DZ",
          "description": ""
        },
        {
          "name": "EC",
          "description": ""
        },
        {
          "name": "EE",
          "description": ""
        },
        {
          "name": "EG",
          "description": ""
        },
        {
          "name": "EH",
          "description": ""
        },
        {
          "name": "ER",
          "description": ""
        },
        {
          "name": "ES",
          "description": ""
        },
        {
          "name": "ET",
          "description": ""
        },
        {
          "name": "FI",
          "description": ""
        },
        {
          "name": "FJ",
          "description": ""
        },
        {
          "name": "FK",
          "description": ""
        },
        {
          "name": "FM",
          "description": ""
        },
        {
          "name": "FO",
          "description": ""
        },
        {
          "name": "FR",
          "description": ""
        },
        {
          "name": "GA",
          "description": ""
        },
        {
          "name": "GB",
          "description": ""
        },
        {
          "name": "GD",
          "description": ""
        },
        {
          "name": "GE",
          "description": ""
        },
        {
          "name": "GF",
          "description": ""
        },
        {
          "name": "GG",
          "description": ""
        },
        {
          "name": "GH",
          "description": ""
        },
        {
          "name": "GI",
          "description": ""
        },
        {
          "name": "GL",
          "description": ""
        },
        {
          "name": "GM",
          "description": ""
        },
        {
          "name": "GN",
          "description": ""
        },
        {
          "name": "GP",
          "description": ""
        },
        {
          "name": "GQ",
          "description": ""
        },
        {
          "name": "GR",
          "description": ""
        },
        {
          "name": "GS",
          "description": ""
        },
        {
          "name": "GT",
          "description": ""
        },
        {
          "name": "GU",
          "description": ""
        },
        {
          "name": "GW",
          "description": ""
        },
        {
          "name": "GY",
          "description": ""
        },
        {
          "name": "HK",
          "description": ""
        },
        {
          "name": "HM",
          "description": ""
        },
        {
          "name": "HN",
          "description": ""
        },
        {
          "name": "HR",
          "description": ""
        },
        {
          "name": "HT",
          "description": ""
        },
        {
          "name": "HU",
          "description": ""
        },
        {
          "name": "ID",
          "description": ""
        },
        {
          "name": "IE",
          "description": ""
        },
        {
          "name": "IL",
          "description": ""
        },
        {
          "name": "IM",
          "description": ""
        },
        {
          "name": "IN",
          "description": ""
        },
        {
          "name": "IO",
          "description": ""
        },
        {
          "name": "IQ",
          "description": ""
        },
        {
          "name": "IR",
          "description": ""
        },
        {
          "name": "IS",
          "description": ""
        },
        {
          "name": "IT",
          "description": ""
        },
        {
          "name": "JE",
          "description": ""
        },
        {
          "name": "JM",
          "description": ""
        },
        {
          "name": "JO",
          "description": ""
        },
        {
          "name": "JP",
          "description": ""
        },
        {
          "name": "KE",
          "description": ""
        },
        {
          "name": "KG",
          "description": ""
        },
        {
          "name": "KH",
          "description": ""
        },
        {
          "name": "KI",
          "description": ""
        },
        {
          "name": "KM",
          "description": ""
        },
        {
          "name": "KN",
          "description": ""
        },
        {
          "name": "KP",
          "description": ""
        },
        {
          "name": "KR",
          "description": ""
        },
        {
          "name": "KW",
          "description": ""
        },
        {
          "name": "KY",
          "description": ""
        },
        {
          "name": "KZ",
          "description": ""
        },
        {
          "name": "LA",
          "description": ""
        },
        {
          "name": "LB",
          "description": ""
        },
        {
          "name": "LC",
          "description": ""
        },
        {
          "name": "LI",
          "description": ""
        },
        {
          "name": "LK",
          "description": ""
        },
        {
          "name": "LR",
          "description": ""
        },
        {
          "name": "LS",
          "description": ""
        },
        {
          "name": "LT",
          "description": ""
        },
        {
          "name": "LU",
          "description": ""
        },
        {
          "name": "LV",
          "description": ""
        },
        {
          "name": "LY",
          "description": ""
        },
        {
          "name": "MA",
          "description": ""
        },
        {
          "name": "MC",
          "description": ""
        },
        {
          "name": "MD",
          "description": ""
        },
        {
          "name": "ME",
          "description": ""
        },
        {
          "name": "MF",
          "description": ""
        },
        {
          "name": "MG",
          "description": ""
        },
        {
          "name": "MH",
          "description": ""
        },
        {
          "name": "MK",
          "description": ""
        },
        {
          "name": "ML",
          "description": ""
        },
        {
          "name": "MM",
          "description": ""
        },
        {
          "name": "MN",
          "description": ""
        },
        {
          "name": "MO",
          "description": ""
        },
        {
          "name": "MP",
          "description": ""
        },
        {
          "name": "MQ",
          "description": ""
        },
        {
          "name": "MR",
          "description": ""
        },
        {
          "name": "MS",
          "description": ""
        },
        {
          "name": "MT",
          "description": ""
        },
        {
          "name": "MU",
          "description": ""
        },
        {
          "name": "MV",
          "description": ""
        },
        {
          "name": "MW",
          "description": ""
        },
        {
          "name": "MX",
          "description": ""
        },
        {
          "name": "MY",
          "description": ""
        },
        {
          "name": "MZ",
          "description": ""
        },
        {
          "name": "NA",
          "description": ""
        },
        {
          "name": "NC",
          "description": ""
        },
        {
          "name": "NE",
          "description": ""
        },
        {
          "name": "NF",
          "description": ""
        },
        {
          "name": "NG",
          "description": ""
        },
        {
          "name": "NI",
          "description": ""
        },
        {
          "name": "NL",
          "description": ""
        },
        {
          "name": "NO",
          "description": ""
        },
        {
          "name": "NP",
          "description": ""
        },
        {
          "name": "NR",
          "description": ""
        },
        {
          "name": "NU",
          "description": ""
        },
        {
          "name": "NZ",
          "description": ""
        },
        {
          "name": "OM",
          "description": ""
        },
        {
          "name": "PA",
          "description": ""
        },
        {
          "name": "PE",
          "description": ""
        },
        {
          "name": "PF",
          "description": ""
        },
        {
          "name": "PG",
          "description": ""
        },
        {
          "name": "PH",
          "description": ""
        },
        {
          "name": "PK",
          "description": ""
        },
        {
          "name": "PL",
          "description": ""
        },
        {
          "name": "PM",
          "description": ""
        },
        {
          "name": "PN",
          "description": ""
        },
        {
          "name": "PR",
          "description": ""
        },
        {
          "name": "PS",
          "description": ""
        },
        {
          "name": "PT",
          "description": ""
        },
        {
          "name": "PW",
          "description": ""
        },
        {
          "name": "PY",
          "description": ""
        },
        {
          "name": "QA",
          "description": ""
        },
        {
          "name": "RE",
          "description": ""
        },
        {
          "name": "RO",
          "description": ""
        },
        {
          "name": "RS",
          "description": ""
        },
        {
          "name": "RU",
          "description": ""
        },
        {
          "name": "RW",
          "description": ""
        },
        {
          "name": "SA",
          "description": ""
        },
        {
          "name": "SB",
          "description": ""
        },
        {
          "name": "SC",
          "description": ""
        },
        {
          "name": "SD",
          "description": ""
        },
        {
          "name": "SE",
          "description": ""
        },
        {
          "name": "SG",
          "description": ""
        },
        {
          "name": "SH",
          "description": ""
        },
        {
          "name": "SI",
          "description": ""
        },
        {
          "name": "SJ",
          "description": ""
        },
        {
          "name": "SK",
          "description": ""
        },
        {
          "name": "SL",
          "description": ""
        },
        {
          "name": "SM",
          "description": ""
        },
        {
          "name": "SN",
          "description": ""
        },
        {
          "name": "SO",
          "description": ""
        },
        {
          "name": "SR",
          "description": ""
        },
        {
          "name": "SS",
          "description": ""
        },
        {
          "name": "ST",
          "description": ""
        },
        {
          "name": "SV",
          "description": ""
        },
        {
          "name": "SX",
          "description": ""
        },
        {
          "name": "SY",
          "description": ""
        },
        {
          "name": "SZ",
          "description": ""
        },
        {
          "name": "TC",
          "description": ""
        },
        {
          "name": "TD",
          "description": ""
        },
        {
          "name": "TF",
          "description": ""
        },
        {
          "name": "TG",
          "description": ""
        },
        {
          "name": "TH",
          "description": ""
        },
        {
          "name": "TJ",
          "description": ""
        },
        {
          "name": "TK",
          "description": ""
        },
        {
          "name": "TL",
          "description": ""
        },
        {
          "name": "TM",
          "description": ""
        },
        {
          "name": "TN",
          "description": ""
        },
        {
          "name": "TO",
          "description": ""
        },
        {
          "name": "TR",
          "description": ""
        },
        {
          "name": "TT",
          "description": ""
        },
        {
          "name": "TV",
          "description": ""
        },
        {
          "name": "TW",
          "description": ""
        },
        {
          "name": "TZ",
          "description": ""
        },
        {
          "name": "UA",
          "description": ""
        },
        {
          "name": "UG",
          "description": ""
        },
        {
          "name": "UM",
          "description": ""
        },
        {
          "name": "US",
          "description": ""
        },
        {
          "name": "UY",
          "description": ""
        },
        {
          "name": "UZ",
          "description": ""
        },
        {
          "name": "VA",
          "description": ""
        },
        {
          "name": "VC",
          "description": ""
        },
        {
          "name": "VE",
          "description": ""
        },
        {
          "name": "VG",
          "description": ""
        },
        {
          "name": "VI",
          "description": ""
        },
        {
          "name": "VN",
          "description": ""
        },
        {
          "name": "VU",
          "description": ""
        },
        {
          "name": "WF",
          "description": ""
        },
        {
          "name": "WS",
          "description": ""
        },
        {
          "name": "YE",
          "description": ""
        },
        {
          "name": "YT",
          "description": ""
        },
        {
          "name": "ZA",
          "description": ""
        },
        {
          "name": "ZM",
          "description": ""
        },
        {
          "name": "ZW",
          "description": ""
        }
      ],
      "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
      "x-release-status": "PUBLIC"
    },
    "Currency": {
      "type": "string",
      "enum": [
        "UNKNOWN_CURRENCY",
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BOV",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHE",
        "CHF",
        "CHW",
        "CLF",
        "CLP",
        "CNY",
        "COP",
        "COU",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LTL",
        "LVL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MXV",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SRD",
        "SSP",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "USN",
        "USS",
        "UYI",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XAG",
        "XAU",
        "XBA",
        "XBB",
        "XBC",
        "XBD",
        "XCD",
        "XDR",
        "XOF",
        "XPD",
        "XPF",
        "XPT",
        "XTS",
        "XXX",
        "YER",
        "ZAR",
        "ZMK",
        "ZMW",
        "BTC"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_CURRENCY",
          "description": ""
        },
        {
          "name": "AED",
          "description": ""
        },
        {
          "name": "AFN",
          "description": ""
        },
        {
          "name": "ALL",
          "description": ""
        },
        {
          "name": "AMD",
          "description": ""
        },
        {
          "name": "ANG",
          "description": ""
        },
        {
          "name": "AOA",
          "description": ""
        },
        {
          "name": "ARS",
          "description": ""
        },
        {
          "name": "AUD",
          "description": ""
        },
        {
          "name": "AWG",
          "description": ""
        },
        {
          "name": "AZN",
          "description": ""
        },
        {
          "name": "BAM",
          "description": ""
        },
        {
          "name": "BBD",
          "description": ""
        },
        {
          "name": "BDT",
          "description": ""
        },
        {
          "name": "BGN",
          "description": ""
        },
        {
          "name": "BHD",
          "description": ""
        },
        {
          "name": "BIF",
          "description": ""
        },
        {
          "name": "BMD",
          "description": ""
        },
        {
          "name": "BND",
          "description": ""
        },
        {
          "name": "BOB",
          "description": ""
        },
        {
          "name": "BOV",
          "description": ""
        },
        {
          "name": "BRL",
          "description": ""
        },
        {
          "name": "BSD",
          "description": ""
        },
        {
          "name": "BTN",
          "description": ""
        },
        {
          "name": "BWP",
          "description": ""
        },
        {
          "name": "BYR",
          "description": ""
        },
        {
          "name": "BZD",
          "description": ""
        },
        {
          "name": "CAD",
          "description": ""
        },
        {
          "name": "CDF",
          "description": ""
        },
        {
          "name": "CHE",
          "description": ""
        },
        {
          "name": "CHF",
          "description": ""
        },
        {
          "name": "CHW",
          "description": ""
        },
        {
          "name": "CLF",
          "description": ""
        },
        {
          "name": "CLP",
          "description": ""
        },
        {
          "name": "CNY",
          "description": ""
        },
        {
          "name": "COP",
          "description": ""
        },
        {
          "name": "COU",
          "description": ""
        },
        {
          "name": "CRC",
          "description": ""
        },
        {
          "name": "CUC",
          "description": ""
        },
        {
          "name": "CUP",
          "description": ""
        },
        {
          "name": "CVE",
          "description": ""
        },
        {
          "name": "CZK",
          "description": ""
        },
        {
          "name": "DJF",
          "description": ""
        },
        {
          "name": "DKK",
          "description": ""
        },
        {
          "name": "DOP",
          "description": ""
        },
        {
          "name": "DZD",
          "description": ""
        },
        {
          "name": "EGP",
          "description": ""
        },
        {
          "name": "ERN",
          "description": ""
        },
        {
          "name": "ETB",
          "description": ""
        },
        {
          "name": "EUR",
          "description": ""
        },
        {
          "name": "FJD",
          "description": ""
        },
        {
          "name": "FKP",
          "description": ""
        },
        {
          "name": "GBP",
          "description": ""
        },
        {
          "name": "GEL",
          "description": ""
        },
        {
          "name": "GHS",
          "description": ""
        },
        {
          "name": "GIP",
          "description": ""
        },
        {
          "name": "GMD",
          "description": ""
        },
        {
          "name": "GNF",
          "description": ""
        },
        {
          "name": "GTQ",
          "description": ""
        },
        {
          "name": "GYD",
          "description": ""
        },
        {
          "name": "HKD",
          "description": ""
        },
        {
          "name": "HNL",
          "description": ""
        },
        {
          "name": "HRK",
          "description": ""
        },
        {
          "name": "HTG",
          "description": ""
        },
        {
          "name": "HUF",
          "description": ""
        },
        {
          "name": "IDR",
          "description": ""
        },
        {
          "name": "ILS",
          "description": ""
        },
        {
          "name": "INR",
          "description": ""
        },
        {
          "name": "IQD",
          "description": ""
        },
        {
          "name": "IRR",
          "description": ""
        },
        {
          "name": "ISK",
          "description": ""
        },
        {
          "name": "JMD",
          "description": ""
        },
        {
          "name": "JOD",
          "description": ""
        },
        {
          "name": "JPY",
          "description": ""
        },
        {
          "name": "KES",
          "description": ""
        },
        {
          "name": "KGS",
          "description": ""
        },
        {
          "name": "KHR",
          "description": ""
        },
        {
          "name": "KMF",
          "description": ""
        },
        {
          "name": "KPW",
          "description": ""
        },
        {
          "name": "KRW",
          "description": ""
        },
        {
          "name": "KWD",
          "description": ""
        },
        {
          "name": "KYD",
          "description": ""
        },
        {
          "name": "KZT",
          "description": ""
        },
        {
          "name": "LAK",
          "description": ""
        },
        {
          "name": "LBP",
          "description": ""
        },
        {
          "name": "LKR",
          "description": ""
        },
        {
          "name": "LRD",
          "description": ""
        },
        {
          "name": "LSL",
          "description": ""
        },
        {
          "name": "LTL",
          "description": ""
        },
        {
          "name": "LVL",
          "description": ""
        },
        {
          "name": "LYD",
          "description": ""
        },
        {
          "name": "MAD",
          "description": ""
        },
        {
          "name": "MDL",
          "description": ""
        },
        {
          "name": "MGA",
          "description": ""
        },
        {
          "name": "MKD",
          "description": ""
        },
        {
          "name": "MMK",
          "description": ""
        },
        {
          "name": "MNT",
          "description": ""
        },
        {
          "name": "MOP",
          "description": ""
        },
        {
          "name": "MRO",
          "description": ""
        },
        {
          "name": "MUR",
          "description": ""
        },
        {
          "name": "MVR",
          "description": ""
        },
        {
          "name": "MWK",
          "description": ""
        },
        {
          "name": "MXN",
          "description": ""
        },
        {
          "name": "MXV",
          "description": ""
        },
        {
          "name": "MYR",
          "description": ""
        },
        {
          "name": "MZN",
          "description": ""
        },
        {
          "name": "NAD",
          "description": ""
        },
        {
          "name": "NGN",
          "description": ""
        },
        {
          "name": "NIO",
          "description": ""
        },
        {
          "name": "NOK",
          "description": ""
        },
        {
          "name": "NPR",
          "description": ""
        },
        {
          "name": "NZD",
          "description": ""
        },
        {
          "name": "OMR",
          "description": ""
        },
        {
          "name": "PAB",
          "description": ""
        },
        {
          "name": "PEN",
          "description": ""
        },
        {
          "name": "PGK",
          "description": ""
        },
        {
          "name": "PHP",
          "description": ""
        },
        {
          "name": "PKR",
          "description": ""
        },
        {
          "name": "PLN",
          "description": ""
        },
        {
          "name": "PYG",
          "description": ""
        },
        {
          "name": "QAR",
          "description": ""
        },
        {
          "name": "RON",
          "description": ""
        },
        {
          "name": "RSD",
          "description": ""
        },
        {
          "name": "RUB",
          "description": ""
        },
        {
          "name": "RWF",
          "description": ""
        },
        {
          "name": "SAR",
          "description": ""
        },
        {
          "name": "SBD",
          "description": ""
        },
        {
          "name": "SCR",
          "description": ""
        },
        {
          "name": "SDG",
          "description": ""
        },
        {
          "name": "SEK",
          "description": ""
        },
        {
          "name": "SGD",
          "description": ""
        },
        {
          "name": "SHP",
          "description": ""
        },
        {
          "name": "SLL",
          "description": ""
        },
        {
          "name": "SOS",
          "description": ""
        },
        {
          "name": "SRD",
          "description": ""
        },
        {
          "name": "SSP",
          "description": ""
        },
        {
          "name": "STD",
          "description": ""
        },
        {
          "name": "SVC",
          "description": ""
        },
        {
          "name": "SYP",
          "description": ""
        },
        {
          "name": "SZL",
          "description": ""
        },
        {
          "name": "THB",
          "description": ""
        },
        {
          "name": "TJS",
          "description": ""
        },
        {
          "name": "TMT",
          "description": ""
        },
        {
          "name": "TND",
          "description": ""
        },
        {
          "name": "TOP",
          "description": ""
        },
        {
          "name": "TRY",
          "description": ""
        },
        {
          "name": "TTD",
          "description": ""
        },
        {
          "name": "TWD",
          "description": ""
        },
        {
          "name": "TZS",
          "description": ""
        },
        {
          "name": "UAH",
          "description": ""
        },
        {
          "name": "UGX",
          "description": ""
        },
        {
          "name": "USD",
          "description": ""
        },
        {
          "name": "USN",
          "description": ""
        },
        {
          "name": "USS",
          "description": ""
        },
        {
          "name": "UYI",
          "description": ""
        },
        {
          "name": "UYU",
          "description": ""
        },
        {
          "name": "UZS",
          "description": ""
        },
        {
          "name": "VEF",
          "description": ""
        },
        {
          "name": "VND",
          "description": ""
        },
        {
          "name": "VUV",
          "description": ""
        },
        {
          "name": "WST",
          "description": ""
        },
        {
          "name": "XAF",
          "description": ""
        },
        {
          "name": "XAG",
          "description": ""
        },
        {
          "name": "XAU",
          "description": ""
        },
        {
          "name": "XBA",
          "description": ""
        },
        {
          "name": "XBB",
          "description": ""
        },
        {
          "name": "XBC",
          "description": ""
        },
        {
          "name": "XBD",
          "description": ""
        },
        {
          "name": "XCD",
          "description": ""
        },
        {
          "name": "XDR",
          "description": ""
        },
        {
          "name": "XOF",
          "description": ""
        },
        {
          "name": "XPD",
          "description": ""
        },
        {
          "name": "XPF",
          "description": ""
        },
        {
          "name": "XPT",
          "description": ""
        },
        {
          "name": "XTS",
          "description": ""
        },
        {
          "name": "XXX",
          "description": ""
        },
        {
          "name": "YER",
          "description": ""
        },
        {
          "name": "ZAR",
          "description": ""
        },
        {
          "name": "ZMK",
          "description": ""
        },
        {
          "name": "ZMW",
          "description": ""
        },
        {
          "name": "BTC",
          "description": ""
        }
      ],
      "description": "Indicates the associated currency for an amount of money. Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
      "x-release-status": "PUBLIC"
    },
    "CustomerCreationSource": {
      "type": "string",
      "enum": [
        "OTHER",
        "APPOINTMENTS",
        "COUPON",
        "DELETION_RECOVERY",
        "DIRECTORY",
        "EGIFTING",
        "EMAIL_COLLECTION",
        "FEEDBACK",
        "IMPORT",
        "INVOICES",
        "LOYALTY",
        "MARKETING",
        "MERGE",
        "ONLINE_STORE",
        "INSTANT_PROFILE",
        "TERMINAL",
        "THIRD_PARTY",
        "THIRD_PARTY_IMPORT",
        "UNMERGE_RECOVERY"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER",
          "description": "Default creation source. Typically used for backward/future\ncompatibility when the original source of a customer profile is\nunrecognized. For example, when older clients do not support newer\nsource types."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Customer profile created automatically when an appointment\nwas scheduled."
        },
        {
          "name": "COUPON",
          "description": "Customer profile created automatically when a coupon was issued\nusing Square Point of Sale."
        },
        {
          "name": "DELETION_RECOVERY",
          "description": "Customer profile restored through Square\u0027s deletion recovery\nprocess."
        },
        {
          "name": "DIRECTORY",
          "description": "Customer profile created manually through Square Dashboard or\nPoint of Sale application."
        },
        {
          "name": "EGIFTING",
          "description": "Customer profile created automatically when a gift card was\nissued using Square Point of Sale. Customer profiles are created for\nboth the purchaser and the recipient of the gift card."
        },
        {
          "name": "EMAIL_COLLECTION",
          "description": "Customer profile created through Square Point of Sale when\nsigning up for marketing emails during checkout."
        },
        {
          "name": "FEEDBACK",
          "description": "Customer profile created automatically when providing feedback\nthrough a digital receipt."
        },
        {
          "name": "IMPORT",
          "description": "Customer profile created automatically when importing customer\ndata through Square Dashboard."
        },
        {
          "name": "INVOICES",
          "description": "Customer profile created automatically during an invoice payment."
        },
        {
          "name": "LOYALTY",
          "description": "Customer profile created automatically when customers provide a\nphone number for loyalty reward programs during checkout."
        },
        {
          "name": "MARKETING",
          "description": "Customer profile created as the result of a campaign managed\nthrough Square’s Facebook integration."
        },
        {
          "name": "MERGE",
          "description": "Customer profile created as the result of explicitly merging\nmultiple customer profiles through the Square Dashboard or Point of\nSale application."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Customer profile created through Square\u0027s Online Store solution\n(legacy service)."
        },
        {
          "name": "INSTANT_PROFILE",
          "description": "Customer profile created automatically as the result of a successful\ntransaction that did not explicitly link to an existing customer profile."
        },
        {
          "name": "TERMINAL",
          "description": "Customer profile created through Square\u0027s Virtual Terminal."
        },
        {
          "name": "THIRD_PARTY",
          "description": "Customer profile created through a Square API call."
        },
        {
          "name": "THIRD_PARTY_IMPORT",
          "description": "Customer profile created by a third-party product and imported\nthrough an official integration."
        },
        {
          "name": "UNMERGE_RECOVERY",
          "description": "Customer profile restored through Square\u0027s unmerge recovery\nprocess."
        }
      ],
      "description": "Indicates the method used to create the customer profile.",
      "x-release-status": "PUBLIC"
    },
    "CustomerInclusionExclusion": {
      "type": "string",
      "enum": [
        "INCLUDE",
        "EXCLUDE"
      ],
      "x-enum-elements": [
        {
          "name": "INCLUDE",
          "description": "Customers should be included in the result set when they match the\nfiltering criteria."
        },
        {
          "name": "EXCLUDE",
          "description": "Customers should be excluded from the result set when they match\nthe filtering criteria."
        }
      ],
      "description": "Indicates whether customers should be included in, or excluded from,\nthe result set when they match the filtering criteria.",
      "x-release-status": "PUBLIC"
    },
    "CustomerSortField": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "CREATED_AT"
      ],
      "x-enum-elements": [
        {
          "name": "DEFAULT",
          "description": "Use the default sort. By default, Customers are sorted\nalphanumerically by concatenating `given_name` and `family_name`. If\nneither name field is set, string comparison is performed using one of the\nremaining fields in the following order: `company_name`, `email`,\n`phone_number`."
        },
        {
          "name": "CREATED_AT",
          "description": "Sort Customers by their creation date (`created_at`)."
        }
      ],
      "description": "Indicates the sort criteria for a list of Customers.",
      "x-release-status": "PUBLIC"
    },
    "EmployeeStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "Specifies that the employee is in the Active state."
        },
        {
          "name": "INACTIVE",
          "description": "Specifies that the employee is in the Inactive state."
        }
      ],
      "description": "The status of the Employee being retrieved.",
      "x-release-status": "PUBLIC"
    },
    "ErrorCategory": {
      "type": "string",
      "enum": [
        "API_ERROR",
        "AUTHENTICATION_ERROR",
        "INVALID_REQUEST_ERROR",
        "RATE_LIMIT_ERROR",
        "PAYMENT_METHOD_ERROR",
        "REFUND_ERROR"
      ],
      "x-enum-elements": [
        {
          "name": "API_ERROR",
          "description": "An error occurred with the Connect API itself."
        },
        {
          "name": "AUTHENTICATION_ERROR",
          "description": "An authentication error occurred. Most commonly, the request had\na missing, malformed, or otherwise invalid `Authorization` header."
        },
        {
          "name": "INVALID_REQUEST_ERROR",
          "description": "The request was invalid. Most commonly, a required parameter was\nmissing, or a provided parameter had an invalid value."
        },
        {
          "name": "RATE_LIMIT_ERROR",
          "description": "Your application reached the Connect API rate limit. Retry your request\nafter a while."
        },
        {
          "name": "PAYMENT_METHOD_ERROR",
          "description": "An error occurred while processing a payment method. Most commonly,\nthe details of the payment method were invalid (such as a card\u0027s CVV\nor expiration date)."
        },
        {
          "name": "REFUND_ERROR",
          "description": "An error occurred while attempting to process a refund."
        }
      ],
      "description": "Indicates which high-level category of error has occurred during a\nrequest to the Connect API.",
      "x-release-status": "PUBLIC"
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "UNAUTHORIZED",
        "ACCESS_TOKEN_EXPIRED",
        "ACCESS_TOKEN_REVOKED",
        "FORBIDDEN",
        "INSUFFICIENT_SCOPES",
        "APPLICATION_DISABLED",
        "V1_APPLICATION",
        "V1_ACCESS_TOKEN",
        "CARD_PROCESSING_NOT_ENABLED",
        "BAD_REQUEST",
        "MISSING_REQUIRED_PARAMETER",
        "INCORRECT_TYPE",
        "INVALID_TIME",
        "INVALID_TIME_RANGE",
        "INVALID_VALUE",
        "INVALID_CURSOR",
        "UNKNOWN_QUERY_PARAMETER",
        "CONFLICTING_PARAMETERS",
        "EXPECTED_JSON_BODY",
        "INVALID_SORT_ORDER",
        "VALUE_REGEX_MISMATCH",
        "VALUE_TOO_SHORT",
        "VALUE_TOO_LONG",
        "VALUE_TOO_LOW",
        "VALUE_TOO_HIGH",
        "VALUE_EMPTY",
        "ARRAY_LENGTH_TOO_LONG",
        "ARRAY_LENGTH_TOO_SHORT",
        "ARRAY_EMPTY",
        "EXPECTED_BOOLEAN",
        "EXPECTED_INTEGER",
        "EXPECTED_FLOAT",
        "EXPECTED_STRING",
        "EXPECTED_OBJECT",
        "EXPECTED_ARRAY",
        "EXPECTED_MAP",
        "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
        "INVALID_ARRAY_VALUE",
        "INVALID_ENUM_VALUE",
        "INVALID_CONTENT_TYPE",
        "INVALID_FORM_VALUE",
        "ONE_INSTRUMENT_EXPECTED",
        "NO_FIELDS_SET",
        "DEPRECATED_FIELD_SET",
        "CARD_EXPIRED",
        "INVALID_EXPIRATION",
        "INVALID_EXPIRATION_YEAR",
        "INVALID_EXPIRATION_DATE",
        "UNSUPPORTED_CARD_BRAND",
        "UNSUPPORTED_ENTRY_METHOD",
        "INVALID_ENCRYPTED_CARD",
        "INVALID_CARD",
        "DELAYED_TRANSACTION_EXPIRED",
        "DELAYED_TRANSACTION_CANCELED",
        "DELAYED_TRANSACTION_CAPTURED",
        "DELAYED_TRANSACTION_FAILED",
        "CARD_TOKEN_EXPIRED",
        "CARD_TOKEN_USED",
        "AMOUNT_TOO_HIGH",
        "UNSUPPORTED_INSTRUMENT_TYPE",
        "REFUND_AMOUNT_INVALID",
        "REFUND_ALREADY_PENDING",
        "PAYMENT_NOT_REFUNDABLE",
        "INVALID_CARD_DATA",
        "LOCATION_MISMATCH",
        "IDEMPOTENCY_KEY_REUSED",
        "UNEXPECTED_VALUE",
        "SANDBOX_NOT_SUPPORTED",
        "INVALID_EMAIL_ADDRESS",
        "INVALID_PHONE_NUMBER",
        "CHECKOUT_EXPIRED",
        "BAD_CERTIFICATE",
        "CARD_DECLINED",
        "VERIFY_CVV_FAILURE",
        "VERIFY_AVS_FAILURE",
        "CARD_DECLINED_CALL_ISSUER",
        "NOT_FOUND",
        "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
        "METHOD_NOT_ALLOWED",
        "NOT_ACCEPTABLE",
        "REQUEST_TIMEOUT",
        "CONFLICT",
        "REQUEST_ENTITY_TOO_LARGE",
        "UNSUPPORTED_MEDIA_TYPE",
        "RATE_LIMITED",
        "NOT_IMPLEMENTED",
        "SERVICE_UNAVAILABLE",
        "GATEWAY_TIMEOUT"
      ],
      "x-enum-elements": [
        {
          "name": "INTERNAL_SERVER_ERROR",
          "description": ""
        },
        {
          "name": "UNAUTHORIZED",
          "description": ""
        },
        {
          "name": "ACCESS_TOKEN_EXPIRED",
          "description": ""
        },
        {
          "name": "ACCESS_TOKEN_REVOKED",
          "description": ""
        },
        {
          "name": "FORBIDDEN",
          "description": ""
        },
        {
          "name": "INSUFFICIENT_SCOPES",
          "description": ""
        },
        {
          "name": "APPLICATION_DISABLED",
          "description": ""
        },
        {
          "name": "V1_APPLICATION",
          "description": ""
        },
        {
          "name": "V1_ACCESS_TOKEN",
          "description": ""
        },
        {
          "name": "CARD_PROCESSING_NOT_ENABLED",
          "description": ""
        },
        {
          "name": "BAD_REQUEST",
          "description": ""
        },
        {
          "name": "MISSING_REQUIRED_PARAMETER",
          "description": ""
        },
        {
          "name": "INCORRECT_TYPE",
          "description": ""
        },
        {
          "name": "INVALID_TIME",
          "description": ""
        },
        {
          "name": "INVALID_TIME_RANGE",
          "description": ""
        },
        {
          "name": "INVALID_VALUE",
          "description": ""
        },
        {
          "name": "INVALID_CURSOR",
          "description": ""
        },
        {
          "name": "UNKNOWN_QUERY_PARAMETER",
          "description": ""
        },
        {
          "name": "CONFLICTING_PARAMETERS",
          "description": ""
        },
        {
          "name": "EXPECTED_JSON_BODY",
          "description": ""
        },
        {
          "name": "INVALID_SORT_ORDER",
          "description": ""
        },
        {
          "name": "VALUE_REGEX_MISMATCH",
          "description": ""
        },
        {
          "name": "VALUE_TOO_SHORT",
          "description": ""
        },
        {
          "name": "VALUE_TOO_LONG",
          "description": ""
        },
        {
          "name": "VALUE_TOO_LOW",
          "description": ""
        },
        {
          "name": "VALUE_TOO_HIGH",
          "description": ""
        },
        {
          "name": "VALUE_EMPTY",
          "description": ""
        },
        {
          "name": "ARRAY_LENGTH_TOO_LONG",
          "description": ""
        },
        {
          "name": "ARRAY_LENGTH_TOO_SHORT",
          "description": ""
        },
        {
          "name": "ARRAY_EMPTY",
          "description": ""
        },
        {
          "name": "EXPECTED_BOOLEAN",
          "description": ""
        },
        {
          "name": "EXPECTED_INTEGER",
          "description": ""
        },
        {
          "name": "EXPECTED_FLOAT",
          "description": ""
        },
        {
          "name": "EXPECTED_STRING",
          "description": ""
        },
        {
          "name": "EXPECTED_OBJECT",
          "description": ""
        },
        {
          "name": "EXPECTED_ARRAY",
          "description": ""
        },
        {
          "name": "EXPECTED_MAP",
          "description": ""
        },
        {
          "name": "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
          "description": ""
        },
        {
          "name": "INVALID_ARRAY_VALUE",
          "description": ""
        },
        {
          "name": "INVALID_ENUM_VALUE",
          "description": ""
        },
        {
          "name": "INVALID_CONTENT_TYPE",
          "description": ""
        },
        {
          "name": "INVALID_FORM_VALUE",
          "description": ""
        },
        {
          "name": "ONE_INSTRUMENT_EXPECTED",
          "description": ""
        },
        {
          "name": "NO_FIELDS_SET",
          "description": ""
        },
        {
          "name": "DEPRECATED_FIELD_SET",
          "description": ""
        },
        {
          "name": "CARD_EXPIRED",
          "description": ""
        },
        {
          "name": "INVALID_EXPIRATION",
          "description": ""
        },
        {
          "name": "INVALID_EXPIRATION_YEAR",
          "description": ""
        },
        {
          "name": "INVALID_EXPIRATION_DATE",
          "description": ""
        },
        {
          "name": "UNSUPPORTED_CARD_BRAND",
          "description": ""
        },
        {
          "name": "UNSUPPORTED_ENTRY_METHOD",
          "description": ""
        },
        {
          "name": "INVALID_ENCRYPTED_CARD",
          "description": ""
        },
        {
          "name": "INVALID_CARD",
          "description": ""
        },
        {
          "name": "DELAYED_TRANSACTION_EXPIRED",
          "description": ""
        },
        {
          "name": "DELAYED_TRANSACTION_CANCELED",
          "description": ""
        },
        {
          "name": "DELAYED_TRANSACTION_CAPTURED",
          "description": ""
        },
        {
          "name": "DELAYED_TRANSACTION_FAILED",
          "description": ""
        },
        {
          "name": "CARD_TOKEN_EXPIRED",
          "description": ""
        },
        {
          "name": "CARD_TOKEN_USED",
          "description": ""
        },
        {
          "name": "AMOUNT_TOO_HIGH",
          "description": ""
        },
        {
          "name": "UNSUPPORTED_INSTRUMENT_TYPE",
          "description": ""
        },
        {
          "name": "REFUND_AMOUNT_INVALID",
          "description": ""
        },
        {
          "name": "REFUND_ALREADY_PENDING",
          "description": ""
        },
        {
          "name": "PAYMENT_NOT_REFUNDABLE",
          "description": ""
        },
        {
          "name": "INVALID_CARD_DATA",
          "description": ""
        },
        {
          "name": "LOCATION_MISMATCH",
          "description": ""
        },
        {
          "name": "IDEMPOTENCY_KEY_REUSED",
          "description": ""
        },
        {
          "name": "UNEXPECTED_VALUE",
          "description": ""
        },
        {
          "name": "SANDBOX_NOT_SUPPORTED",
          "description": ""
        },
        {
          "name": "INVALID_EMAIL_ADDRESS",
          "description": ""
        },
        {
          "name": "INVALID_PHONE_NUMBER",
          "description": ""
        },
        {
          "name": "CHECKOUT_EXPIRED",
          "description": ""
        },
        {
          "name": "BAD_CERTIFICATE",
          "description": ""
        },
        {
          "name": "CARD_DECLINED",
          "description": ""
        },
        {
          "name": "VERIFY_CVV_FAILURE",
          "description": ""
        },
        {
          "name": "VERIFY_AVS_FAILURE",
          "description": ""
        },
        {
          "name": "CARD_DECLINED_CALL_ISSUER",
          "description": ""
        },
        {
          "name": "NOT_FOUND",
          "description": ""
        },
        {
          "name": "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
          "description": ""
        },
        {
          "name": "METHOD_NOT_ALLOWED",
          "description": ""
        },
        {
          "name": "NOT_ACCEPTABLE",
          "description": ""
        },
        {
          "name": "REQUEST_TIMEOUT",
          "description": ""
        },
        {
          "name": "CONFLICT",
          "description": ""
        },
        {
          "name": "REQUEST_ENTITY_TOO_LARGE",
          "description": ""
        },
        {
          "name": "UNSUPPORTED_MEDIA_TYPE",
          "description": ""
        },
        {
          "name": "RATE_LIMITED",
          "description": ""
        },
        {
          "name": "NOT_IMPLEMENTED",
          "description": ""
        },
        {
          "name": "SERVICE_UNAVAILABLE",
          "description": ""
        },
        {
          "name": "GATEWAY_TIMEOUT",
          "description": ""
        }
      ],
      "description": "Indicates specific errors that can occur during a request to the\nConnect API.",
      "x-release-status": "PUBLIC"
    },
    "InventoryAlertType": {
      "type": "string",
      "enum": [
        "NONE",
        "LOW_QUANTITY"
      ],
      "x-enum-elements": [
        {
          "name": "NONE",
          "description": "The variation does not display an alert."
        },
        {
          "name": "LOW_QUANTITY",
          "description": "The variation generates an alert when its quantity is low."
        }
      ],
      "description": "Indicates whether Square should alert the merchant when the inventory quantity of a [CatalogItemVariation](#type-catalogitemvariation) is low.",
      "x-release-status": "PUBLIC"
    },
    "InventoryChangeType": {
      "type": "string",
      "enum": [
        "PHYSICAL_COUNT",
        "ADJUSTMENT",
        "TRANSFER"
      ],
      "x-enum-elements": [
        {
          "name": "PHYSICAL_COUNT",
          "description": "The change occurred as part of a physical count update."
        },
        {
          "name": "ADJUSTMENT",
          "description": "The change occurred as part of the normal lifecycle of goods\n(e.g., as an inventory adjustment)."
        },
        {
          "name": "TRANSFER",
          "description": "The change occurred as part of an inventory transfer."
        }
      ],
      "description": "Indicates how the inventory change was applied to a tracked quantity of items.",
      "x-release-status": "PUBLIC"
    },
    "InventoryState": {
      "type": "string",
      "enum": [
        "CUSTOM",
        "IN_STOCK",
        "SOLD",
        "RETURNED_BY_CUSTOMER",
        "RESERVED_FOR_SALE",
        "SOLD_ONLINE",
        "ORDERED_FROM_VENDOR",
        "RECEIVED_FROM_VENDOR",
        "IN_TRANSIT_TO",
        "NONE",
        "WASTE",
        "UNLINKED_RETURN"
      ],
      "x-enum-elements": [
        {
          "name": "CUSTOM",
          "description": "The related quantity of items are in a custom state. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
        },
        {
          "name": "IN_STOCK",
          "description": "The related quantity of items are on hand and available for sale."
        },
        {
          "name": "SOLD",
          "description": "The related quantity of items were sold as part of an itemized\ntransaction. Quantities in the `SOLD` state are no longer tracked."
        },
        {
          "name": "RETURNED_BY_CUSTOMER",
          "description": "The related quantity of items were returned through the Square Point\nof Sale application, but are not yet available for sale. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
        },
        {
          "name": "RESERVED_FOR_SALE",
          "description": "The related quantity of items are on hand, but not currently\navailable for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
        },
        {
          "name": "SOLD_ONLINE",
          "description": "The related quantity of items were sold online. **READ-ONLY**: the\nInventory API cannot move quantities to or from this state."
        },
        {
          "name": "ORDERED_FROM_VENDOR",
          "description": "The related quantity of items were ordered from a vendor but not yet\nreceived. **READ-ONLY**: the Inventory API cannot move quantities to or\nfrom this state."
        },
        {
          "name": "RECEIVED_FROM_VENDOR",
          "description": "The related quantity of items were received from a vendor but are\nnot yet available for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
        },
        {
          "name": "IN_TRANSIT_TO",
          "description": "The related quantity of items are in transit between locations.\n*READ-ONLY**: the Inventory API cannot move quantities to or from this\nstate."
        },
        {
          "name": "NONE",
          "description": "A placeholder indicating that the related quantity of items are not\ncurrently tracked in Square. Transferring quantities from the `NONE` state\nto a tracked state (e.g., `IN_STOCK`) introduces stock into the system."
        },
        {
          "name": "WASTE",
          "description": "The related quantity of items are lost or damaged and cannot be\nsold."
        },
        {
          "name": "UNLINKED_RETURN",
          "description": "The related quantity of items were returned but not linked to a\nprevious transaction. Unlinked returns are not tracked in Square.\nTransferring a quantity from `UNLINKED_RETURN` to a tracked state (e.g.,\n`IN_STOCK`) introduces new stock into the system."
        }
      ],
      "description": "Indicates the state of a tracked item quantity in the lifecycle of goods.",
      "x-release-status": "PUBLIC"
    },
    "LocationCapability": {
      "type": "string",
      "enum": [
        "CREDIT_CARD_PROCESSING"
      ],
      "x-enum-elements": [
        {
          "name": "CREDIT_CARD_PROCESSING",
          "description": "The location can process credit cards with Square.\n\nIf this value is not present in a [`Location`](#type-location)\u0027s\u0027\n`capabilities` array, the location _cannot_ process credit cards."
        }
      ],
      "description": "Indicates payment capabilities that a business\u0027s location might or\nmight not have enabled.",
      "x-release-status": "PUBLIC"
    },
    "LocationStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "A fully operational location. The location can be used across all Square products and APIs."
        },
        {
          "name": "INACTIVE",
          "description": "A functionally limited location. The location can only be used via Square APIs.\n\n__NOTE__: We __strongly__ discourage the use of inactive locations.\nMaking API calls with inactive locations will cause complications\nif the restrictions on inactive locations increase in the future."
        }
      ],
      "description": "Indicates the location\u0027s status.",
      "x-release-status": "PUBLIC"
    },
    "LocationType": {
      "type": "string",
      "enum": [
        "PHYSICAL",
        "MOBILE"
      ],
      "x-enum-elements": [
        {
          "name": "PHYSICAL",
          "description": "A physical location of a business."
        },
        {
          "name": "MOBILE",
          "description": "A location without a physical address. For example: mobile food truck, online store, phone app."
        }
      ],
      "description": "Indicates the location\u0027s type.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentPickupDetailsScheduleType": {
      "type": "string",
      "enum": [
        "SCHEDULED",
        "ASAP"
      ],
      "x-enum-elements": [
        {
          "name": "SCHEDULED",
          "description": "Indicates the fulfillment will be picked up at a scheduled pickup time."
        },
        {
          "name": "ASAP",
          "description": "Indicates the fulfillment should be prepared immediately."
        }
      ],
      "description": "The schedule type of the pickup fulfillment.",
      "x-release-status": "BETA"
    },
    "OrderFulfillmentState": {
      "type": "string",
      "enum": [
        "PROPOSED",
        "RESERVED",
        "PREPARED",
        "COMPLETED",
        "CANCELED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "PROPOSED",
          "description": "Indicates the fulfillment has been proposed."
        },
        {
          "name": "RESERVED",
          "description": "Indicates the fulfillment has been reserved."
        },
        {
          "name": "PREPARED",
          "description": "Indicates the fulfillment has been prepared."
        },
        {
          "name": "COMPLETED",
          "description": "Indicates the fulfillment was successfully completed."
        },
        {
          "name": "CANCELED",
          "description": "Indicates the fulfillment was canceled by either the merchant or buyer."
        },
        {
          "name": "FAILED",
          "description": "Indicates the fulfillment failed to be completed but was not explicitly canceled."
        }
      ],
      "description": "The state of the fulfillment.",
      "x-release-status": "BETA"
    },
    "OrderFulfillmentType": {
      "type": "string",
      "enum": [
        "PICKUP"
      ],
      "x-enum-elements": [
        {
          "name": "PICKUP",
          "description": "A fulfillment to be picked up by a recipient."
        }
      ],
      "description": "The type of fulfillment.",
      "x-release-status": "BETA"
    },
    "OrderLineItemDiscountScope": {
      "type": "string",
      "enum": [
        "OTHER_DISCOUNT_SCOPE",
        "LINE_ITEM",
        "ORDER"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_DISCOUNT_SCOPE",
          "description": "Used for reporting only.\nThe original transaction discount scope is currently not supported by the API."
        },
        {
          "name": "LINE_ITEM",
          "description": "The discount should be applied to a single line item."
        },
        {
          "name": "ORDER",
          "description": "The discount should be applied to the entire order."
        }
      ],
      "description": "Indicates whether this is a line item or order level discount.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemDiscountType": {
      "type": "string",
      "enum": [
        "UNKNOWN_DISCOUNT",
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_DISCOUNT",
          "description": "Used for reporting only.\nThe original transaction discount type is currently not supported by the API."
        },
        {
          "name": "FIXED_PERCENTAGE",
          "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
        },
        {
          "name": "FIXED_AMOUNT",
          "description": "Apply the discount as a fixed monetary value (e.g., $1.00) off the item price."
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": "Apply the discount as a variable percentage off the item price.\n\nThe variable percentage is defined in Register POS apps. Specific value is assigned at the time of the purchase."
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": "Apply the discount as a variable amount off the item price.\n\nThe variable amount is defined in Square POS app. Specific value is assigned at the time of the purchase."
        }
      ],
      "description": "Indicates how the discount is applied to the associated line item or order.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTaxScope": {
      "type": "string",
      "enum": [
        "OTHER_TAX_SCOPE",
        "LINE_ITEM",
        "ORDER"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_TAX_SCOPE",
          "description": "Used for reporting only.\nThe original transaction tax scope is currently not supported by the API."
        },
        {
          "name": "LINE_ITEM",
          "description": "The tax should be applied to a single line item."
        },
        {
          "name": "ORDER",
          "description": "The tax should be applied to the entire order."
        }
      ],
      "description": "Indicates whether this is a line item or order level tax.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTaxType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TAX",
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_TAX",
          "description": "Used for reporting only.\nThe original transaction tax type is currently not supported by the API."
        },
        {
          "name": "ADDITIVE",
          "description": "The tax is an additive tax. The tax amount is added on top of the price.\nFor example, a $1.00 item with a 10% additive tax would have a total cost to the buyer of $1.10."
        },
        {
          "name": "INCLUSIVE",
          "description": "The tax is an inclusive tax. Inclusive taxes are already included in the line item price or order total.\nFor example, a $1.00 item with a 10% inclusive tax would have a pre-tax cost of $0.91 (91 cents)\nand a $0.09 (9 cents) tax for a total cost of $1 to the buyer."
        }
      ],
      "description": "Indicates how the tax is applied to the associated line item or order.",
      "x-release-status": "PUBLIC"
    },
    "Product": {
      "type": "string",
      "enum": [
        "SQUARE_POS",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "DASHBOARD",
        "ITEM_LIBRARY_IMPORT",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "SQUARE_POS",
          "description": "Square Point of Sale application."
        },
        {
          "name": "EXTERNAL_API",
          "description": "Square Connect APIs (Transactions API, Checkout API)."
        },
        {
          "name": "BILLING",
          "description": "A Square subscription (various products)."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Square Appointments."
        },
        {
          "name": "INVOICES",
          "description": "Square Invoices."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Square Online Store."
        },
        {
          "name": "PAYROLL",
          "description": "Square Payroll."
        },
        {
          "name": "DASHBOARD",
          "description": "Square Dashboard"
        },
        {
          "name": "ITEM_LIBRARY_IMPORT",
          "description": "Item Library Import"
        },
        {
          "name": "OTHER",
          "description": "A Square product that does not match any other value."
        }
      ],
      "description": "Indicates the Square product used to generate an inventory change.",
      "x-release-status": "PUBLIC"
    },
    "RefundStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "APPROVED",
        "REJECTED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": "The refund is pending."
        },
        {
          "name": "APPROVED",
          "description": "The refund has been approved by Square."
        },
        {
          "name": "REJECTED",
          "description": "The refund has been rejected by Square."
        },
        {
          "name": "FAILED",
          "description": "The refund failed."
        }
      ],
      "description": "Indicates a refund\u0027s current status.",
      "x-release-status": "PUBLIC"
    },
    "RegisterDomainResponseStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "VERIFIED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": "The domain is added, but not verified."
        },
        {
          "name": "VERIFIED",
          "description": "The domain is added and verified. It can be used to accept Apple Pay transactions."
        }
      ],
      "description": "The status of domain registration.",
      "x-release-status": "PUBLIC"
    },
    "ShiftFilterStatus": {
      "type": "string",
      "enum": [
        "OPEN",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "Shifts that have been started and not ended."
        },
        {
          "name": "CLOSED",
          "description": "Shifts that have been started and ended."
        }
      ],
      "description": "Specifies the `status` of `Shift` records to be returned.",
      "x-release-status": "PUBLIC"
    },
    "ShiftSortField": {
      "type": "string",
      "enum": [
        "START_AT",
        "END_AT",
        "CREATED_AT",
        "UPDATED_AT"
      ],
      "x-enum-elements": [
        {
          "name": "START_AT",
          "description": "The start date/time of a `Shift`"
        },
        {
          "name": "END_AT",
          "description": "The end date/time of a `Shift`"
        },
        {
          "name": "CREATED_AT",
          "description": "The date/time that a `Shift` is created"
        },
        {
          "name": "UPDATED_AT",
          "description": "The most recent date/time that a `Shift` is updated"
        }
      ],
      "description": "Enumerates the `Shift` fields to sort on.",
      "x-release-status": "PUBLIC"
    },
    "ShiftStatus": {
      "type": "string",
      "enum": [
        "OPEN",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "Employee started a work shift and the shift is not complete"
        },
        {
          "name": "CLOSED",
          "description": "Employee started and ended a work shift."
        }
      ],
      "description": "Enumerates the possible status of a `Shift`",
      "x-release-status": "PUBLIC"
    },
    "ShiftWorkdayMatcher": {
      "type": "string",
      "enum": [
        "START_AT",
        "END_AT",
        "INTERSECTION"
      ],
      "x-enum-elements": [
        {
          "name": "START_AT",
          "description": "All shifts that start on or after the specified workday"
        },
        {
          "name": "END_AT",
          "description": "All shifts that end on or before the specified workday"
        },
        {
          "name": "INTERSECTION",
          "description": "All shifts that start between the start and end workdays (inclusive)"
        }
      ],
      "description": "Defines the logic used to apply a workday filter.",
      "x-release-status": "PUBLIC"
    },
    "SortOrder": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "x-enum-elements": [
        {
          "name": "DESC",
          "description": "The results are returned in descending (e.g., newest-first or Z-A) order."
        },
        {
          "name": "ASC",
          "description": "The results are returned in ascending (e.g., oldest-first or A-Z) order."
        }
      ],
      "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
      "x-release-status": "PUBLIC"
    },
    "TaxCalculationPhase": {
      "type": "string",
      "enum": [
        "TAX_SUBTOTAL_PHASE",
        "TAX_TOTAL_PHASE"
      ],
      "x-enum-elements": [
        {
          "name": "TAX_SUBTOTAL_PHASE",
          "description": "The fee is calculated based on the payment\u0027s subtotal."
        },
        {
          "name": "TAX_TOTAL_PHASE",
          "description": "The fee is calculated based on the payment\u0027s total."
        }
      ],
      "description": "When to calculate the taxes due on a cart.",
      "x-release-status": "PUBLIC"
    },
    "TaxInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": "The tax is an additive tax. The tax amount is added on top of the\n[CatalogItemVariation](#type-catalogitemvariation) price. For example, a $1.00 item with a 10% additive\ntax would have a total cost to the buyer of $1.10."
        },
        {
          "name": "INCLUSIVE",
          "description": "The tax is an inclusive tax. The tax amount is included in the\n[CatalogItemVariation](#type-catalogitemvariation) price. For example, a $1.00 item with a 10% inclusive\ntax would have a total cost to the buyer of $1.00, with $0.91 (91 cents) of that total being the cost of the item\nand $0.09 (9 cents) being tax."
        }
      ],
      "description": "Whether to the tax amount should be additional to or included in to the [CatalogItem](#type-catalogitem) price.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetailsEntryMethod": {
      "type": "string",
      "enum": [
        "SWIPED",
        "KEYED",
        "EMV",
        "ON_FILE",
        "CONTACTLESS"
      ],
      "x-enum-elements": [
        {
          "name": "SWIPED",
          "description": "The card was swiped through a Square reader or Square stand."
        },
        {
          "name": "KEYED",
          "description": "The card information was keyed manually into Square Point of Sale or a\nSquare-hosted web form."
        },
        {
          "name": "EMV",
          "description": "The card was processed via EMV with a Square reader."
        },
        {
          "name": "ON_FILE",
          "description": "The buyer\u0027s card details were already on file with Square."
        },
        {
          "name": "CONTACTLESS",
          "description": "The card was processed via a contactless (i.e., NFC) transaction\nwith a Square reader."
        }
      ],
      "description": "Indicates the method used to enter the card\u0027s details.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetailsStatus": {
      "type": "string",
      "enum": [
        "AUTHORIZED",
        "CAPTURED",
        "VOIDED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "AUTHORIZED",
          "description": "The card transaction has been authorized but not yet captured."
        },
        {
          "name": "CAPTURED",
          "description": "The card transaction was authorized and subsequently captured (i.e., completed)."
        },
        {
          "name": "VOIDED",
          "description": "The card transaction was authorized and subsequently voided (i.e., canceled)."
        },
        {
          "name": "FAILED",
          "description": "The card transaction failed."
        }
      ],
      "description": "Indicates the card transaction\u0027s current status.",
      "x-release-status": "PUBLIC"
    },
    "TenderType": {
      "type": "string",
      "enum": [
        "CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "SQUARE_GIFT_CARD",
        "NO_SALE",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CARD",
          "description": "A credit card."
        },
        {
          "name": "CASH",
          "description": "Cash."
        },
        {
          "name": "THIRD_PARTY_CARD",
          "description": "A credit card processed with a card processor other than Square.\n\nThis value applies only to merchants in countries where Square does not\nyet provide card processing."
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": "A Square gift card."
        },
        {
          "name": "NO_SALE",
          "description": "This tender represents the register being opened for a \"no sale\" event."
        },
        {
          "name": "OTHER",
          "description": "A form of tender that does not match any other value."
        }
      ],
      "description": "Indicates a tender\u0027s type.",
      "x-release-status": "PUBLIC"
    },
    "TransactionProduct": {
      "type": "string",
      "enum": [
        "REGISTER",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "REGISTER",
          "description": "Square Point of Sale."
        },
        {
          "name": "EXTERNAL_API",
          "description": "The Square Connect API."
        },
        {
          "name": "BILLING",
          "description": "A Square subscription for one of multiple products."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Square Appointments."
        },
        {
          "name": "INVOICES",
          "description": "Square Invoices."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Square Online Store."
        },
        {
          "name": "PAYROLL",
          "description": "Square Payroll."
        },
        {
          "name": "OTHER",
          "description": "A Square product that does not match any other value."
        }
      ],
      "description": "Indicates the Square product used to process a transaction.",
      "x-release-status": "PUBLIC"
    },
    "V1AdjustInventoryRequestAdjustmentType": {
      "type": "string",
      "enum": [
        "SALE",
        "RECEIVE_STOCK",
        "MANUAL_ADJUST"
      ],
      "x-enum-elements": [
        {
          "name": "SALE",
          "description": ""
        },
        {
          "name": "RECEIVE_STOCK",
          "description": ""
        },
        {
          "name": "MANUAL_ADJUST",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1BankAccountType": {
      "type": "string",
      "enum": [
        "BUSINESS_CHECKING",
        "CHECKING",
        "INVESTMENT",
        "LOAN",
        "SAVINGS",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "BUSINESS_CHECKING",
          "description": ""
        },
        {
          "name": "CHECKING",
          "description": ""
        },
        {
          "name": "INVESTMENT",
          "description": ""
        },
        {
          "name": "LOAN",
          "description": ""
        },
        {
          "name": "SAVINGS",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CashDrawerEventEventType": {
      "type": "string",
      "enum": [
        "NO_SALE",
        "CASH_TENDER_PAYMENT",
        "OTHER_TENDER_PAYMENT",
        "CASH_TENDER_CANCELED_PAYMENT",
        "OTHER_TENDER_CANCELED_PAYMENT",
        "CASH_TENDER_REFUND",
        "OTHER_TENDER_REFUND",
        "PAID_IN",
        "PAID_OUT"
      ],
      "x-enum-elements": [
        {
          "name": "NO_SALE",
          "description": ""
        },
        {
          "name": "CASH_TENDER_PAYMENT",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_PAYMENT",
          "description": ""
        },
        {
          "name": "CASH_TENDER_CANCELED_PAYMENT",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_CANCELED_PAYMENT",
          "description": ""
        },
        {
          "name": "CASH_TENDER_REFUND",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_REFUND",
          "description": ""
        },
        {
          "name": "PAID_IN",
          "description": ""
        },
        {
          "name": "PAID_OUT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CashDrawerShiftEventType": {
      "type": "string",
      "enum": [
        "OPEN",
        "ENDED",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": ""
        },
        {
          "name": "ENDED",
          "description": ""
        },
        {
          "name": "CLOSED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateRefundRequestType": {
      "type": "string",
      "enum": [
        "FULL",
        "PARTIAL"
      ],
      "x-enum-elements": [
        {
          "name": "FULL",
          "description": ""
        },
        {
          "name": "PARTIAL",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DiscountColor": {
      "type": "string",
      "enum": [
        "9da2a6",
        "4ab200",
        "0b8000",
        "2952cc",
        "a82ee5",
        "e5457a",
        "b21212",
        "593c00",
        "e5BF00"
      ],
      "x-enum-elements": [
        {
          "name": "9da2a6",
          "description": ""
        },
        {
          "name": "4ab200",
          "description": ""
        },
        {
          "name": "0b8000",
          "description": ""
        },
        {
          "name": "2952cc",
          "description": ""
        },
        {
          "name": "a82ee5",
          "description": ""
        },
        {
          "name": "e5457a",
          "description": ""
        },
        {
          "name": "b21212",
          "description": ""
        },
        {
          "name": "593c00",
          "description": ""
        },
        {
          "name": "e5BF00",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DiscountDiscountType": {
      "type": "string",
      "enum": [
        "FIXED",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED",
          "description": ""
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": ""
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1EmployeeRolePermissions": {
      "type": "string",
      "enum": [
        "REGISTER_ACCESS_SALES_HISTORY",
        "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
        "REGISTER_CHANGE_SETTINGS",
        "REGISTER_EDIT_ITEM",
        "REGISTER_ISSUE_REFUNDS",
        "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
        "REGISTER_VIEW_SUMMARY_REPORTS"
      ],
      "x-enum-elements": [
        {
          "name": "REGISTER_ACCESS_SALES_HISTORY",
          "description": ""
        },
        {
          "name": "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
          "description": ""
        },
        {
          "name": "REGISTER_CHANGE_SETTINGS",
          "description": ""
        },
        {
          "name": "REGISTER_EDIT_ITEM",
          "description": ""
        },
        {
          "name": "REGISTER_ISSUE_REFUNDS",
          "description": ""
        },
        {
          "name": "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
          "description": ""
        },
        {
          "name": "REGISTER_VIEW_SUMMARY_REPORTS",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1EmployeeStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": ""
        },
        {
          "name": "INACTIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1FeeAdjustmentType": {
      "type": "string",
      "enum": [
        "TAX"
      ],
      "x-enum-elements": [
        {
          "name": "TAX",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1FeeCalculationPhase": {
      "type": "string",
      "enum": [
        "FEE_SUBTOTAL_PHASE",
        "OTHER",
        "FEE_TOTAL_PHASE"
      ],
      "x-enum-elements": [
        {
          "name": "FEE_SUBTOTAL_PHASE",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "FEE_TOTAL_PHASE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1FeeInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": ""
        },
        {
          "name": "INCLUSIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1FeeType": {
      "type": "string",
      "enum": [
        "CA_GST",
        "CA_HST",
        "CA_PST",
        "CA_QST",
        "JP_CONSUMPTION_TAX",
        "CA_PEI_PST",
        "US_SALES_TAX",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CA_GST",
          "description": ""
        },
        {
          "name": "CA_HST",
          "description": ""
        },
        {
          "name": "CA_PST",
          "description": ""
        },
        {
          "name": "CA_QST",
          "description": ""
        },
        {
          "name": "JP_CONSUMPTION_TAX",
          "description": ""
        },
        {
          "name": "CA_PEI_PST",
          "description": ""
        },
        {
          "name": "US_SALES_TAX",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ItemColor": {
      "type": "string",
      "enum": [
        "9da2a6",
        "4ab200",
        "0b8000",
        "2952cc",
        "a82ee5",
        "e5457a",
        "b21212",
        "593c00",
        "e5BF00"
      ],
      "x-enum-elements": [
        {
          "name": "9da2a6",
          "description": ""
        },
        {
          "name": "4ab200",
          "description": ""
        },
        {
          "name": "0b8000",
          "description": ""
        },
        {
          "name": "2952cc",
          "description": ""
        },
        {
          "name": "a82ee5",
          "description": ""
        },
        {
          "name": "e5457a",
          "description": ""
        },
        {
          "name": "b21212",
          "description": ""
        },
        {
          "name": "593c00",
          "description": ""
        },
        {
          "name": "e5BF00",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ItemType": {
      "type": "string",
      "enum": [
        "NORMAL",
        "GIFT_CARD",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "NORMAL",
          "description": ""
        },
        {
          "name": "GIFT_CARD",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ItemVisibility": {
      "type": "string",
      "enum": [
        "PUBLIC",
        "PRIVATE"
      ],
      "x-enum-elements": [
        {
          "name": "PUBLIC",
          "description": ""
        },
        {
          "name": "PRIVATE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeesRequestStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": ""
        },
        {
          "name": "INACTIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsRequestStatus": {
      "type": "string",
      "enum": [
        "SENT",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "SENT",
          "description": ""
        },
        {
          "name": "FAILED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1MerchantAccountType": {
      "type": "string",
      "enum": [
        "LOCATION",
        "BUSINESS"
      ],
      "x-enum-elements": [
        {
          "name": "LOCATION",
          "description": ""
        },
        {
          "name": "BUSINESS",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1MerchantBusinessType": {
      "type": "string",
      "enum": [
        "ACCOUNTING",
        "APPAREL_AND_ACCESSORY_SHOPS",
        "ART_DEALERS_GALLERIES",
        "ART_DESIGN_AND_PHOTOGRAPHY",
        "BAR_CLUB_LOUNGE",
        "BEAUTY_AND_BARBER_SHOPS",
        "BOOK_STORES",
        "BUSINESS_SERVICES",
        "CATERING",
        "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
        "CHARITIBLE_ORGS",
        "CLEANING_SERVICES",
        "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
        "CONSULTANT",
        "CONTRACTORS",
        "DELIVERY_SERVICES",
        "DENTISTRY",
        "EDUCATION",
        "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
        "FOOD_TRUCK_CART",
        "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
        "FURNITURE_HOME_GOODS",
        "HOTELS_AND_LODGING",
        "INDIVIDUAL_USE",
        "JEWELRY_AND_WATCHES",
        "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
        "LANGUAGE_SCHOOLS",
        "LEGAL_SERVICES",
        "MEDICAL_PRACTITIONERS",
        "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
        "MEMBERSHIP_ORGANIZATIONS",
        "MUSIC_AND_ENTERTAINMENT",
        "OTHER",
        "OUTDOOR_MARKETS",
        "PERSONAL_SERVICES",
        "POLITICAL_ORGANIZATIONS",
        "PROFESSIONAL_SERVICES",
        "REAL_ESTATE",
        "RECREATION_SERVICES",
        "REPAIR_SHOPS_AND_RELATED_SERVICES",
        "RESTAURANTS",
        "RETAIL_SHOPS",
        "SCHOOLS_AND_EDUCATIONAL_SERVICES",
        "SPORTING_GOODS",
        "TAXICABS_AND_LIMOUSINES",
        "TICKET_SALES",
        "TOURISM",
        "TRAVEL_TOURISM",
        "VETERINARY_SERVICES",
        "WEB_DEV_DESIGN"
      ],
      "x-enum-elements": [
        {
          "name": "ACCOUNTING",
          "description": ""
        },
        {
          "name": "APPAREL_AND_ACCESSORY_SHOPS",
          "description": ""
        },
        {
          "name": "ART_DEALERS_GALLERIES",
          "description": ""
        },
        {
          "name": "ART_DESIGN_AND_PHOTOGRAPHY",
          "description": ""
        },
        {
          "name": "BAR_CLUB_LOUNGE",
          "description": ""
        },
        {
          "name": "BEAUTY_AND_BARBER_SHOPS",
          "description": ""
        },
        {
          "name": "BOOK_STORES",
          "description": ""
        },
        {
          "name": "BUSINESS_SERVICES",
          "description": ""
        },
        {
          "name": "CATERING",
          "description": ""
        },
        {
          "name": "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "CHARITIBLE_ORGS",
          "description": ""
        },
        {
          "name": "CLEANING_SERVICES",
          "description": ""
        },
        {
          "name": "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
          "description": ""
        },
        {
          "name": "CONSULTANT",
          "description": ""
        },
        {
          "name": "CONTRACTORS",
          "description": ""
        },
        {
          "name": "DELIVERY_SERVICES",
          "description": ""
        },
        {
          "name": "DENTISTRY",
          "description": ""
        },
        {
          "name": "EDUCATION",
          "description": ""
        },
        {
          "name": "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
          "description": ""
        },
        {
          "name": "FOOD_TRUCK_CART",
          "description": ""
        },
        {
          "name": "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
          "description": ""
        },
        {
          "name": "FURNITURE_HOME_GOODS",
          "description": ""
        },
        {
          "name": "HOTELS_AND_LODGING",
          "description": ""
        },
        {
          "name": "INDIVIDUAL_USE",
          "description": ""
        },
        {
          "name": "JEWELRY_AND_WATCHES",
          "description": ""
        },
        {
          "name": "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
          "description": ""
        },
        {
          "name": "LANGUAGE_SCHOOLS",
          "description": ""
        },
        {
          "name": "LEGAL_SERVICES",
          "description": ""
        },
        {
          "name": "MEDICAL_PRACTITIONERS",
          "description": ""
        },
        {
          "name": "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
          "description": ""
        },
        {
          "name": "MEMBERSHIP_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "MUSIC_AND_ENTERTAINMENT",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "OUTDOOR_MARKETS",
          "description": ""
        },
        {
          "name": "PERSONAL_SERVICES",
          "description": ""
        },
        {
          "name": "POLITICAL_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "PROFESSIONAL_SERVICES",
          "description": ""
        },
        {
          "name": "REAL_ESTATE",
          "description": ""
        },
        {
          "name": "RECREATION_SERVICES",
          "description": ""
        },
        {
          "name": "REPAIR_SHOPS_AND_RELATED_SERVICES",
          "description": ""
        },
        {
          "name": "RESTAURANTS",
          "description": ""
        },
        {
          "name": "RETAIL_SHOPS",
          "description": ""
        },
        {
          "name": "SCHOOLS_AND_EDUCATIONAL_SERVICES",
          "description": ""
        },
        {
          "name": "SPORTING_GOODS",
          "description": ""
        },
        {
          "name": "TAXICABS_AND_LIMOUSINES",
          "description": ""
        },
        {
          "name": "TICKET_SALES",
          "description": ""
        },
        {
          "name": "TOURISM",
          "description": ""
        },
        {
          "name": "TRAVEL_TOURISM",
          "description": ""
        },
        {
          "name": "VETERINARY_SERVICES",
          "description": ""
        },
        {
          "name": "WEB_DEV_DESIGN",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ModifierListSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": ""
        },
        {
          "name": "MULTIPLE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1OrderHistoryEntryAction": {
      "type": "string",
      "enum": [
        "ORDER_PLACED",
        "DECLINED",
        "PAYMENT_RECEIVED",
        "CANCELED",
        "COMPLETED",
        "REFUNDED",
        "EXPIRED"
      ],
      "x-enum-elements": [
        {
          "name": "ORDER_PLACED",
          "description": ""
        },
        {
          "name": "DECLINED",
          "description": ""
        },
        {
          "name": "PAYMENT_RECEIVED",
          "description": ""
        },
        {
          "name": "CANCELED",
          "description": ""
        },
        {
          "name": "COMPLETED",
          "description": ""
        },
        {
          "name": "REFUNDED",
          "description": ""
        },
        {
          "name": "EXPIRED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1OrderState": {
      "type": "string",
      "enum": [
        "PENDING",
        "OPEN",
        "COMPLETED",
        "CANCELED",
        "REFUNDED",
        "REJECTED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": ""
        },
        {
          "name": "OPEN",
          "description": ""
        },
        {
          "name": "COMPLETED",
          "description": ""
        },
        {
          "name": "CANCELED",
          "description": ""
        },
        {
          "name": "REFUNDED",
          "description": ""
        },
        {
          "name": "REJECTED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1PageCellObjectType": {
      "type": "string",
      "enum": [
        "ITEM",
        "DISCOUNT",
        "CATEGORY",
        "PLACEHOLDER"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": ""
        },
        {
          "name": "DISCOUNT",
          "description": ""
        },
        {
          "name": "CATEGORY",
          "description": ""
        },
        {
          "name": "PLACEHOLDER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PageCellPlaceholderType": {
      "type": "string",
      "enum": [
        "ALL_ITEMS",
        "DISCOUNTS_CATEGORY",
        "REWARDS_FINDER"
      ],
      "x-enum-elements": [
        {
          "name": "ALL_ITEMS",
          "description": ""
        },
        {
          "name": "DISCOUNTS_CATEGORY",
          "description": ""
        },
        {
          "name": "REWARDS_FINDER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentItemizationItemizationType": {
      "type": "string",
      "enum": [
        "ITEM",
        "CUSTOM_AMOUNT",
        "GIFT_CARD_ACTIVATION",
        "GIFT_CARD_RELOAD",
        "GIFT_CARD_UNKNOWN",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": ""
        },
        {
          "name": "CUSTOM_AMOUNT",
          "description": ""
        },
        {
          "name": "GIFT_CARD_ACTIVATION",
          "description": ""
        },
        {
          "name": "GIFT_CARD_RELOAD",
          "description": ""
        },
        {
          "name": "GIFT_CARD_UNKNOWN",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentSurchargeType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AUTO_GRATUITY",
        "CUSTOM"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN",
          "description": ""
        },
        {
          "name": "AUTO_GRATUITY",
          "description": ""
        },
        {
          "name": "CUSTOM",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentTaxInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": ""
        },
        {
          "name": "INCLUSIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RefundType": {
      "type": "string",
      "enum": [
        "FULL",
        "PARTIAL"
      ],
      "x-enum-elements": [
        {
          "name": "FULL",
          "description": ""
        },
        {
          "name": "PARTIAL",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementEntryType": {
      "type": "string",
      "enum": [
        "ADJUSTMENT",
        "BALANCE_CHARGE",
        "CHARGE",
        "FREE_PROCESSING",
        "HOLD_ADJUSTMENT",
        "PAID_SERVICE_FEE",
        "PAID_SERVICE_FEE_REFUND",
        "REDEMPTION_CODE",
        "REFUND",
        "RETURNED_PAYOUT",
        "SQUARE_CAPITAL_ADVANCE",
        "SQUARE_CAPITAL_PAYMENT",
        "SQUARE_CAPITAL_REVERSED_PAYMENT",
        "SUBSCRIPTION_FEE",
        "SUBSCRIPTION_FEE_REFUND",
        "OTHER",
        "INCENTED_PAYMENT",
        "RETURNED_ACH_ENTRY",
        "RETURNED_SQUARE_275",
        "SQUARE_275",
        "SQUARE_CARD"
      ],
      "x-enum-elements": [
        {
          "name": "ADJUSTMENT",
          "description": "A manual adjustment applied to the merchant\u0027s account by Square"
        },
        {
          "name": "BALANCE_CHARGE",
          "description": "A payment from an existing Square balance, such as a gift card"
        },
        {
          "name": "CHARGE",
          "description": "A credit card payment CAPTURE"
        },
        {
          "name": "FREE_PROCESSING",
          "description": "Square offers Free Payments Processing for a variety of business scenarios including seller referral or when we want to apologize for a bug, customer service, repricing complication, etc. This entry represents a credit to the merchant for the purposes of Free Processing."
        },
        {
          "name": "HOLD_ADJUSTMENT",
          "description": "An adjustment made by Square related to holding/releasing a payment"
        },
        {
          "name": "PAID_SERVICE_FEE",
          "description": "a fee paid to a 3rd party merchant"
        },
        {
          "name": "PAID_SERVICE_FEE_REFUND",
          "description": "a refund for a 3rd party merchant fee"
        },
        {
          "name": "REDEMPTION_CODE",
          "description": "Repayment for a redemption code"
        },
        {
          "name": "REFUND",
          "description": "A refund for an existing card payment"
        },
        {
          "name": "RETURNED_PAYOUT",
          "description": "An entry created when we receive a response for the ACH file we sent indicating that the settlement of the original entry failed."
        },
        {
          "name": "SQUARE_CAPITAL_ADVANCE",
          "description": "Initial deposit to a merchant for a Capital merchant cash advance (MCA)."
        },
        {
          "name": "SQUARE_CAPITAL_PAYMENT",
          "description": "Capital merchant cash advance (MCA) assessment. These are, generally, proportional to the merchant\u0027s sales but may be issued for other reasons related to the MCA."
        },
        {
          "name": "SQUARE_CAPITAL_REVERSED_PAYMENT",
          "description": "Capital merchant cash advance (MCA) assessment refund. These are, generally, proportional to the merchant\u0027s refunds but may be issued for other reasons related to the MCA."
        },
        {
          "name": "SUBSCRIPTION_FEE",
          "description": "Fee charged for subscription to a Square product"
        },
        {
          "name": "SUBSCRIPTION_FEE_REFUND",
          "description": "Refund of a previously charged Square product subscription fee."
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "INCENTED_PAYMENT",
          "description": "A payment in which Square covers part of the funds for a purchase"
        },
        {
          "name": "RETURNED_ACH_ENTRY",
          "description": "A settlement failed to be processed and the settlement amount has been returned to the account"
        },
        {
          "name": "RETURNED_SQUARE_275",
          "description": "Refund for cancelling a Square Plus subscription"
        },
        {
          "name": "SQUARE_275",
          "description": "Fee charged for a Square Plus subscription ($275)"
        },
        {
          "name": "SQUARE_CARD",
          "description": "Settlements to or withdrawals from the Square Card (an asset)"
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementStatus": {
      "type": "string",
      "enum": [
        "FAILED",
        "SENT"
      ],
      "x-enum-elements": [
        {
          "name": "FAILED",
          "description": ""
        },
        {
          "name": "SENT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1TenderEntryMethod": {
      "type": "string",
      "enum": [
        "MANUAL",
        "SCANNED",
        "SQUARE_CASH",
        "SQUARE_WALLET",
        "SWIPED",
        "WEB_FORM",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "MANUAL",
          "description": ""
        },
        {
          "name": "SCANNED",
          "description": ""
        },
        {
          "name": "SQUARE_CASH",
          "description": ""
        },
        {
          "name": "SQUARE_WALLET",
          "description": ""
        },
        {
          "name": "SWIPED",
          "description": ""
        },
        {
          "name": "WEB_FORM",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1TenderType": {
      "type": "string",
      "enum": [
        "CREDIT_CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "NO_SALE",
        "SQUARE_WALLET",
        "SQUARE_GIFT_CARD",
        "UNKNOWN",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CREDIT_CARD",
          "description": ""
        },
        {
          "name": "CASH",
          "description": ""
        },
        {
          "name": "THIRD_PARTY_CARD",
          "description": ""
        },
        {
          "name": "NO_SALE",
          "description": ""
        },
        {
          "name": "SQUARE_WALLET",
          "description": ""
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": ""
        },
        {
          "name": "UNKNOWN",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1TimecardEventEventType": {
      "type": "string",
      "enum": [
        "API_CREATE",
        "API_EDIT",
        "API_DELETE",
        "REGISTER_CLOCKIN",
        "REGISTER_CLOCKOUT",
        "DASHBOARD_SUPERVISOR_CLOSE",
        "DASHBOARD_EDIT",
        "DASHBOARD_DELETE"
      ],
      "x-enum-elements": [
        {
          "name": "API_CREATE",
          "description": "The timecard was created by a request to the\n[CreateTimecard](#endpoint-v1employees-createtimecard) endpoint."
        },
        {
          "name": "API_EDIT",
          "description": "The timecard was edited by a request to the\n[UpdateTimecard](#endpoint-v1employees-updatetimecard) endpoint."
        },
        {
          "name": "API_DELETE",
          "description": "The timecard was deleted by a request to the\n[DeleteTimecard](#endpoint-v1employees-deletetimecard) endpoint."
        },
        {
          "name": "REGISTER_CLOCKIN",
          "description": "The employee clocked in via Square Point of Sale."
        },
        {
          "name": "REGISTER_CLOCKOUT",
          "description": "The employee clocked out via Square Point of Sale."
        },
        {
          "name": "DASHBOARD_SUPERVISOR_CLOSE",
          "description": "A supervisor clocked out the employee from the merchant\ndashboard."
        },
        {
          "name": "DASHBOARD_EDIT",
          "description": "A supervisor manually edited the timecard from the merchant\ndashboard"
        },
        {
          "name": "DASHBOARD_DELETE",
          "description": "A supervisor deleted the timecard from the merchant dashboard."
        }
      ],
      "description": "Actions that resulted in a change to a timecard. All timecard\nevents created with the Connect API have an event type that begins with\n`API`.",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateModifierListRequestSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": ""
        },
        {
          "name": "MULTIPLE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateOrderRequestAction": {
      "type": "string",
      "enum": [
        "COMPLETE",
        "CANCEL",
        "REFUND"
      ],
      "x-enum-elements": [
        {
          "name": "COMPLETE",
          "description": ""
        },
        {
          "name": "CANCEL",
          "description": ""
        },
        {
          "name": "REFUND",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1VariationInventoryAlertType": {
      "type": "string",
      "enum": [
        "LOW_QUANTITY",
        "NONE",
        "INVESTMENT",
        "LOAN",
        "SAVINGS",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "LOW_QUANTITY",
          "description": ""
        },
        {
          "name": "NONE",
          "description": ""
        },
        {
          "name": "INVESTMENT",
          "description": ""
        },
        {
          "name": "LOAN",
          "description": ""
        },
        {
          "name": "SAVINGS",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1VariationPricingType": {
      "type": "string",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PRICING",
          "description": ""
        },
        {
          "name": "VARIABLE_PRICING",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "Weekday": {
      "type": "string",
      "enum": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "x-enum-elements": [
        {
          "name": "MON",
          "description": "Monday"
        },
        {
          "name": "TUE",
          "description": "Tuesday"
        },
        {
          "name": "WED",
          "description": "Wednesday"
        },
        {
          "name": "THU",
          "description": "Thursday"
        },
        {
          "name": "FRI",
          "description": "Friday"
        },
        {
          "name": "SAT",
          "description": "Saturday"
        },
        {
          "name": "SUN",
          "description": "Sunday"
        }
      ],
      "description": "The days of the week.",
      "x-release-status": "PUBLIC"
    },
    "AdditionalRecipient": {
      "type": "object",
      "required": [
        "location_id",
        "description",
        "amount_money"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
        },
        "description": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string",
          "description": "The description of the additional recipient."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money distributed to the recipient."
        },
        "receivable_id": {
          "type": "string",
          "description": "The unique ID for this [AdditionalRecipientReceivable](#type-additionalrecipientreceivable), assigned by the server."
        }
      },
      "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender.",
      "x-release-status": "PUBLIC"
    },
    "AdditionalRecipientReceivable": {
      "type": "object",
      "required": [
        "id",
        "transaction_id",
        "transaction_location_id",
        "amount_money"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "The additional recipient receivable\u0027s unique ID, issued by Square payments servers."
        },
        "transaction_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the transaction that the additional recipient receivable was applied to."
        },
        "transaction_location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location that created the receivable. This is the location ID on the associated transaction."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the receivable. This will always be non-negative."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the additional recipient receivable was created, in RFC 3339 format."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivableRefund"
          },
          "description": "Any refunds of the receivable that have been applied."
        }
      },
      "description": "Represents a monetary distribution of part of a [Transaction](#type-transaction)\u0027s amount for Transactions which included additional recipients. The location of this receivable is that same as the one specified in the [AdditionalRecipient](#type-additionalrecipient).",
      "x-release-status": "PUBLIC"
    },
    "AdditionalRecipientReceivableRefund": {
      "type": "object",
      "required": [
        "id",
        "receivable_id",
        "refund_id",
        "transaction_location_id",
        "amount_money"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "The receivable refund\u0027s unique ID, issued by Square payments servers."
        },
        "receivable_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the receivable that the refund was applied to."
        },
        "refund_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the refund that is associated to this receivable refund."
        },
        "transaction_location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location that created the receivable. This is the location ID on the associated transaction."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the refund. This will always be non-negative."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the refund was created, in RFC 3339 format."
        }
      },
      "description": "A refund of an [AdditionalRecipientReceivable](#type-additionalrecipientreceivable). This includes the ID of the additional recipient receivable associated to this object, as well as a reference to the [Refund](#type-refund) that created this receivable refund.",
      "x-release-status": "PUBLIC"
    },
    "Address": {
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address\u0027s most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address\u0027s `locality`, if any."
        },
        "sublocality_2": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality`, if any."
        },
        "sublocality_3": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality_2`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address\u0027s country. In the US, this\nis the state."
        },
        "administrative_district_level_2": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_1`.\nIn the US, this is the county."
        },
        "administrative_district_level_3": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_2`,\nif any."
        },
        "postal_code": {
          "type": "string",
          "description": "The address\u0027s postal code."
        },
        "country": {
          "type": "string",
          "enum": [
            "ZZ",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "description": "The address\u0027s country, in ISO 3166-1-alpha-2 format."
        },
        "first_name": {
          "type": "string",
          "description": "Optional first name when it\u0027s representing recipient."
        },
        "last_name": {
          "type": "string",
          "description": "Optional last name when it\u0027s representing recipient."
        },
        "organization": {
          "type": "string",
          "description": "Optional organization name when it\u0027s representing recipient."
        }
      },
      "description": "Represents a physical address.",
      "x-release-status": "PUBLIC"
    },
    "BatchChangeInventoryRequest": {
      "type": "object",
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "A client-supplied, universally unique identifier (UUID) for the\nrequest.\n\nSee [Idempotency](/basics/api101/idempotency) in the\n[API Development 101](/basics/api101/overview) section for more\ninformation."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The set of physical counts and inventory adjustments to be made.\nChanges are applied based on the client-supplied timestamp and may be sent\nout of order. Max size is 100 changes."
        },
        "ignore_unchanged_counts": {
          "type": "boolean",
          "description": "Indicates whether the current physical count should be ignored if\nthe quantity is unchanged since the last physical count. Default: `true`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "8fc6a5b0-9fe8-4b46-b46b-2ef95793abbe",
          "changes": [
            {
              "type": "PHYSICAL_COUNT",
              "physical_count": {
                "reference_id": "1536bfbf-efed-48bf-b17d-a197141b2a92",
                "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
                "state": "IN_STOCK",
                "location_id": "C6W5YS5QM06F5",
                "quantity": "53",
                "employee_id": "LRK57NSQ5X7PUD05",
                "occurred_at": "2016-11-16T22:25:24.878Z"
              }
            }
          ],
          "ignore_unchanged_counts": true
        }
      }
    },
    "BatchChangeInventoryResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current counts for all objects referenced in the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "C6W5YS5QM06F5",
            "quantity": "53",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "BatchDeleteCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ]
        }
      }
    },
    "BatchDeleteCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "deleted_object_ids": [
          "W62UWFY35CWMYGVWK6TWJDNI",
          "AA27W3M2GGTF3H6AVPNB77CK"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      }
    },
    "BatchRetrieveCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "object_ids"
      ],
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be retrieved."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ],
          "include_related_objects": true
        }
      }
    },
    "BatchRetrieveCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          }
        ],
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      }
    },
    "BatchRetrieveInventoryChangesRequest": {
      "type": "object",
      "properties": {
        "catalog_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by [CatalogObject](#type-catalogobject) ID.\nOnly applied when set. Default: unset."
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by [Location](#type-location) ID. Only\napplied when set. Default: unset."
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PHYSICAL_COUNT",
              "ADJUSTMENT",
              "TRANSFER"
            ]
          },
          "description": "Filters results by [InventoryChangeType](#type-inventorychangetype).\nDefault: [`PHYSICAL_COUNT`, `ADJUSTMENT`]. `TRANSFER` is not supported as\na filter."
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CUSTOM",
              "IN_STOCK",
              "SOLD",
              "RETURNED_BY_CUSTOMER",
              "RESERVED_FOR_SALE",
              "SOLD_ONLINE",
              "ORDERED_FROM_VENDOR",
              "RECEIVED_FROM_VENDOR",
              "IN_TRANSIT_TO",
              "NONE",
              "WASTE",
              "UNLINKED_RETURN"
            ]
          },
          "description": "Filters `ADJUSTMENT` query results by\n[InventoryState](#type-inventorystate). Only applied when set.\nDefault: unset."
        },
        "updated_after": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`created_at` or `calculated_at` value is after the given time.\nDefault: UNIX epoch (`1970-01-01T00:00:00Z`)."
        },
        "updated_before": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`created_at` or `calculated_at` value is strictly before the given time.\nDefault: UNIX epoch (`1970-01-01T00:00:00Z`)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "catalog_object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI"
          ],
          "location_ids": [
            "C6W5YS5QM06F5"
          ],
          "types": [
            "PHYSICAL_COUNT"
          ],
          "states": [
            "IN_STOCK"
          ],
          "updated_after": "2016-11-01T00:00:00.000Z",
          "updated_before": "2016-12-01T00:00:00.000Z"
        }
      }
    },
    "BatchRetrieveInventoryChangesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The current calculated inventory changes for the requested objects\nand locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "changes": [
          {
            "type": "PHYSICAL_COUNT",
            "physical_count": {
              "id": "46YDTW253DWGGK9HMAE6XCAO",
              "reference_id": "22c07cf4-5626-4224-89f9-691112019399",
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "state": "IN_STOCK",
              "location_id": "C6W5YS5QM06F5",
              "quantity": "86",
              "source": {
                "product": "SQUARE_POS",
                "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                "name": "Square Point of Sale 4.37"
              },
              "employee_id": "LRK57NSQ5X7PUD05",
              "occurred_at": "2016-11-16T22:24:49.028Z",
              "created_at": "2016-11-16T22:25:24.878Z"
            }
          }
        ]
      }
    },
    "BatchRetrieveInventoryCountsRequest": {
      "type": "object",
      "properties": {
        "catalog_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by [CatalogObject](#type-catalogobject) ID.\nOnly applied when set. Default: unset."
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by [Location](#type-location) ID. Only\napplied when set. Default: unset."
        },
        "updated_after": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`calculated_at` value is after the given time. Default: UNIX epoch\n(`1970-01-01T00:00:00Z`)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "catalog_object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI"
          ],
          "location_ids": [
            "59TNP9SA8VGDA"
          ],
          "updated_after": "2016-11-16T00:00:00.000Z"
        }
      }
    },
    "BatchRetrieveInventoryCountsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current calculated inventory counts for the requested objects\nand locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "59TNP9SA8VGDA",
            "quantity": "79",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "BatchRetrieveOrdersRequest": {
      "type": "object",
      "required": [
        "order_ids"
      ],
      "properties": {
        "order_ids": {
          "type": "array",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "description": "The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "order_ids": [
            "CAISEM82RcpmcFBM0TfOyiHV3es",
            "CAISENgvlJ6jLWAzERDzjyHVybY"
          ]
        }
      }
    },
    "BatchRetrieveOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "description": "The requested orders. This will omit any requested orders that do not exist or are not charged."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [BatchRetrieveOrders](#endpoint-batchretrieveorders) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "orders": [
          {
            "id": "CAISEM82RcpmcFBM0TfOyiHV3es",
            "location_id": "LOCATION_ID",
            "reference_id": "my-order-001",
            "line_items": [
              {
                "id": "945986d1-9586-11e6-ad5a-28cfe92138cf",
                "name": "Awesome product",
                "quantity": "1",
                "base_price_money": {
                  "amount": 1599,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1599,
                  "currency": "USD"
                }
              },
              {
                "id": "a8f4168c-9586-11e6-bdf0-28cfe92138cf",
                "name": "Another awesome product",
                "quantity": "3",
                "base_price_money": {
                  "amount": 2000,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 6000,
                  "currency": "USD"
                }
              }
            ],
            "total_money": {
              "amount": 7599,
              "currency": "USD"
            }
          }
        ]
      }
    },
    "BatchUpsertCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObjectBatch"
          },
          "description": "A batch of [CatalogObject](#type-catalogobject)s to be inserted/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](#workingwithdates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a [CatalogItem](#type-catalogitem) with\nID `#ABC` and a [CatalogItemVariation](#type-catalogitemvariation) with its `item_id` attribute set to\n`#ABC` in order to associate the [CatalogItemVariation](#type-catalogitemvariation) with its parent\n[CatalogItem](#type-catalogitem).\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "789ff020-f723-43a9-b4b5-43b5dc1fa3dc",
          "batches": [
            {
              "objects": [
                {
                  "type": "ITEM",
                  "id": "#Tea",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Tea",
                    "description": "Hot Leaf Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Tea_Mug",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Tea",
                          "name": "Mug",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 150,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ITEM",
                  "id": "#Coffee",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Coffee",
                    "description": "Hot Bean Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Regular",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Regular",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 250,
                            "currency": "USD"
                          }
                        }
                      },
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Large",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Large",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 350,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "CATEGORY",
                  "id": "#Beverages",
                  "present_at_all_locations": true,
                  "category_data": {
                    "name": "Beverages"
                  }
                },
                {
                  "type": "TAX",
                  "id": "#SalesTax",
                  "present_at_all_locations": true,
                  "tax_data": {
                    "name": "Sales Tax",
                    "calculation_phase": "TAX_SUBTOTAL_PHASE",
                    "inclusion_type": "ADDITIVE",
                    "percentage": "5.0",
                    "applies_to_custom_amounts": true,
                    "enabled": true
                  }
                }
              ]
            }
          ]
        }
      }
    },
    "BatchUpsertCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The created [CatalogObject](#type-catalogobject)s"
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this Upsert."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "NAYHET5R52MIYCEF34ZMAHFM",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "PJMCEBHHUS3OKDB6PYUHLCPP",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "OTYDX45SPG7LJQUVCBZI4INH",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "GZDA3JB37FYVOPI4AOEBOITI",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "CATEGORY",
            "id": "LYT72K3WGJFFCIMB63XARP3I",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "XHSHLHNWSI3HVI4BW5ZUZXI3",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "applies_to_custom_amounts": true,
              "enabled": true
            }
          }
        ],
        "id_mappings": [
          {
            "client_object_id": "#Tea",
            "object_id": "ZSDZN34NAXDLC6D5ZQMNSOUM"
          },
          {
            "client_object_id": "#Coffee",
            "object_id": "PJMCEBHHUS3OKDB6PYUHLCPP"
          },
          {
            "client_object_id": "#Beverages",
            "object_id": "LYT72K3WGJFFCIMB63XARP3I"
          },
          {
            "client_object_id": "#SalesTax",
            "object_id": "XHSHLHNWSI3HVI4BW5ZUZXI3"
          },
          {
            "client_object_id": "#Tea_Mug",
            "object_id": "NAYHET5R52MIYCEF34ZMAHFM"
          },
          {
            "client_object_id": "#Coffee_Regular",
            "object_id": "OTYDX45SPG7LJQUVCBZI4INH"
          },
          {
            "client_object_id": "#Coffee_Large",
            "object_id": "GZDA3JB37FYVOPI4AOEBOITI"
          }
        ]
      }
    },
    "Break": {
      "type": "object",
      "required": [
        "start_at",
        "break_type_id",
        "name",
        "expected_duration",
        "is_paid"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object"
        },
        "start_at": {
          "minLength": 1,
          "type": "string",
          "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated."
        },
        "end_at": {
          "type": "string",
          "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated. The `end_at` minute is not\ncounted when the break length is calculated. For example, a break from `00:00`\nto `00:11`  is considered a 10 minute break (midnight to 10 minutes after midnight)."
        },
        "break_type_id": {
          "minLength": 1,
          "type": "string",
          "description": "The `BreakType` this `Break` was templated on."
        },
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "A human-readable name."
        },
        "expected_duration": {
          "minLength": 1,
          "type": "string",
          "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthe break."
        },
        "is_paid": {
          "type": "boolean",
          "description": "Whether this break counts towards time worked for compensation\npurposes."
        }
      },
      "description": "A record of an employee\u0027s break during a shift.",
      "x-release-status": "PUBLIC"
    },
    "BreakType": {
      "type": "object",
      "required": [
        "location_id",
        "break_name",
        "expected_duration",
        "is_paid"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "UUID for this object."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the business location this type of break applies to."
        },
        "break_name": {
          "minLength": 1,
          "type": "string",
          "description": "A human-readable name for this type of break. Will be displayed to\nemployees in Square products."
        },
        "expected_duration": {
          "minLength": 1,
          "type": "string",
          "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthis break. Precision below minutes is truncated."
        },
        "is_paid": {
          "type": "boolean",
          "description": "Whether this break counts towards time worked for compensation\npurposes."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If a value is not\nprovided, Square\u0027s servers execute a \"blind\" write; potentially \noverwriting another writer\u0027s data."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        }
      },
      "description": "A defined break template that sets an expectation for possible `Break` \ninstances on a `Shift`.",
      "x-release-status": "PUBLIC"
    },
    "CaptureTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "CaptureTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "Card": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID for this card. Generated by Square."
        },
        "card_brand": {
          "type": "string",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTERCARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "description": "The card\u0027s brand (such as `VISA`). See [CardBrand](#type-cardbrand)\nfor all possible values."
        },
        "last_4": {
          "type": "string",
          "description": "The last 4 digits of the card number."
        },
        "exp_month": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration month of the associated card as an integer between 1 and 12."
        },
        "exp_year": {
          "type": "integer",
          "format": "int64",
          "description": "The four-digit year of the card\u0027s expiration date."
        },
        "cardholder_name": {
          "type": "string",
          "description": "The name of the cardholder."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The billing address for this card."
        },
        "fingerprint": {
          "type": "string",
          "description": "__Not currently set.__ Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application."
        }
      },
      "description": "Represents the payment details of a card to be used for payments. These\ndetails are determined by the `card_nonce` generated by `SqPaymentForm`.",
      "x-release-status": "PUBLIC"
    },
    "CatalogCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The category\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        }
      },
      "description": "A category to which an [CatalogItem](#type-catalogitem) belongs in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The discount\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for all possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the discount. Specify an amount of `0` if `discount_type` is `VARIABLE_AMOUNT`.\n\nDo not include this field for percentage-based or variable discounts."
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the discount\u0027s display label in the Square Point of Sale app. This must be a valid hex color code."
        }
      },
      "description": "A discount in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogIdMapping": {
      "type": "object",
      "properties": {
        "client_object_id": {
          "type": "string",
          "description": "The client-supplied, temporary `#`-prefixed ID for a new [CatalogObject](#type-catalogobject)."
        },
        "object_id": {
          "type": "string",
          "description": "The permanent ID for the [CatalogObject](#type-catalogobject) created by the server."
        }
      },
      "description": "A mapping between a client-supplied temporary ID and a permanent server ID.",
      "x-release-status": "PUBLIC"
    },
    "CatalogInfoRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "CatalogInfoResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "limits": {
          "$ref": "#/definitions/CatalogInfoResponseLimits",
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "limits": {
          "batch_upsert_max_objects_per_batch": 1000,
          "batch_upsert_max_total_objects": 10000,
          "batch_retrieve_max_object_ids": 1000,
          "search_max_page_limit": 1000,
          "batch_delete_max_object_ids": 200,
          "update_item_taxes_max_item_ids": 1000,
          "update_item_taxes_max_taxes_to_enable": 1000,
          "update_item_taxes_max_taxes_to_disable": 1000,
          "update_item_modifier_lists_max_item_ids": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_enable": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_disable": 1000
        }
      }
    },
    "CatalogInfoResponseLimits": {
      "type": "object",
      "properties": {
        "batch_upsert_max_objects_per_batch": {
          "type": "integer",
          "description": "The maximum number of objects that may appear within a single batch in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_upsert_max_total_objects": {
          "type": "integer",
          "description": "The maximum number of objects that may appear across all batches in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_retrieve_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`\nrequest."
        },
        "search_max_page_limit": {
          "type": "integer",
          "description": "The maximum number of results that may be returned in a page of a\n`/v2/catalog/search` response."
        },
        "batch_delete_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may be included in a single\n`/v2/catalog/batch-delete` request."
        },
        "update_item_taxes_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_enable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_disable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_modifier_lists_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_enable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_disable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item\u0027s name. Searchable. This field must not be empty. This field has max length of 512 Unicode code points."
        },
        "description": {
          "type": "string",
          "description": "The item\u0027s description. Searchable. This field has max length of 4096 Unicode code points."
        },
        "abbreviation": {
          "type": "string",
          "description": "The text of the item\u0027s display label in the Square Point of Sale app. Only up to the first five characters of the string are used.  Searchable. This field has max length of 24 Unicode code points."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the item\u0027s display label in the Square Point of Sale app. This must be a valid hex color code."
        },
        "available_online": {
          "type": "boolean",
          "description": "If `true`, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "available_for_pickup": {
          "type": "boolean",
          "description": "If `true`, the item can be added to pickup orders from the merchant\u0027s online store."
        },
        "available_electronically": {
          "type": "boolean",
          "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant\u0027s online store."
        },
        "category_id": {
          "type": "string",
          "description": "The ID of the item\u0027s category, if any."
        },
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of IDs indicating the [CatalogTax](#type-catalogtax)es that are enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\n[CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`."
        },
        "modifier_list_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemModifierListInfo"
          },
          "description": "A set of [CatalogItemModifierListInfo](#type-catalogitemmodifierlistinfo) objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. [CatalogModifierList](#type-catalogmodifierlist)s\nmay also be added to or deleted from an item using `UpdateItemModifierLists`."
        },
        "image_url": {
          "type": "string",
          "description": "The URL of an image representing this item."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s containing the [CatalogItemVariation](#type-catalogitemvariation)s for this item."
        },
        "product_type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "GIFT_CARD",
            "APPOINTMENTS_SERVICE",
            "RETAIL_ITEM",
            "RESTAURANT_ITEM"
          ],
          "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` may be created by this API; items with other product\ntypes are read-only. See [CatalogItemProductType](#type-catalogitemproducttype) for all possible values."
        },
        "skip_modifier_screen": {
          "type": "boolean",
          "description": "If `false`, the Square Point of Sale app will present the [CatalogItem](#type-catalogitem)\u0027s\ndetails screen immediately, allowing the merchant to choose [CatalogModifier](#type-catalogmodifier)s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item\u0027s details.\n\nThird-party clients are encouraged to implement similar behaviors."
        }
      },
      "description": "An item (i.e., product family) in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogItemModifierListInfo": {
      "type": "object",
      "required": [
        "modifier_list_id"
      ],
      "properties": {
        "modifier_list_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the [CatalogModifierList](#type-catalogmodifierlist) controlled by this [CatalogModifierListInfo](#type-catalogmodifierlistinfo)."
        },
        "modifier_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogModifierOverride"
          },
          "description": "A set of [CatalogModifierOverride](#type-catalogmodifieroverride) objects that override whether a given [CatalogModifier](#type-catalogmodifier) is enabled by default."
        },
        "min_selected_modifiers": {
          "type": "integer",
          "description": "If zero or larger, the smallest number of [CatalogModifier](#type-catalogmodifier)s that must be selected from this [CatalogModifierList](#type-catalogmodifierlist)."
        },
        "max_selected_modifiers": {
          "type": "integer",
          "description": "If zero or larger, the largest number of [CatalogModifier](#type-catalogmodifier)s that can be selected from this [CatalogModifierList](#type-catalogmodifierlist)."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist)."
        }
      },
      "description": "Controls the properties of a [CatalogModifierList](#type-catalogmodifierlist) as it applies to this [CatalogItem](#type-catalogitem).",
      "x-release-status": "PUBLIC"
    },
    "CatalogItemVariation": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable."
        },
        "name": {
          "type": "string",
          "description": "The item variation\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any. Searchable."
        },
        "upc": {
          "type": "string",
          "description": "The item variation\u0027s UPC, if any. Searchable in the Connect API.\nThis field is only exposed in the Connect API. It is not exposed in Square\u0027s Dashboard,\nSquare Point of Sale app or Retail Point of Sale app."
        },
        "ordinal": {
          "type": "integer",
          "description": "The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal\nfor each item variation within a parent [CatalogItem](#type-catalogitem) is set according to the item variations\u0027s\nposition. On reads, the value is not guaranteed to be sequential or unique."
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The item variation\u0027s price, if fixed pricing is used."
        },
        "location_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemVariationLocationOverrides"
          },
          "description": "Per-[location](#type-location) price and inventory overrides."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values."
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        },
        "user_data": {
          "type": "string",
          "description": "Arbitrary user metadata to associate with the item variation. Cannot exceed 255 characters. Searchable."
        },
        "service_duration": {
          "type": "integer",
          "format": "int64",
          "description": "If the [CatalogItem](#type-catalogitem) that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second)."
        }
      },
      "description": "An item variation (i.e., product) in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogModifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The modifier\u0027s price."
        }
      },
      "description": "A modifier in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogModifierList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The [CatalogModifierList](#type-catalogmodifierlist)\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The options included in the [CatalogModifierList](#type-catalogmodifierlist).\nYou must include at least one [CatalogModifier](#type-catalogmodifier).\nEach [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain\n[CatalogModifier](#type-catalogmodifier) data."
        }
      },
      "description": "A modifier list in the Catalog object model. A [CatalogModifierList](#type-catalogmodifierlist)\ncontains [Modifier](#type-catalogmodifier)s that can be applied to a [CatalogItem](#type-catalogitem)\nat the time of sale.\n\nFor example, a modifier list \"Condiments\" that would apply to a \"Hot Dog\" [CatalogItem](#type-catalogitem) might\ncontain [CatalogModifier](#type-catalogmodifier)s \"Ketchup\", \"Mustard\", and \"Relish\". The\n`selection_type` field specifies whether or not multiple selections from the modifier list are allowed.",
      "x-release-status": "PUBLIC"
    },
    "CatalogModifierOverride": {
      "type": "object",
      "required": [
        "modifier_id"
      ],
      "properties": {
        "modifier_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the [CatalogModifier](#type-catalogmodifier) whose default behavior is being overridden."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If `true`, this [CatalogModifier](#type-catalogmodifier) should be selected by default for this [CatalogItem](#type-catalogitem)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogObject": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ITEM",
            "CATEGORY",
            "ITEM_VARIATION",
            "TAX",
            "DISCOUNT",
            "MODIFIER_LIST",
            "MODIFIER"
          ],
          "description": "The type of this object. Each object type has expected\nproperties expressed in a structured format within its corresponding `*_data` field below.\n\nSee [CatalogObjectType](#type-catalogobjecttype) for all possible values."
        },
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "An identifier to reference this object in the catalog. When a new CatalogObject\nis inserted, the client should set the id to a temporary identifier starting with\na `\u0027#\u0027` character. Other objects being inserted or updated within the same request\nmay use this identifier to refer to the new object.\n\nWhen the server receives the new object, it will supply a unique identifier that\nreplaces the temporary identifier for all future references."
        },
        "updated_at": {
          "type": "string",
          "description": "Last modification [timestamp](#workingwithdates) in RFC 3339 format, e.g., `\"2016-08-15T23:59:33.123Z\"`\nwould indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the object. When updating an object, the version supplied by the\nmust match the version in the database, otherwise the write will be rejected as conflicting."
        },
        "is_deleted": {
          "type": "boolean",
          "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time."
        },
        "catalog_v1_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogV1Id"
          },
          "description": "The Connect V1 IDs for this object at each [location](#type-location) where it is present, where they\ndiffer from the object\u0027s Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs."
        },
        "present_at_all_locations": {
          "type": "boolean",
          "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field. If not specified, defaults to `true`."
        },
        "present_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`."
        },
        "absent_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`."
        },
        "item_data": {
          "$ref": "#/definitions/CatalogItem",
          "description": "Structured data for a [CatalogItem](#type-catalogitem), set for CatalogObjects of type `ITEM`."
        },
        "category_data": {
          "$ref": "#/definitions/CatalogCategory",
          "description": "Structured data for a [CatalogCategory](#type-catalogcategory), set for CatalogObjects of type `CATEGORY`."
        },
        "item_variation_data": {
          "$ref": "#/definitions/CatalogItemVariation",
          "description": "Structured data for a [CatalogItemVariation](#type-catalogitemvariation), set for CatalogObjects of type `ITEM_VARIATION`."
        },
        "tax_data": {
          "$ref": "#/definitions/CatalogTax",
          "description": "Structured data for a [CatalogTax](#type-catalogtax), set for CatalogObjects of type `TAX`."
        },
        "discount_data": {
          "$ref": "#/definitions/CatalogDiscount",
          "description": "Structured data for a [CatalogDiscount](#type-catalogdiscount), set for CatalogObjects of type `DISCOUNT`."
        },
        "modifier_list_data": {
          "$ref": "#/definitions/CatalogModifierList",
          "description": "Structured data for a [CatalogModifierList](#type-catalogmodifierlist), set for CatalogObjects of type `MODIFIER_LIST`."
        },
        "modifier_data": {
          "$ref": "#/definitions/CatalogModifier",
          "description": "Structured data for a [CatalogModifier](#type-catalogmodifier), set for CatalogObjects of type `MODIFIER`."
        }
      },
      "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type \u003d `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type \u003d `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type \u003d `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type \u003d `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type \u003d `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type \u003d `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type \u003d `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](/products/catalog/overview).",
      "x-release-status": "PUBLIC"
    },
    "CatalogObjectBatch": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s belonging to this batch."
        }
      },
      "description": "A batch of [CatalogObject](#type-catalogobject)s.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuery": {
      "type": "object",
      "properties": {
        "sorted_attribute_query": {
          "$ref": "#/definitions/CatalogQuerySortedAttribute",
          "description": "A query that returns all objects, sorted by the given attribute."
        },
        "exact_query": {
          "$ref": "#/definitions/CatalogQueryExact",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive value."
        },
        "prefix_query": {
          "$ref": "#/definitions/CatalogQueryPrefix",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive prefix."
        },
        "range_query": {
          "$ref": "#/definitions/CatalogQueryRange",
          "description": "A query that returns only objects for which the given (integer-valued) attribute lies in the given range."
        },
        "text_query": {
          "$ref": "#/definitions/CatalogQueryText",
          "description": "A query that returns only objects whose searchable attributes contain all of the given\nkeywords as prefixes. For example, if a [CatalogItem](#type-catalogitem) contains attributes `{\"name\": \"t-shirt\"}` and\n`{\"description\": \"Small, Purple\"}`, it will be matched by the query `{\"keywords\": [\"shirt\", \"sma\", \"purp\"]}`."
        },
        "items_for_tax_query": {
          "$ref": "#/definitions/CatalogQueryItemsForTax",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogTax](#type-catalogtax)es enabled."
        },
        "items_for_modifier_list_query": {
          "$ref": "#/definitions/CatalogQueryItemsForModifierList",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogModifierList](#type-catalogmodifierlist)s enabled."
        }
      },
      "description": "A query to be applied to a SearchCatalogObjects request.\nOnly one query field may be present.\n\nWhere an attribute name is required, it should be specified as the name of any field\nmarked \"searchable\" from the structured data types for the desired result object type(s)\n([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation),\n[CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax),\n[CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist),\n[CatalogModifier](#type-catalogmodifier)).\n\nFor example, a query that should return Items may specify attribute names from\nany of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely\n`\"name\"`, `\"description\"`, and `\"abbreviation\"`.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryExact": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_value"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_value": {
          "type": "string",
          "description": "The desired value of the search attribute."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryItemsForModifierList": {
      "type": "object",
      "required": [
        "modifier_list_ids"
      ],
      "properties": {
        "modifier_list_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [CatalogModifierList](#type-catalogmodifierlist) IDs to be used to find associated [CatalogItem](#type-catalogitem)s."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryItemsForTax": {
      "type": "object",
      "required": [
        "tax_ids"
      ],
      "properties": {
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [CatalogTax](#type-catalogtax) IDs to be used to find associated [CatalogItem](#type-catalogitem)s."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryPrefix": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_prefix"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_prefix": {
          "minLength": 1,
          "type": "string",
          "description": "The desired prefix of the search attribute value."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryRange": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_min_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired minimum value for the search attribute (inclusive)."
        },
        "attribute_max_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired maximum value for the search attribute (inclusive)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuerySortedAttribute": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The attribute whose value should be used as the sort key."
        },
        "initial_attribute_value": {
          "type": "string",
          "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts)."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryText": {
      "type": "object",
      "required": [
        "keywords"
      ],
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of one, two, or three search keywords. Keywords with fewer than three characters\nare ignored."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogTax": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The tax\u0027s name. Searchable. This field has max length of 255 Unicode code points."
        },
        "calculation_phase": {
          "type": "string",
          "enum": [
            "TAX_SUBTOTAL_PHASE",
            "TAX_TOTAL_PHASE"
          ],
          "description": "Whether the tax is calculated based on a payment\u0027s subtotal or total. See [TaxCalculationPhase](#type-taxcalculationphase) for all possible values."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax in decimal form, using a `\u0027.\u0027` as the decimal separator and without a `\u0027%\u0027` sign.\nA value of `7.5` corresponds to 7.5%."
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular [CatalogItem](#type-catalogitem)."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, the tax will be shown as enabled in the Square Point of Sale app."
        }
      },
      "description": "A tax in the Catalog object model.",
      "x-release-status": "PUBLIC"
    },
    "CatalogV1Id": {
      "type": "object",
      "properties": {
        "catalog_v1_id": {
          "type": "string",
          "description": "The ID for an object in Connect V1, if different from its Connect V2 ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the [location](#type-location) this Connect V1 ID is associated with."
        }
      },
      "description": "An Items Connect V1 object ID along with its associated [location](#type-location) ID.",
      "x-release-status": "PUBLIC"
    },
    "ChargeRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\ntransaction among transactions you\u0027ve created.\n\nIf you\u0027re unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to charge.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThe value of `currency` must match the currency associated with the business\nthat is charging the card."
        },
        "card_nonce": {
          "maxLength": 192,
          "type": "string",
          "description": "A nonce generated from the `SqPaymentForm` that represents the card\nto charge.\n\nThe application that provides a nonce to this endpoint must be the\n_same application_ that generated the nonce with the `SqPaymentForm`.\nOtherwise, the nonce is invalid.\n\nDo not provide a value for this field if you provide a value for\n`customer_card_id`."
        },
        "customer_card_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the customer card on file to charge. Do\nnot provide a value for this field if you provide a value for `card_nonce`.\n\nIf you provide this value, you _must_ also provide a value for\n`customer_id`."
        },
        "delay_capture": {
          "type": "boolean",
          "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n[CaptureTransaction](#endpoint-capturetransaction) endpoint) or a Void\n(with the [VoidTransaction](#endpoint-voidtransaction) endpoint).\n\nDefault value: `false`"
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters."
        },
        "note": {
          "maxLength": 60,
          "type": "string",
          "description": ""
        },
        "customer_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s billing address. This value is optional, but this transaction\nis ineligible for chargeback protection if neither this parameter nor\n`shipping_address` is provided."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s shipping address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if neither this\nparameter nor `billing_address` is provided."
        },
        "buyer_email_address": {
          "type": "string",
          "description": "The buyer\u0027s email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided."
        },
        "order_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the order to associate with this transaction.\n\nIf you provide this value, the `amount_money` value of your request must\n__exactly match__ the value of the order\u0027s `total_money` field."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "The basic primitive of multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your additional_recipients\nmust not be more than 90% of the `amount_money` value in the charge request.\nThe `location_id` must be the valid location of the app owner merchant.\n\nThis field requires the `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in sandbox."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [Charge](#endpoint-charge) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
          "shipping_address": {
            "address_line_1": "123 Main St",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94114",
            "country": "US"
          },
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "locality": "New York",
            "postal_code": "10003",
            "country": "US"
          },
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 20,
                "currency": "USD"
              }
            }
          ],
          "card_nonce": "card_nonce_from_square_123",
          "reference_id": "some optional reference id",
          "note": "some optional note",
          "delay_capture": false
        }
      }
    },
    "ChargeRequestAdditionalRecipient": {
      "type": "object",
      "required": [
        "location_id",
        "description",
        "amount_money"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The location ID for a recipient (other than the merchant) receiving a portion of the tender."
        },
        "description": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string",
          "description": "The description of the additional recipient."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money distributed to the recipient."
        }
      },
      "description": "Represents an additional recipient (other than the merchant) entitled to a portion of the tender.\nSupport is currently limited to USD, CAD and GBP currencies",
      "x-release-status": "PUBLIC"
    },
    "ChargeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The created transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 200,
                "currency": "USD"
              },
              "additional_recipients": [
                {
                  "location_id": "057P5VYJ4A5X1",
                  "description": "Application fees",
                  "amount_money": {
                    "amount": 20,
                    "currency": "USD"
                  },
                  "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
                }
              ],
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              }
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      }
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID generated by Square Checkout when a new checkout is requested."
        },
        "checkout_page_url": {
          "type": "string",
          "description": "The URL that the buyer\u0027s browser should be redirected to after the\ncheckout is completed."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow."
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "Order to be checked out."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the checkout was created, in RFC 3339 format."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this checkout.\nFor example, fees assessed on the purchase by a third party integration."
        }
      },
      "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
      "x-release-status": "PUBLIC"
    },
    "CreateBreakTypeRequest": {
      "type": "object",
      "required": [
        "break_type"
      ],
      "properties": {
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "Unique string value to insure idempotency of the operation"
        },
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The `BreakType` to be created."
        }
      },
      "description": "A request to create a new `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "PAD3NG5KSN2GL",
          "break_type": {
            "location_id": "CGJN03P1D08GF",
            "break_name": "Lunch Break",
            "expected_duration": "PT30M",
            "is_paid": true
          }
        }
      }
    },
    "CreateBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The `BreakType` that was created by the request."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to the request to create a `BreakType`. Contains\nthe created `BreakType` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "49SSVDJG76WF3",
          "location_id": "CGJN03P1D08GF",
          "break_name": "Lunch Break",
          "expected_duration": "PT30M",
          "is_paid": true,
          "version": 1,
          "created_at": "2019-02-26T22:42:54Z",
          "updated_at": "2019-02-26T22:42:54Z"
        }
      }
    },
    "CreateCheckoutRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "order"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A unique string that identifies this checkout among others\nyou\u0027ve created. It can be any valid string but must be unique for every\norder sent to Square Checkout for a given location ID.\n\nThe idempotency key is used to avoid processing the same order more than\nonce. If you\u0027re unsure whether a particular checkout was created\nsuccessfully, you can reattempt it with the same idempotency key and all the\nsame other parameters without worrying about creating duplicates.\n\nWe recommend using a random number/string generator native to the language\nyou are working in to generate strings for your idempotency keys.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "order": {
          "$ref": "#/definitions/CreateOrderRequest",
          "description": "The order including line items to be checked out."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "maxLength": 254,
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "maxLength": 254,
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "maxLength": 800,
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.\n\nDefault: none; only exists if explicitly set."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeRequestAdditionalRecipient"
          },
          "description": "The basic primitive of multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your additional_recipients\nmust not be more than 90% of the `total_money` calculated by Square for your order.\nThe `location_id` must be the valid location of the app owner merchant.\n\nThis field requires `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in sandbox."
        },
        "note": {
          "maxLength": 60,
          "type": "string",
          "description": "An optional note to associate with the checkout object.\n\nThis value cannot exceed 60 characters."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad6",
          "order": {
            "reference_id": "reference_id",
            "line_items": [
              {
                "name": "Printed T Shirt",
                "quantity": "2",
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "name": "7% off previous season item",
                    "percentage": "7"
                  },
                  {
                    "name": "$3 off Customer Discount",
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    }
                  }
                ]
              },
              {
                "name": "Slim Jeans",
                "quantity": "1",
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                }
              },
              {
                "name": "Woven Sweater",
                "quantity": "3",
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "name": "$11 off Customer Discount",
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    }
                  }
                ],
                "taxes": [
                  {
                    "name": "Fair Trade Tax",
                    "percentage": "5"
                  }
                ]
              }
            ],
            "discounts": [
              {
                "name": "Father\u0027s day 12% OFF",
                "percentage": "12"
              },
              {
                "name": "Global Sales $55 OFF",
                "amount_money": {
                  "amount": 5500,
                  "currency": "USD"
                }
              }
            ],
            "taxes": [
              {
                "name": "Sales Tax",
                "percentage": "8.5"
              }
            ]
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 60,
                "currency": "USD"
              }
            }
          ],
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          },
          "redirect_url": "https://merchant.website.com/order-confirm"
        }
      }
    },
    "CreateCheckoutResponse": {
      "type": "object",
      "properties": {
        "checkout": {
          "$ref": "#/definitions/Checkout",
          "description": "The newly created checkout.\nIf the same request was made with the same idempotency_key, this will be the checkout created with the idempotency_key."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "checkout": {
          "id": "CAISEHGimXh-C3RIT4og1a6u1qw",
          "checkout_page_url": "https://connect.squareup.com/v2/checkout?c\u003dCAISEHGimXh-C3RIT4og1a6u1qw\u0026l\u003dCYTKRM7R7JMV8",
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          },
          "redirect_url": "https://merchant.website.com/order-confirm",
          "order": {
            "location_id": "CYTKRM7R7JMV8",
            "reference_id": "reference_id",
            "line_items": [
              {
                "name": "Printed T Shirt",
                "quantity": "2",
                "taxes": [
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 103,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "7% off previous season item",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "7",
                    "applied_money": {
                      "amount": 210,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 335,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "$3 off Customer Discount",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 949,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 103,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 1794,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1309,
                  "currency": "USD"
                }
              },
              {
                "name": "Slim Jeans",
                "quantity": "1",
                "taxes": [
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 105,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 968,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 105,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 1268,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1337,
                  "currency": "USD"
                }
              },
              {
                "name": "Wooven Sweater",
                "quantity": "3",
                "taxes": [
                  {
                    "name": "Fair Trade Tax",
                    "type": "ADDITIVE",
                    "percentage": "5",
                    "applied_money": {
                      "amount": 228,
                      "currency": "USD"
                    }
                  },
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 387,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 1260,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "$11 off Customer Discount",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 3583,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 615,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 5943,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 5172,
                  "currency": "USD"
                }
              }
            ],
            "total_money": {
              "amount": 7818,
              "currency": "USD"
            },
            "total_tax_money": {
              "amount": 823,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 9005,
              "currency": "USD"
            }
          },
          "created_at": "2017-06-16T22:25:35Z",
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 60,
                "currency": "USD"
              }
            }
          ]
        }
      }
    },
    "CreateCustomerCardRequest": {
      "type": "object",
      "required": [
        "card_nonce"
      ],
      "properties": {
        "card_nonce": {
          "type": "string",
          "description": "A card nonce representing the credit card to link to the customer.\n\nCard nonces are generated by the `SqPaymentForm` that buyers enter\ntheir card information into. See\n[Embedding the payment form](/payments/sqpaymentform/overview) for\nmore information.\n\n__Note:__ Card nonces generated by digital wallets (e.g., Apple Pay)\ncannot be used to create a customer card."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "Address information for the card on file. Only the `postal_code`\nfield is required for payments in the US and Canada."
        },
        "cardholder_name": {
          "type": "string",
          "description": "The cardholder\u0027s name."
        }
      },
      "description": "Defines the fields that are included in the request body of a request\nto the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "card_nonce": "YOUR_CARD_NONCE",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "cardholder_name": "Amelia Earhart"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp",
        "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.java",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php",
        "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.javascript",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby"
      }
    },
    "CreateCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The created card on file."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.\n\nOne of `errors` or `card` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "card": {
          "id": "icard-card_id",
          "card_brand": "VISA",
          "last_4": "1111",
          "exp_month": 11,
          "exp_year": 2018,
          "cardholder_name": "Amelia Earhart",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp",
        "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.java",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php",
        "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.javascript",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby"
      }
    },
    "CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "The idempotency key for the request.\tSee the [Idempotency](/basics/api101/idempotency)\nguide for more information."
        },
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "An optional note to associate with the customer."
        },
        "birthday": {
          "type": "string",
          "description": "The customer birthday in RFC-3339 format. Year is optional,\ntimezone and times are not allowed. Example: `0000-09-01T00:00:00-00:00`\nfor a birthday on September 1st. `1998-09-01T00:00:00-00:00` for a birthday\non September 1st 1998."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[CreateCustomer](#endpoint-createcustomer) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerRequest.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerRequest.csharp",
        "java": "/sdk_samples/CreateCustomer/CreateCustomerRequest.java",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerRequest.php",
        "javascript": "/sdk_samples/CreateCustomer/CreateCustomerRequest.javascript",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerRequest.ruby"
      }
    },
    "CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The created customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomer](#endpoint-createcustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerResponse.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerResponse.csharp",
        "java": "/sdk_samples/CreateCustomer/CreateCustomerResponse.java",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerResponse.php",
        "javascript": "/sdk_samples/CreateCustomer/CreateCustomerResponse.javascript",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerResponse.ruby"
      }
    },
    "CreateMobileAuthorizationCodeRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The Square location ID the authorization code should be tied to."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[CreateMobileAuthorizationCode](#endpoint-createmobileauthorizationcode) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_url": "/mobile/authorization-code",
        "request_body": {
          "location_id": "YOUR_LOCATION_ID"
        }
      }
    },
    "CreateMobileAuthorizationCodeResponse": {
      "type": "object",
      "properties": {
        "authorization_code": {
          "type": "string",
          "description": "Generated authorization code that connects a mobile application instance to a Square account."
        },
        "expires_at": {
          "type": "string",
          "description": "The timestamp when `authorization_code` expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "An error object that provides details about how creation of authorization code failed."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateMobileAuthorizationCode](#endpoint-createmobileauthorizationcode) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "authorization_code": "YOUR_MOBILE_AUTHZ_CODE",
        "expires_at": "2019-01-10T19:42:08Z"
      }
    },
    "CreateOrderRequest": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The order to create. If this field is set, then the only other top-level field that can be\nset is the idempotency_key."
        },
        "idempotency_key": {
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\norder among orders you\u0027ve created.\n\nIf you\u0027re unsure whether a particular order was created successfully,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate orders.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "__Deprecated__: Please set the reference_id on the nested [order](#type-order) field\ninstead.\n\nAn optional ID you can associate with the order for your own\npurposes (such as to associate the order with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters.",
          "x-release-status": "DEPRECATED"
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestLineItem"
          },
          "description": "__Deprecated__: Please set the line_items on the nested [order](#type-order) field\ninstead.\n\nThe line items to associate with this order.\n\nEach line item represents a different product to include in a purchase.",
          "x-release-status": "DEPRECATED"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "description": "__Deprecated__: Please set the taxes on the nested [order](#type-order) field instead.\n\nThe taxes to include on the order.",
          "x-release-status": "DEPRECATED"
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "description": "__Deprecated__: Please set the discounts on the nested [order](#type-order) field instead.\n\nThe discounts to include on the order.",
          "x-release-status": "DEPRECATED"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "8193148c-9586-11e6-99f9-28cfe92138cf",
          "reference_id": "my-order-001",
          "line_items": [
            {
              "name": "New York Strip Steak",
              "quantity": "1",
              "base_price_money": {
                "amount": 1599,
                "currency": "USD"
              }
            },
            {
              "quantity": "2",
              "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
              "modifiers": [
                {
                  "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ"
                }
              ],
              "discounts": [
                {
                  "name": "Sale - $1.00 off",
                  "amount_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ]
            }
          ],
          "taxes": [
            {
              "name": "State Sales Tax",
              "percentage": "9"
            }
          ],
          "discounts": [
            {
              "name": "Labor Day Sale",
              "percentage": "5"
            },
            {
              "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7"
            }
          ]
        }
      }
    },
    "CreateOrderRequestDiscount": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "Only used for catalog discounts.\nThe catalog object ID for an existing [CatalogDiscount](#type-catalogdiscount).\n\nDo not provide a value for this field if you provide values in other fields for an ad hoc discount."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "Only used for ad hoc discounts. The discount\u0027s name."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "Only used for ad hoc discounts. The percentage of the discount, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0"
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "Only used for ad hoc discounts. The monetary amount of the discount."
        }
      },
      "description": "__Deprecated__: Please use the [OrderLineItemDiscount](#type-orderlineitemdiscount) type\nin the order field of [CreateOrderRequest](#type-createorderrequest) instead.\n\nRepresents a discount that can apply to either a single line item or an entire order.",
      "x-release-status": "DEPRECATED"
    },
    "CreateOrderRequestLineItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "name": {
          "maxLength": 500,
          "type": "string",
          "description": "Only used for ad hoc line items. The name of the line item. This value cannot exceed 500 characters.\n\nDo not provide a value for this field if you provide a value for `catalog_object_id`."
        },
        "quantity": {
          "minLength": 1,
          "maxLength": 5,
          "type": "string",
          "description": "The quantity to purchase, as a string representation of a number.\n\nThis string must have a positive integer value."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item.\n\n`base_price_money` is required for ad hoc line items and variable priced [CatalogItemVariation](#type-catalogitemvariation)s.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the CatalogItemVariation\u0027s price."
        },
        "variation_name": {
          "maxLength": 255,
          "type": "string",
          "description": "Only used for ad hoc line items. The variation name of the line item. This value cannot exceed 255 characters.\n\nIf this value is not set for an ad hoc line item, the default value of `Regular` is used.\n\nDo not provide a value for this field if you provide a value for the `catalog_object_id`."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "The note of the line item. This value cannot exceed 500 characters."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "Only used for Catalog line items.\nThe catalog object ID for an existing [CatalogItemVariation](#type-catalogitemvariation).\n\nDo not provide a value for this field if you provide a value for `name` and `base_price_money`."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestModifier"
          },
          "description": "Only used for Catalog line items. The modifiers to include on the line item."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "description": "The taxes to include on the line item."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "description": "The discounts to include on the line item."
        }
      },
      "description": "__Deprecated__: Please use the [OrderLineItem](#type-orderlineitem) type in the order\nfield of [CreateOrderRequest](#type-createorderrequest) instead.\n\nRepresents a line item to include in an order. Each line item describes\na different product to purchase, with its own quantity and price details.\n\nLine items can either reference objects from the merchant\u0027s catalog, or can\nalternatively specify a name and price instead.",
      "x-release-status": "DEPRECATED"
    },
    "CreateOrderRequestModifier": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object ID of a [CatalogModifier](#type-catalogmodifier)."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "Only used for ad hoc modifiers. The name of the modifier. `name` cannot exceed 255 characters.\n\nDo not provide a value for `name` if you provide a value for `catalog_object_id`."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the predefined [CatalogModifier](#type-catalogmodifier) price."
        }
      },
      "description": "__Deprecated__: Please use the [OrderLineItemModifier](#type-orderlineitemmodifier) type\ninstead.\n\nRepresents a modifier applied to a single line item.\n\nModifiers can reference existing objects in a merchant catalog or be constructed ad hoc at the time of purchase by providing a name and price.",
      "x-release-status": "DEPRECATED"
    },
    "CreateOrderRequestTax": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "Only used for catalog taxes. The catalog object ID of an existing [CatalogTax](#type-catalogtax).\n\nDo not provide a value for this field if you provide values in other fields for an ad hoc tax."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "Only used for ad hoc taxes. The tax\u0027s name.\n\nDo not provide a value for this field if you set `catalog_object_id`."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN_TAX",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Only used for ad hoc taxes. Indicates the calculation method used to apply the line item tax.\n\nDefault: `ADDITIVE`; See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "Only used for ad hoc taxes. The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0"
        }
      },
      "description": "__Deprecated__: Please use the [OrderLineItemTax](#type-orderlineitemtax) type in the\norder field of [CreateOrderRequest](#type-createorderrequest) instead.\n\nRepresents a tax that can apply to either a single line item or an entire order.",
      "x-release-status": "DEPRECATED"
    },
    "CreateOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The newly created order."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateOrder](#endpoint-createorder) endpoint.\n\nOne of `errors` or `order` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "order": {
          "id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "location_id": "LOCATION_ID",
          "line_items": [
            {
              "name": "New York Strip Steak",
              "quantity": "1",
              "taxes": [
                {
                  "name": "State Sales Tax",
                  "type": "ADDITIVE",
                  "percentage": "9",
                  "applied_money": {
                    "amount": 136,
                    "currency": "USD"
                  }
                }
              ],
              "discounts": [
                {
                  "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
                  "name": "Membership Discount",
                  "type": "FIXED_PERCENTAGE",
                  "percentage": "0.5",
                  "applied_money": {
                    "amount": 8,
                    "currency": "USD"
                  },
                  "scope": "ORDER"
                },
                {
                  "name": "Labor Day Sale",
                  "type": "FIXED_PERCENTAGE",
                  "percentage": "5",
                  "applied_money": {
                    "amount": 79,
                    "currency": "USD"
                  },
                  "scope": "ORDER"
                }
              ],
              "base_price_money": {
                "amount": 1599,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 1599,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 136,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 87,
                "currency": "USD"
              },
              "total_money": {
                "amount": 1648,
                "currency": "USD"
              }
            },
            {
              "name": "New York Steak",
              "quantity": "2",
              "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
              "variation_name": "Larger",
              "modifiers": [
                {
                  "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ",
                  "name": "Well",
                  "base_price_money": {
                    "amount": 50,
                    "currency": "USD"
                  },
                  "total_price_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ],
              "taxes": [
                {
                  "name": "State Sales Tax",
                  "type": "ADDITIVE",
                  "percentage": "9",
                  "applied_money": {
                    "amount": 374,
                    "currency": "USD"
                  }
                }
              ],
              "discounts": [
                {
                  "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
                  "name": "Membership Discount",
                  "type": "FIXED_PERCENTAGE",
                  "percentage": "0.5",
                  "applied_money": {
                    "amount": 22,
                    "currency": "USD"
                  },
                  "scope": "ORDER"
                },
                {
                  "name": "Labor Day Sale",
                  "type": "FIXED_PERCENTAGE",
                  "percentage": "5",
                  "applied_money": {
                    "amount": 224,
                    "currency": "USD"
                  },
                  "scope": "ORDER"
                },
                {
                  "name": "Sale - $1.00 off",
                  "type": "FIXED_AMOUNT",
                  "amount_money": {
                    "amount": 100,
                    "currency": "USD"
                  },
                  "applied_money": {
                    "amount": 100,
                    "currency": "USD"
                  },
                  "scope": "LINE_ITEM"
                }
              ],
              "base_price_money": {
                "amount": 2200,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 4500,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 374,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 346,
                "currency": "USD"
              },
              "total_money": {
                "amount": 4528,
                "currency": "USD"
              }
            }
          ],
          "total_money": {
            "amount": 6176,
            "currency": "USD"
          },
          "total_tax_money": {
            "amount": 510,
            "currency": "USD"
          },
          "total_discount_money": {
            "amount": 433,
            "currency": "USD"
          }
        }
      }
    },
    "CreateRefundRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "tender_id",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrefund among refunds you\u0027ve created for the tender.\n\nIf you\u0027re unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "tender_id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the tender to refund.\n\nA [`Transaction`](#type-transaction) has one or more `tenders` (i.e., methods\nof payment) associated with it, and you refund each tender separately with\nthe Connect API."
        },
        "reason": {
          "maxLength": 192,
          "type": "string",
          "description": "A description of the reason for the refund.\n\nDefault value: `Refund via API`"
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to refund.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThis amount cannot exceed the amount that was originally charged to the\ntender that corresponds to `tender_id`."
        }
      },
      "description": "Defines the body parameters that can be included in\na request to the [CreateRefund](#endpoint-createrefund) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad2",
          "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
          "reason": "a reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          }
        }
      }
    },
    "CreateRefundResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refund": {
          "$ref": "#/definitions/Refund",
          "description": "The created refund."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "refund": {
          "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
          "location_id": "18YC4JDH91E1H",
          "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
          "created_at": "2016-02-12T00:28:18Z",
          "reason": "some reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 10,
                "currency": "USD"
              },
              "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
            }
          ],
          "status": "PENDING"
        }
      }
    },
    "CreateShiftRequest": {
      "type": "object",
      "required": [
        "shift"
      ],
      "properties": {
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "Unique string value to insure the idempotency of the operation."
        },
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The `Shift` to be created"
        }
      },
      "description": "Represents a request to create a `Shift`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "HIDSNG5KS478L",
          "shift": {
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Barista",
              "hourly_rate": {
                "amount": 1100,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ]
          }
        }
      }
    },
    "CreateShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The `Shift` that was created on the request."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to the request to create a `Shift`. Contains\nthe created `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "K0YH4CV5462JB",
          "employee_id": "ormj0jJJZ5OZIzxrZYJI",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-01-25T03:11:00-05:00",
          "end_at": "2019-01-25T13:11:00-05:00",
          "wage": {
            "title": "Barista",
            "hourly_rate": {
              "amount": 1100,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "X7GAQYVVRRG6P",
              "start_at": "2019-01-25T06:11:00-05:00",
              "end_at": "2019-01-25T06:16:00-05:00",
              "break_type_id": "REGS1EQR1TPZ5",
              "name": "Tea Break",
              "expected_duration": "PT5M",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 1,
          "created_at": "2019-02-28T00:39:02Z",
          "updated_at": "2019-02-28T00:39:02Z"
        }
      }
    },
    "Customer": {
      "type": "object",
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The customer\u0027s unique ID."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the customer was created, in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the customer was last updated, in RFC 3339 format."
        },
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          },
          "description": "The payment details of the customer\u0027s cards on file."
        },
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "nickname": {
          "type": "string",
          "description": "The customer\u0027s nickname."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "birthday": {
          "type": "string",
          "description": "The customer\u0027s birthday in RFC-3339 format. Year is optional,\ntimezone and times are not allowed. Example: `0000-09-01T00:00:00-00:00`\nfor a birthday on September 1st. `1998-09-01T00:00:00-00:00` for a birthday\non September 1st 1998."
        },
        "reference_id": {
          "type": "string",
          "description": "A second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "A note to associate with the customer."
        },
        "preferences": {
          "$ref": "#/definitions/CustomerPreferences",
          "description": "The customer\u0027s preferences."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroupInfo"
          },
          "description": "The groups the customer belongs to."
        },
        "creation_source": {
          "type": "string",
          "enum": [
            "OTHER",
            "APPOINTMENTS",
            "COUPON",
            "DELETION_RECOVERY",
            "DIRECTORY",
            "EGIFTING",
            "EMAIL_COLLECTION",
            "FEEDBACK",
            "IMPORT",
            "INVOICES",
            "LOYALTY",
            "MARKETING",
            "MERGE",
            "ONLINE_STORE",
            "INSTANT_PROFILE",
            "TERMINAL",
            "THIRD_PARTY",
            "THIRD_PARTY_IMPORT",
            "UNMERGE_RECOVERY"
          ],
          "description": "A creation source represents the method used to create the\ncustomer profile."
        }
      },
      "description": "Represents one of a business\u0027s customers, which can have one or more\ncards on file associated with it.",
      "x-release-status": "PUBLIC"
    },
    "CustomerCreationSourceFilter": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OTHER",
              "APPOINTMENTS",
              "COUPON",
              "DELETION_RECOVERY",
              "DIRECTORY",
              "EGIFTING",
              "EMAIL_COLLECTION",
              "FEEDBACK",
              "IMPORT",
              "INVOICES",
              "LOYALTY",
              "MARKETING",
              "MERGE",
              "ONLINE_STORE",
              "INSTANT_PROFILE",
              "TERMINAL",
              "THIRD_PARTY",
              "THIRD_PARTY_IMPORT",
              "UNMERGE_RECOVERY"
            ]
          },
          "description": "The list of creation sources used as filtering criteria. See\n[CustomerCreationSource](#type-customercreationsource) for possible values."
        },
        "rule": {
          "type": "string",
          "enum": [
            "INCLUDE",
            "EXCLUDE"
          ],
          "description": "Indicates whether a customer profile matching the filter criteria\nshould be included in the result or excluded from the result.\nDefault: `INCLUDE`. See\n[CustomerInclusionExclusion](#type-customerinclusionexclusion) for possible\nvalues."
        }
      },
      "description": "Creation source filter.\n\nIf one or more creation sources are set, customer profiles are included in,\nor excluded from, the result if they match at least one of the filter\ncriteria.",
      "x-release-status": "PUBLIC"
    },
    "CustomerFilter": {
      "type": "object",
      "properties": {
        "creation_source": {
          "$ref": "#/definitions/CustomerCreationSourceFilter",
          "description": "A filter to select customers based on their creation source."
        },
        "created_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "A filter to select customers based on when they were created."
        },
        "updated_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "A filter to select customers based on when they were updated."
        }
      },
      "description": "Represents a set of [`CustomerQuery`](#type-customerquery) filters used\nto limit the set of Customers returned by [`SearchCustomers`](#endpoint-seachcustomers).",
      "x-release-status": "PUBLIC"
    },
    "CustomerGroupInfo": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the customer group."
        },
        "name": {
          "type": "string",
          "description": "The name of the customer group."
        }
      },
      "description": "Contains some brief information about a customer group with its identifier included.",
      "x-release-status": "PUBLIC"
    },
    "CustomerPreferences": {
      "type": "object",
      "properties": {
        "email_unsubscribed": {
          "type": "boolean",
          "description": "The customer has unsubscribed from receiving marketing campaign emails."
        }
      },
      "description": "Represents a particular customer\u0027s preferences.",
      "x-release-status": "PUBLIC"
    },
    "CustomerQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/CustomerFilter",
          "description": "A list of filter criteria."
        },
        "sort": {
          "$ref": "#/definitions/CustomerSort",
          "description": "Sort criteria for query results. The default sort behavior is to order\ncustomers alphabetically by `given_name` and `last_name`."
        }
      },
      "description": "Represents a query (filtering and sorting criteria) used to search\nfor customer profiles.",
      "x-release-status": "PUBLIC"
    },
    "CustomerSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "CREATED_AT"
          ],
          "description": "The field to sort the results on. It could be the total money spent at\nthe merchant, the date of the first visit (etc). See\n[CustomerSortField](#type-customersortfield) for possible values. Default\nvalue: `DEFAULT`."
        },
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "Indicates the order in which results should be displayed based on the\nvalue of the sort field. String comparisons use standard alphabetic comparison\nto determine order. Strings representing numbers are sorted as strings. See\n[SortOrder](#type-sortorder) for possible values. Default value: `ASC`."
        }
      },
      "description": "Indicates the field to use for sorting customer profiles. For example,\nby total money spent with the merchant or the date of their first purchase.",
      "x-release-status": "PUBLIC"
    },
    "DateRange": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe beginning of a date range (inclusive)"
        },
        "end_date": {
          "type": "string",
          "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe end of a date range (inclusive)"
        }
      },
      "description": "A range defined by two dates. Used for filtering a query for Connect v2 \nobjects that have date properties.",
      "x-release-status": "PUBLIC"
    },
    "DeleteBreakTypeRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to delete a `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteBreakTypeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to delete a `BreakType`. May contain a set \nof `Error` objects if the request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteCatalogObjectRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.\nMultiple IDs may be returned when associated objects are also deleted, for example\na [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field)\nwhen its parent [CatalogItem](#type-catalogitem) is deleted."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g.,\n\"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "deleted_object_ids": [
          "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "KQLFFHA6K6J3YQAQAWDQAL57"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      }
    },
    "DeleteCustomerCardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp",
        "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.java",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php",
        "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.javascript",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby"
      }
    },
    "DeleteCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp",
        "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.java",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php",
        "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.javascript",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby"
      }
    },
    "DeleteCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp",
        "java": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.java",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.php",
        "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.javascript",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby"
      }
    },
    "DeleteCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomer](#endpoint-deletecustomer) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp",
        "java": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.java",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.php",
        "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.javascript",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby"
      }
    },
    "DeleteShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to delete a `Shift`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteShiftResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to delete a `Shift`. May contain a set of \n`Error` objects if the request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The device\u0027s Square-issued ID."
        },
        "name": {
          "type": "string",
          "description": "The device\u0027s merchant-specified name."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this `Employee`."
        },
        "first_name": {
          "type": "string",
          "description": "Given (first) name of the employee."
        },
        "last_name": {
          "type": "string",
          "description": "Family (last) name of the employee"
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of location IDs where this employee has access."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "Specifies the status of the employee being fetched."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        }
      },
      "description": "An employee created in the **Square Dashboard** account of a business. \nUsed by the Labor API.",
      "x-release-status": "PUBLIC"
    },
    "EmployeeWage": {
      "type": "object",
      "required": [
        "employee_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object."
        },
        "employee_id": {
          "minLength": 1,
          "type": "string",
          "description": "The `Employee` that this wage is assigned to."
        },
        "title": {
          "type": "string",
          "description": "The job title that this wage relates to."
        },
        "hourly_rate": {
          "$ref": "#/definitions/Money",
          "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on annual wage and hours worked per week."
        }
      },
      "description": "The hourly wage rate that an employee will earn on a `Shift` for doing the job\nspecified by the `title` property of this object.",
      "x-release-status": "PUBLIC"
    },
    "Error": {
      "type": "object",
      "required": [
        "category",
        "code"
      ],
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "API_ERROR",
            "AUTHENTICATION_ERROR",
            "INVALID_REQUEST_ERROR",
            "RATE_LIMIT_ERROR",
            "PAYMENT_METHOD_ERROR",
            "REFUND_ERROR"
          ],
          "description": "The error\u0027s high-level category. See [ErrorCategory](#type-errorcategory)\nfor possible values."
        },
        "code": {
          "type": "string",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "UNAUTHORIZED",
            "ACCESS_TOKEN_EXPIRED",
            "ACCESS_TOKEN_REVOKED",
            "FORBIDDEN",
            "INSUFFICIENT_SCOPES",
            "APPLICATION_DISABLED",
            "V1_APPLICATION",
            "V1_ACCESS_TOKEN",
            "CARD_PROCESSING_NOT_ENABLED",
            "BAD_REQUEST",
            "MISSING_REQUIRED_PARAMETER",
            "INCORRECT_TYPE",
            "INVALID_TIME",
            "INVALID_TIME_RANGE",
            "INVALID_VALUE",
            "INVALID_CURSOR",
            "UNKNOWN_QUERY_PARAMETER",
            "CONFLICTING_PARAMETERS",
            "EXPECTED_JSON_BODY",
            "INVALID_SORT_ORDER",
            "VALUE_REGEX_MISMATCH",
            "VALUE_TOO_SHORT",
            "VALUE_TOO_LONG",
            "VALUE_TOO_LOW",
            "VALUE_TOO_HIGH",
            "VALUE_EMPTY",
            "ARRAY_LENGTH_TOO_LONG",
            "ARRAY_LENGTH_TOO_SHORT",
            "ARRAY_EMPTY",
            "EXPECTED_BOOLEAN",
            "EXPECTED_INTEGER",
            "EXPECTED_FLOAT",
            "EXPECTED_STRING",
            "EXPECTED_OBJECT",
            "EXPECTED_ARRAY",
            "EXPECTED_MAP",
            "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
            "INVALID_ARRAY_VALUE",
            "INVALID_ENUM_VALUE",
            "INVALID_CONTENT_TYPE",
            "INVALID_FORM_VALUE",
            "ONE_INSTRUMENT_EXPECTED",
            "NO_FIELDS_SET",
            "DEPRECATED_FIELD_SET",
            "CARD_EXPIRED",
            "INVALID_EXPIRATION",
            "INVALID_EXPIRATION_YEAR",
            "INVALID_EXPIRATION_DATE",
            "UNSUPPORTED_CARD_BRAND",
            "UNSUPPORTED_ENTRY_METHOD",
            "INVALID_ENCRYPTED_CARD",
            "INVALID_CARD",
            "DELAYED_TRANSACTION_EXPIRED",
            "DELAYED_TRANSACTION_CANCELED",
            "DELAYED_TRANSACTION_CAPTURED",
            "DELAYED_TRANSACTION_FAILED",
            "CARD_TOKEN_EXPIRED",
            "CARD_TOKEN_USED",
            "AMOUNT_TOO_HIGH",
            "UNSUPPORTED_INSTRUMENT_TYPE",
            "REFUND_AMOUNT_INVALID",
            "REFUND_ALREADY_PENDING",
            "PAYMENT_NOT_REFUNDABLE",
            "INVALID_CARD_DATA",
            "LOCATION_MISMATCH",
            "IDEMPOTENCY_KEY_REUSED",
            "UNEXPECTED_VALUE",
            "SANDBOX_NOT_SUPPORTED",
            "INVALID_EMAIL_ADDRESS",
            "INVALID_PHONE_NUMBER",
            "CHECKOUT_EXPIRED",
            "BAD_CERTIFICATE",
            "CARD_DECLINED",
            "VERIFY_CVV_FAILURE",
            "VERIFY_AVS_FAILURE",
            "CARD_DECLINED_CALL_ISSUER",
            "NOT_FOUND",
            "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
            "METHOD_NOT_ALLOWED",
            "NOT_ACCEPTABLE",
            "REQUEST_TIMEOUT",
            "CONFLICT",
            "REQUEST_ENTITY_TOO_LARGE",
            "UNSUPPORTED_MEDIA_TYPE",
            "RATE_LIMITED",
            "NOT_IMPLEMENTED",
            "SERVICE_UNAVAILABLE",
            "GATEWAY_TIMEOUT"
          ],
          "description": "The error\u0027s specific code. See [ErrorCode](#type-errorcode) for possible\nvalues"
        },
        "detail": {
          "type": "string",
          "description": "A human-readable description of the error for debugging purposes."
        },
        "field": {
          "type": "string",
          "description": "The name of the field provided in the original request that the error\npertains to, if any."
        }
      },
      "description": "Represents an error encountered during a request to the Connect API.",
      "x-release-status": "PUBLIC"
    },
    "GetBreakTypeRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to GET a `BreakType` by ID",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to get a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "lA0mj_RSOprNPwMUXdYp",
          "location_id": "059SB0E0WCNWS",
          "break_name": "Lunch Break",
          "expected_duration": "PT30M",
          "is_paid": true,
          "version": 1,
          "created_at": "2019-02-21T17:50:00Z",
          "updated_at": "2019-02-21T17:50:00Z"
        }
      }
    },
    "GetEmployeeWageRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to get an `EmployeeWage`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetEmployeeWageResponse": {
      "type": "object",
      "properties": {
        "employee_wage": {
          "$ref": "#/definitions/EmployeeWage",
          "description": "The requested `EmployeeWage` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to a request to get an `EmployeeWage`. Contains\nthe requested `EmployeeWage` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "employee_wage": {
          "id": "pXS3qCv7BERPnEGedM4S8mhm",
          "employee_id": "33fJchumvVdJwxV0H6L9",
          "title": "Manager",
          "hourly_rate": {
            "amount": 2000,
            "currency": "USD"
          }
        }
      }
    },
    "GetShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to get a `Shift` by ID",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The requested `Shift`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to request to get a `Shift`. Contains\nthe requested `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "T35HMQSN89SV4",
          "employee_id": "D71KRMQof6cXGUW0aAv7",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-02-23T18:00:00-05:00",
          "end_at": "2019-02-23T21:00:00-05:00",
          "wage": {
            "title": "Cashier",
            "hourly_rate": {
              "amount": 1457,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "M9BBKEPQAQD2T",
              "start_at": "2019-02-23T19:00:00-05:00",
              "end_at": "2019-02-23T20:00:00-05:00",
              "break_type_id": "92EPDRQKJ5088",
              "name": "Lunch Break",
              "expected_duration": "PT1H",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 1,
          "created_at": "2019-02-27T00:12:12Z",
          "updated_at": "2019-02-27T00:12:12Z"
        }
      }
    },
    "InventoryAdjustment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID generated by Square for the\n[InventoryAdjustment](#type-inventoryadjustment)."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n[InventoryAdjustment](#type-inventoryadjustment) to an external\nsystem."
        },
        "from_state": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "IN_STOCK",
            "SOLD",
            "RETURNED_BY_CUSTOMER",
            "RESERVED_FOR_SALE",
            "SOLD_ONLINE",
            "ORDERED_FROM_VENDOR",
            "RECEIVED_FROM_VENDOR",
            "IN_TRANSIT_TO",
            "NONE",
            "WASTE",
            "UNLINKED_RETURN"
          ],
          "description": "The [InventoryState](#type-inventorystate) of the related quantity\nof items before the adjustment."
        },
        "to_state": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "IN_STOCK",
            "SOLD",
            "RETURNED_BY_CUSTOMER",
            "RESERVED_FOR_SALE",
            "SOLD_ONLINE",
            "ORDERED_FROM_VENDOR",
            "RECEIVED_FROM_VENDOR",
            "IN_TRANSIT_TO",
            "NONE",
            "WASTE",
            "UNLINKED_RETURN"
          ],
          "description": "The [InventoryState](#type-inventorystate) of the related quantity\nof items after the adjustment."
        },
        "location_id": {
          "type": "string",
          "description": "The Square ID of the [Location](#type-location) where the related\nquantity of items are being tracked."
        },
        "catalog_object_id": {
          "type": "string",
          "description": "The Square generated ID of the\n[CatalogObject](#type-catalogobject) being tracked."
        },
        "catalog_object_type": {
          "type": "string",
          "description": "The [CatalogObjectType](#type-catalogobjecttype) of the\n[CatalogObject](#type-catalogobject) being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "quantity": {
          "type": "string",
          "description": "The number of items affected by the adjustment as a decimal string.\nFractional quantities are not supported."
        },
        "total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The read-only total price paid for goods associated with the\nadjustment. Present if and only if `to_state` is `SOLD`. Always\nnon-negative."
        },
        "occurred_at": {
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe adjustment took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the adjustment."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that caused the\ninventory adjustment."
        },
        "employee_id": {
          "type": "string",
          "description": "The Square ID of the [Employee](#type-employee) responsible for the\ninventory adjustment."
        },
        "transaction_id": {
          "type": "string",
          "description": "The read-only Square ID of the [Transaction][#type-transaction] that\ncaused the adjustment. Only relevant for payment-related state\ntransitions."
        },
        "refund_id": {
          "type": "string",
          "description": "The read-only Square ID of the [Refund][#type-refund] that\ncaused the adjustment. Only relevant for refund-related state\ntransitions."
        },
        "purchase_order_id": {
          "type": "string",
          "description": "The read-only Square ID of the purchase order that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
        },
        "goods_receipt_id": {
          "type": "string",
          "description": "The read-only Square ID of the Square goods receipt that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
        }
      },
      "description": "Represents a change in state or quantity of product inventory at a\nparticular time and location.",
      "x-release-status": "PUBLIC"
    },
    "InventoryChange": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PHYSICAL_COUNT",
            "ADJUSTMENT",
            "TRANSFER"
          ],
          "description": "Indicates how the inventory change was applied. See\n[InventoryChangeType](#type-inventorychangetype) for all possible values."
        },
        "physical_count": {
          "$ref": "#/definitions/InventoryPhysicalCount",
          "description": "Contains details about the physical count when `type` is\n`PHYSICAL_COUNT` and unset for all other types."
        },
        "adjustment": {
          "$ref": "#/definitions/InventoryAdjustment",
          "description": "Contains details about the inventory adjustment when `type` is\n`ADJUSTMENT` and unset for all other types."
        },
        "transfer": {
          "$ref": "#/definitions/InventoryTransfer",
          "description": "Contains details about the inventory transfer when `type` is\n`TRANSFER` and unset for all other types."
        }
      },
      "description": "Represents a single physical count, inventory, adjustment, or transfer\nthat is part of the history of inventory changes for a particular\n[CatalogObject](#type-catalogobject).",
      "x-release-status": "PUBLIC"
    },
    "InventoryCount": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "type": "string",
          "description": "The Square generated ID of the\n[CatalogObject](#type-catalogobject) being tracked."
        },
        "catalog_object_type": {
          "type": "string",
          "description": "The [CatalogObjectType](#type-catalogobjecttype) of the\n[CatalogObject](#type-catalogobject) being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "state": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "IN_STOCK",
            "SOLD",
            "RETURNED_BY_CUSTOMER",
            "RESERVED_FOR_SALE",
            "SOLD_ONLINE",
            "ORDERED_FROM_VENDOR",
            "RECEIVED_FROM_VENDOR",
            "IN_TRANSIT_TO",
            "NONE",
            "WASTE",
            "UNLINKED_RETURN"
          ],
          "description": "The current [InventoryState](#type-inventorystate) for the related\nquantity of items."
        },
        "location_id": {
          "type": "string",
          "description": "The Square ID of the [Location](#type-location) where the related\nquantity of items are being tracked."
        },
        "quantity": {
          "type": "string",
          "description": "The number of items in the count as a decimal string. Fractional\nquantities are not supported."
        },
        "calculated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the most recent physical count or adjustment that had an affect\non the estimated count."
        }
      },
      "description": "Represents the estimated quantity of items in a particular state at a\nparticular location based on the known history of physical counts and\ninventory adjustments.",
      "x-release-status": "PUBLIC"
    },
    "InventoryPhysicalCount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID generated by Square for the\n[InventoryPhysicalCount](#type-inventoryphysicalcount)."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n[InventoryPhysicalCount](#type-inventoryphysicalcount) to an external\nsystem."
        },
        "catalog_object_id": {
          "type": "string",
          "description": "The Square generated ID of the\n[CatalogObject](#type-catalogobject) being tracked."
        },
        "catalog_object_type": {
          "type": "string",
          "description": "The [CatalogObjectType](#type-catalogobjecttype) of the\n[CatalogObject](#type-catalogobject) being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "state": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "IN_STOCK",
            "SOLD",
            "RETURNED_BY_CUSTOMER",
            "RESERVED_FOR_SALE",
            "SOLD_ONLINE",
            "ORDERED_FROM_VENDOR",
            "RECEIVED_FROM_VENDOR",
            "IN_TRANSIT_TO",
            "NONE",
            "WASTE",
            "UNLINKED_RETURN"
          ],
          "description": "The current [InventoryState](#type-inventorystate) for the related\nquantity of items."
        },
        "location_id": {
          "type": "string",
          "description": "The Square ID of the [Location](#type-location) where the related\nquantity of items are being tracked."
        },
        "quantity": {
          "type": "string",
          "description": "The number of items affected by the physical count as a decimal\nstring. Fractional quantities are not supported."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that submitted the\nphysical count."
        },
        "employee_id": {
          "type": "string",
          "description": "The Square ID of the [Employee](#type-employee) responsible for the\nphysical count."
        },
        "occurred_at": {
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe physical count took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the physical count."
        }
      },
      "description": "Represents a verified (re)count of items in a given state at a specific\nlocation. For example, the quantity of items currently on hand at a physical\nstore).",
      "x-release-status": "PUBLIC"
    },
    "InventoryTransfer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID generated by Square for the\n[InventoryTransfer](#type-inventorytransfer)."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n[InventoryTransfer](#type-inventorytransfer) to an external system."
        },
        "state": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "IN_STOCK",
            "SOLD",
            "RETURNED_BY_CUSTOMER",
            "RESERVED_FOR_SALE",
            "SOLD_ONLINE",
            "ORDERED_FROM_VENDOR",
            "RECEIVED_FROM_VENDOR",
            "IN_TRANSIT_TO",
            "NONE",
            "WASTE",
            "UNLINKED_RETURN"
          ],
          "description": "The [InventoryState](#type-inventorystate) for the quantity of\nitems being transfered."
        },
        "from_location_id": {
          "type": "string",
          "description": "The Square ID of the [Location](#type-location) where the related\nquantity of items were tracked before the transfer."
        },
        "to_location_id": {
          "type": "string",
          "description": "The Square ID of the [Location](#type-location) where the related\nquantity of items were tracked after the transfer."
        },
        "catalog_object_id": {
          "type": "string",
          "description": "The Square generated ID of the\n[CatalogObject](#type-catalogobject) being tracked."
        },
        "catalog_object_type": {
          "type": "string",
          "description": "The [CatalogObjectType](#type-catalogobjecttype) of the\n[CatalogObject](#type-catalogobject) being tracked.Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "quantity": {
          "type": "string",
          "description": "The number of items affected by the transfer as a decimal string.\nFractional quantities are not supported."
        },
        "occurred_at": {
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe transfer took place. For write actions, the `occurred_at` timestamp\ncannot be older than 24 hours or in the future relative to the time of the\nrequest."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the transfer request."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that initiated the\ninventory transfer."
        },
        "employee_id": {
          "type": "string",
          "description": "The Square ID of the [Employee](#type-employee) responsible for the\ninventory transfer."
        }
      },
      "description": "Represents the transfer of a quantity of product inventory at a\nparticular time from one location to another.",
      "x-release-status": "PUBLIC"
    },
    "ItemVariationLocationOverrides": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The ID of the [location](#type-location)."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The price of the [CatalogItemVariation](#type-catalogitemvariation) at the given [location](#type-location), or blank for variable pricing."
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "The pricing type (fixed or variable) for the [CatalogItemVariation](#type-catalogitemvariation) at the given [location](#type-location).\nSee [CatalogPricingType](#type-catalogpricingtype) for all possible values."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the [CatalogItemVariation](#type-catalogitemvariation) at this [location](#type-location)."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "description": "Indicates whether the [CatalogItemVariation](#type-catalogitemvariation) displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype)\nfor all possible values."
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        }
      },
      "description": "Price and inventory alerting overrides for a [CatalogItemVariation](#type-catalogitemvariation) at a specific [location](#type-location).",
      "x-release-status": "PUBLIC"
    },
    "ListAdditionalRecipientReceivableRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      }
    },
    "ListAdditionalRecipientReceivableRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "receivable_refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivableRefund"
          },
          "description": "An array of AdditionalRecipientReceivableRefunds that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.\n\nOne of `errors` or `additional_recipient_receivable_refunds` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "receivable_refunds": [
          {
            "id": "Ge2OT7KA6XAg1GC15qs5S",
            "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
            "refund_id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "transaction_location_id": "18YC4JDH91E1H",
            "amount_money": {
              "amount": 10,
              "currency": "USD"
            },
            "created_at": "2016-01-20T22:57:56Z"
          }
        ]
      }
    },
    "ListAdditionalRecipientReceivablesRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      }
    },
    "ListAdditionalRecipientReceivablesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "receivables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivable"
          },
          "description": "An array of AdditionalRecipientReceivables that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.\n\nOne of `errors` or `additional_recipient_receivables` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "receivables": [
          {
            "id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
            "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "transaction_location_id": "18YC4JDH91E1H",
            "amount_money": {
              "amount": 20,
              "currency": "USD"
            },
            "created_at": "2016-01-19T15:12:41Z",
            "refunds": [
              {
                "id": "Ge2OT7KA6XAg1GC15qs5S",
                "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
                "refund_id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
                "transaction_location_id": "18YC4JDH91E1H",
                "amount_money": {
                  "amount": 10,
                  "currency": "USD"
                },
                "created_at": "2016-01-20T22:57:56Z"
              }
            ]
          }
        ]
      }
    },
    "ListBreakTypesRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "Filter Break Types returned to only those that are associated with the\nspecified location."
        },
        "limit": {
          "minimum": 1,
          "maximum": 200,
          "type": "integer",
          "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Break Type results to fetch."
        }
      },
      "description": "A request for a filtered set of `BreakType` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_id\u003dPAA1RJZZKXBFG\u0026limit\u003d2\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListBreakTypesResponse": {
      "type": "object",
      "properties": {
        "break_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BreakType"
          },
          "description": " A page of `BreakType` results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next next page\nof Break Type results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `BreakTypes`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_types": [
          {
            "id": "REGS1EQR1TPZ5",
            "location_id": "PAA1RJZZKXBFG",
            "break_name": "Coffee Break",
            "expected_duration": "PT5M",
            "is_paid": false,
            "version": 1,
            "created_at": "2019-01-22T20:47:37Z",
            "updated_at": "2019-01-22T20:47:37Z"
          },
          {
            "id": "92EPDRQKJ5088",
            "location_id": "PAA1RJZZKXBFG",
            "break_name": "Lunch Break",
            "expected_duration": "PT1H",
            "is_paid": true,
            "version": 3,
            "created_at": "2019-01-25T19:26:30Z",
            "updated_at": "2019-01-25T19:26:30Z"
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "ListCatalogRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "types": {
          "type": "string",
          "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?types\u003dcategory,tax"
      }
    },
    "ListCatalogResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "CATEGORY",
            "id": "5ZYQZZ2IECPVJ2IJ5KQPRDC3",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "L5R47DGBZOOVKCAFIXC56AEN",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      }
    },
    "ListCustomersRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "sort_field": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "CREATED_AT"
          ],
          "description": "Indicates how Customers should be sorted. Default: `DEFAULT`. See\n[CustomerSortField](#type-customersortfield) for possible values."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order. Default: `ASC`. See [SortOrder](#type-sortorder)\nfor possible values."
        }
      },
      "description": "Defines the query parameters that can be provided in a request to the\n[ListCustomers](#endpoint-listcustomers) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersRequest.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersRequest.csharp",
        "java": "/sdk_samples/ListCustomers/ListCustomersRequest.java",
        "php": "/sdk_samples/ListCustomers/ListCustomersRequest.php",
        "javascript": "/sdk_samples/ListCustomers/ListCustomersRequest.javascript",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersRequest.ruby"
      }
    },
    "ListCustomersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "description": "An array of `Customer` objects that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListCustomers](#endpoint-listcustomers) endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customers": [
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-23T20:21:55Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer",
            "groups": [
              {
                "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
                "name": "Aviation Enthusiasts"
              }
            ]
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersResponse.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersResponse.csharp",
        "java": "/sdk_samples/ListCustomers/ListCustomersResponse.java",
        "php": "/sdk_samples/ListCustomers/ListCustomersResponse.php",
        "javascript": "/sdk_samples/ListCustomers/ListCustomersResponse.javascript",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersResponse.ruby"
      }
    },
    "ListEmployeeWagesRequest": {
      "type": "object",
      "properties": {
        "employee_id": {
          "type": "string",
          "description": "Filter wages returned to only those that are associated with the\nspecified employee."
        },
        "limit": {
          "minimum": 1,
          "maximum": 200,
          "type": "integer",
          "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Employee Wage results to fetch."
        }
      },
      "description": "A request for a set of `EmployeeWage` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?employee_id\u003d33fJchumvVdJwxV0H6L9\u0026limit\u003d4\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListEmployeeWagesResponse": {
      "type": "object",
      "properties": {
        "employee_wages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWage"
          },
          "description": "A page of Employee Wage results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next next page\nof Employee Wage results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `EmployeeWage` objects. Contains \na set of `EmployeeWage`.",
      "x-release-status": "PUBLIC",
      "example": {
        "employee_wages": [
          {
            "id": "pXS3qCv7BERPnEGedM4S8mhm",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Manager",
            "hourly_rate": {
              "amount": 3250,
              "currency": "USD"
            }
          },
          {
            "id": "rZduCkzYDUVL3ovh1sQgbue6",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Cook",
            "hourly_rate": {
              "amount": 2600,
              "currency": "USD"
            }
          },
          {
            "id": "FxLbs5KpPUHa8wyt5ctjubDX",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Barista",
            "hourly_rate": {
              "amount": 1600,
              "currency": "USD"
            }
          },
          {
            "id": "vD1wCgijMDR3cX5TPnu7VXto",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Cashier",
            "hourly_rate": {
              "amount": 1700,
              "currency": "USD"
            }
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "ListEmployeesRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "Filter employees returned to only those that are associated with the\nspecified location."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "Specifies the EmployeeStatus to filter the employee by."
        },
        "limit": {
          "type": "integer",
          "description": "The number of employees to be returned on each page."
        },
        "cursor": {
          "type": "string",
          "description": "The token required to retrieve the specified page of results."
        }
      },
      "description": "Retrieve a paged-list of employees for a Square account",
      "x-release-status": "PUBLIC"
    },
    "ListEmployeesResponse": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          },
          "description": "List of employees returned from the request."
        },
        "cursor": {
          "type": "string",
          "description": "The token to be used to retrieve the next page of results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListEmployees](#endpoint-listemployees) endpoint.\n\nOne of `errors` or `employees` is present in a given response (never both).",
      "x-release-status": "PUBLIC"
    },
    "ListLocationsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "description": "The business\u0027s locations."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListLocations](#endpoint-listlocations) endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "locations": [
          {
            "id": "18YC4JDH91E1H",
            "name": "your location name",
            "address": {
              "address_line_1": "123 Main St",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94114",
              "country": "US"
            },
            "timezone": "America/Los_Angeles",
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "status": "ACTIVE",
            "created_at": "2016-09-19T17:33:12Z",
            "merchant_id": "3MYCJG5GVYQ8Q",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "phone_number": "+1 650-354-7217",
            "business_name": "Pumbaa\u0027s business name"
          }
        ]
      }
    },
    "ListRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      }
    },
    "ListRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "An array of refunds that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "refunds": [
          {
            "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "location_id": "18YC4JDH91E1H",
            "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
            "created_at": "2016-01-20T00:28:18Z",
            "reason": "some reason",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 10,
                  "currency": "USD"
                }
              }
            ],
            "status": "APPROVED"
          }
        ]
      }
    },
    "ListTransactionsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      }
    },
    "ListTransactionsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "description": "An array of transactions that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "transactions": [
          {
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "created_at": "2016-01-20T22:57:56Z",
            "tenders": [
              {
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "created_at": "2016-01-20T22:57:56Z",
                "note": "some optional note",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 20,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "refunds": [
              {
                "id": "7a5RcVI0CxbOcJ2wMOkE",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "created_at": "2016-01-20T22:59:20Z",
                "reason": "some reason why",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "status": "APPROVED",
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "reference_id": "some optional reference id",
            "product": "EXTERNAL_API"
          }
        ]
      }
    },
    "ListWorkweekConfigsRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Maximum number of Workweek Configs to return per page."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Workweek Config results to fetch."
        }
      },
      "description": "A request for a set of `WorkweekConfig` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?limit\u003d1\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListWorkweekConfigsResponse": {
      "type": "object",
      "properties": {
        "workweek_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkweekConfig"
          },
          "description": "A page of Employee Wage results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next page of\nEmployee Wage results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `WorkweekConfig` objects. Contains\nthe requested `WorkweekConfig` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "workweek_configs": [
          {
            "id": "FY4VCAQN700GM",
            "start_of_week": "MON",
            "start_of_day_local_time": "10:00",
            "version": 11,
            "created_at": "2016-02-04T00:58:24Z",
            "updated_at": "2019-02-28T01:04:35Z"
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The location\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The location\u0027s name. Location names are set by the account owner and displayed\nin the dashboard as the location\u0027s nickname"
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The location\u0027s physical address."
        },
        "timezone": {
          "type": "string",
          "description": "The [IANA Timezone Database](https://www.iana.org/time-zones)\nidentifier for the location\u0027s timezone."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREDIT_CARD_PROCESSING"
            ]
          },
          "description": "Indicates which Square features are enabled for the location.\n\nSee [LocationCapability](#type-locationcapability) for possible values."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "The location\u0027s status\n\nSee [LocationStatus](#type-locationstatus) for possible values."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the location was created, in RFC 3339 format."
        },
        "merchant_id": {
          "type": "string",
          "description": "The identifier of the merchant that owns the location."
        },
        "country": {
          "type": "string",
          "enum": [
            "ZZ",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "description": "The location\u0027s country, in ISO 3166-1-alpha-2 format.\n\nSee [Country](#type-country) for possible values."
        },
        "language_code": {
          "type": "string",
          "description": "The language associated with the location in\n[BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A)."
        },
        "currency": {
          "type": "string",
          "enum": [
            "UNKNOWN_CURRENCY",
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "description": "The currency used for all transactions at this location, specified in __ISO 4217 format__.\nFor example, the currency for a location processing transactions in the United States is \u0027USD\u0027.\n\nSee [Currency](#type-currency) for possible values."
        },
        "phone_number": {
          "type": "string",
          "description": "The location\u0027s phone_number."
        },
        "business_name": {
          "type": "string",
          "description": "The location\u0027s business_name which is shown to its customers. For example,\nthis is the name printed on its customer\u0027s receipts."
        },
        "type": {
          "type": "string",
          "enum": [
            "PHYSICAL",
            "MOBILE"
          ],
          "description": "The location\u0027s type, as set by the account owner in the Square dashboard.\nTypically used to indicate whether or not the location object represents a physical space\nlike a building or mall space.\n\nSee [LocationType](#type-locationtype) for possible values."
        },
        "website_url": {
          "type": "string",
          "description": "The location\u0027s website, as set by the account owner in the Square dashboard.\n\nDefault: none; only exists if explicitly set."
        }
      },
      "description": "Represents one of a business\u0027s locations.",
      "x-release-status": "PUBLIC"
    },
    "Money": {
      "type": "object",
      "properties": {
        "amount": {
          "minimum": 0,
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the\ncurrency indicated by `currency`. For example, when `currency` is `USD`,\n`amount` is in cents."
        },
        "currency": {
          "type": "string",
          "enum": [
            "UNKNOWN_CURRENCY",
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](#type-currency) for possible values."
        }
      },
      "description": "Represents an amount of money.\n\n__Important:__ Unlike version 1 of the Connect API, __all monetary amounts\nreturned by v2 endpoints are positive.__ (In v1, monetary amounts are negative\nif they represent money being paid _by_ a merchant, instead of money being\npaid _to_ a merchant.)",
      "x-release-status": "PUBLIC"
    },
    "ObtainTokenRequest": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "The Square-issued ID of your application, available from the [application dashboard](https://connect.squareup.com/apps)."
        },
        "client_secret": {
          "type": "string",
          "description": "The Square-issued application secret for your application, \navailable from the [application dashboard](https://connect.squareup.com/apps)."
        },
        "code": {
          "type": "string",
          "description": "The authorization code to exchange. \nThis is required if `grant_type` is set to `authorization_code`, to indicate that \nthe application wants to exchange an authorization code for an OAuth access token."
        },
        "redirect_uri": {
          "type": "string",
          "description": "The redirect URL assigned in the [application dashboard](https://connect.squareup.com/apps)."
        },
        "grant_type": {
          "type": "string",
          "description": "Specifies the method to request an OAuth access token. \nValid values are: `authorization_code`, `refresh_token`, and `migration_token`"
        },
        "refresh_token": {
          "type": "string",
          "description": "A valid refresh token for generating a new OAuth access token. \nA valid refresh token is required if `grant_type` is set to `refresh_token` ,  \nto indicate the application wants a replacement for an expired OAuth access token."
        },
        "migration_token": {
          "type": "string",
          "description": "Legacy OAuth access token obtained using a Connect API version prior \nto 2019-03-13. This parameter is required if `grant_type` is set to \n`migration_token` to indicate that the application wants to get a replacement  \nOAuth access token. The response also returns a refresh token. \nFor more information, see [Migrate to Using Refresh Tokens](/authz/oauth/migration)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_url": "/oauth2/token",
        "request_body": {
          "client_id": "APPLICATION_ID",
          "client_secret": "APPLICATION_SECRET",
          "code": "CODE_FROM_AUTHORIZE"
        }
      }
    },
    "ObtainTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "A valid OAuth access token. Provide the access token in a header with every request to Connect API endpoints.\nSee the [Build with OAuth](/authz/oauth/build-with-the-api) guide for more information."
        },
        "token_type": {
          "type": "string",
          "description": "This value is always _bearer_."
        },
        "expires_at": {
          "type": "string",
          "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the authorizing merchant\u0027s business."
        },
        "subscription_id": {
          "type": "string",
          "description": "__Legacy field__. The ID of a subscription plan the merchant signed up for. Only present if \nthe merchant signed up for a subscription during authorization."
        },
        "plan_id": {
          "type": "string",
          "description": "The ID of the [subscription](https://docs.connect.squareup.com/api/connect/v1/#navsection-subscriptionmanagement) plan the merchant signed up for.\nOnly present if the merchant signed up for a subscription during authorization."
        },
        "id_token": {
          "type": "string",
          "description": "Then OpenID token belonging to this this person. Only present if the OPENID scope is included in the authorize request."
        },
        "refresh_token": {
          "type": "string",
          "description": "A refresh token. \nFor more information, see [OAuth access token management](/authz/oauth/how-it-works#oauth-access-token-management)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "access_token": "ACCESS_TOKEN",
        "token_type": "bearer",
        "expires_at": "2006-01-02T15:04:05Z",
        "merchant_id": "MERCHANT_ID"
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The order\u0027s unique ID.\n\nThis value is only present for Order objects created by the Orders API through the\n[CreateOrder](#endpoint-createorder) endpoint."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "A client specified identifier to associate an entity in another system\nwith this order."
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItem"
          },
          "description": "The line items included in the order."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemTax"
          },
          "description": "A list of taxes applied to this order. On read or retrieve, this list includes both\norder-level and item-level taxes. When creating an Order, set your order-level taxes in this\nlist."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemDiscount"
          },
          "description": "A list of discounts applied to this order. On read or retrieve, this list includes both\norder-level and item-level discounts. When creating an Order, set your order-level discounts in\nthis list."
        },
        "fulfillments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderFulfillment"
          },
          "description": "Details on order fulfillment.\n\nOrders can only be created with at most one fulfillment. However, orders returned\nby the API may contain multiple fulfillments.",
          "x-release-status": "BETA"
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the order."
        }
      },
      "description": "Contains all information related to a single order to process with Square,\nincluding line items that specify the products to purchase",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PICKUP"
          ],
          "description": "The type of the fulfillment."
        },
        "state": {
          "type": "string",
          "enum": [
            "PROPOSED",
            "RESERVED",
            "PREPARED",
            "COMPLETED",
            "CANCELED",
            "FAILED"
          ],
          "description": "The state of the fulfillment."
        },
        "pickup_details": {
          "$ref": "#/definitions/OrderFulfillmentPickupDetails",
          "description": "Contains pickup-specific details. Required when fulfillment type is `PICKUP`."
        }
      },
      "description": "Contains details on how to fulfill this order.",
      "x-release-status": "BETA"
    },
    "OrderFulfillmentPickupDetails": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/OrderFulfillmentRecipient",
          "description": "The recipient of this pickup fulfillment."
        },
        "expires_at": {
          "type": "string",
          "description": "The expiry [timestamp](#workingwithdates) in RFC 3339 format, e.g.,\n\"2016-09-04T23:59:33.123Z\". This timestamp indicates when the pickup fulfillment will\nexpire if it is not accepted by the merchant. Expiration time can only be set up to 7 days in\nthe future. If not set, this pickup fulfillment will be automatically accepted when placed."
        },
        "auto_complete_duration": {
          "type": "string",
          "description": "The auto completion duration in RFC3339 duration format, e.g., \"P1W3D\". If set, an open\nand accepted pickup fulfillment will automatically move to the `COMPLETED` state after this\nperiod of time. If not set, this pickup fulfillment will remain accepted until it is canceled\nor completed."
        },
        "schedule_type": {
          "type": "string",
          "enum": [
            "SCHEDULED",
            "ASAP"
          ],
          "description": "The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`."
        },
        "pickup_at": {
          "type": "string",
          "description": "The pickup [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".\nFor fulfillments with the schedule type `ASAP`, this is automatically set to the current time\nplus the expected duration to prepare the fulfillment. This represents the start of the\npickup window."
        },
        "pickup_window_duration": {
          "type": "string",
          "description": "The pickup window duration in RFC3339 duration format, e.g., \"P1W3D\". This duration\nrepresents the window of time for which the order should be picked up after the `pickup_at`\ntime. Can be used as an informational guideline for merchants."
        },
        "prep_time_duration": {
          "type": "string",
          "description": "The preparation time duration in RFC3339 duration format, e.g., \"P1W3D\". This duration\nindicates how long it takes the merchant to prepare this fulfillment."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "A general note about the pickup fulfillment.\n\nNotes are useful for providing additional instructions and are displayed in Square apps."
        },
        "placed_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was placed."
        },
        "accepted_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was accepted by the merchant."
        },
        "rejected_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was rejected."
        },
        "ready_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the merchant set the fulfillment as ready for pickup."
        },
        "expired_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment expired."
        },
        "picked_up_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was picked up by the recipient."
        },
        "canceled_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was canceled by the merchant or buyer."
        },
        "cancel_reason": {
          "maxLength": 100,
          "type": "string",
          "description": "A description of why the pickup was canceled. Max length is 100 characters."
        }
      },
      "description": "Contains details necessary to fulfill a pickup order.",
      "x-release-status": "BETA"
    },
    "OrderFulfillmentRecipient": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string",
          "description": "The Customer ID of the customer associated with the fulfillment.\n\nIf customer_id is provided, the corresponding recipient information fields\n(`display_name`, `email_address`, and `phone_number`) are automatically populated from the relevant\ncustomer profile. If the targeted profile information does not contain the necessary required\ninformation, the request will result in an error."
        },
        "display_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The display name of the fulfillment recipient.\n\nIf provided, overrides the value from customer profile indicated by customer_id."
        },
        "email_address": {
          "maxLength": 255,
          "type": "string",
          "description": "The email address of the fulfillment recipient.\n\nIf provided, overrides the value from customer profile indicated by customer_id."
        },
        "phone_number": {
          "maxLength": 16,
          "type": "string",
          "description": "The phone number of the fulfillment recipient.\n\nIf provided, overrides the value from customer profile indicated by customer_id."
        }
      },
      "description": "The recipient of a fulfillment.",
      "x-release-status": "BETA"
    },
    "OrderLineItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "name": {
          "maxLength": 500,
          "type": "string",
          "description": "The name of the line item."
        },
        "quantity": {
          "minLength": 1,
          "maxLength": 5,
          "type": "string",
          "description": "The quantity purchased, as a string representation of a number.\n\nThis string must have a positive integer value."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "The note of the line item."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The [CatalogItemVariation](#type-catalogitemvariation) id applied to this line item."
        },
        "variation_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the variation applied to this line item."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemModifier"
          },
          "description": "The [CatalogModifier](#type-catalogmodifier)s applied to this line item."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemTax"
          },
          "description": "A list of taxes applied to this line item. On read or retrieve, this list includes both\nitem-level taxes and any order-level taxes apportioned to this item. When creating an Order,\nset your item-level taxes in this list."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemDiscount"
          },
          "description": "A list of discounts applied to this line item. On read or retrieve, this list includes\nboth item-level discounts and any order-level discounts apportioned to this item. When\ncreating an Order, set your item-level discounts in this list."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item."
        },
        "gross_sales_money": {
          "$ref": "#/definitions/Money",
          "description": "The gross sales amount of money calculated as (item base price + modifiers price) * quantity."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the line item."
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the line item."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for this line item."
        }
      },
      "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemDiscount": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing [CatalogDiscount](#type-catalogdiscount)."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN_DISCOUNT",
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "The type of the discount. If it is created by API, it would be either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nVARIABLE_* is not supported in API because the order is created at the time of sale and either\npercentage or amount has to be specified.\n\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\nThe percentage won\u0027t be set for an amount-based discount."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total monetary amount of the applicable discount.\nIf it is at order level, it is the value of the order level discount.\nIf it is at line item level, it is the value of the line item level discount.\n\nThe amount_money won\u0027t be set for a percentage-based discount."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items."
        },
        "scope": {
          "type": "string",
          "enum": [
            "OTHER_DISCOUNT_SCOPE",
            "LINE_ITEM",
            "ORDER"
          ],
          "description": "Indicates the level at which the discount applies. This field is set by the server.\nIf set in a CreateOrder request, it will be ignored on write.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values."
        }
      },
      "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-level discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to that item’s contribution to the order subtotal.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemModifier": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing [CatalogModifier](#type-catalogmodifier)."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the item modifier."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the predefined [CatalogModifier](#type-catalogmodifier) price."
        },
        "total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The total price of the item modifier for its line item.\nThis is the modifier\u0027s base_price_money multiplied by the line item\u0027s quantity."
        }
      },
      "description": "A [CatalogModifier](#type-catalogmodifier).",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTax": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing [CatalogTax](#type-catalogtax)."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The tax\u0027s name."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN_TAX",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Indicates the calculation method used to apply the tax.\n\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the money applied by the tax in an order."
        },
        "scope": {
          "type": "string",
          "enum": [
            "OTHER_TAX_SCOPE",
            "LINE_ITEM",
            "ORDER"
          ],
          "description": "Indicates the level at which the tax applies. This field is set by the server. If set\nin a CreateOrder request, it will be ignored on write.\nSee [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible values."
        }
      },
      "description": "Represents a tax that applies to one or more line items in an order.",
      "x-release-status": "PUBLIC"
    },
    "Refund": {
      "type": "object",
      "required": [
        "id",
        "location_id",
        "transaction_id",
        "tender_id",
        "reason",
        "amount_money",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The refund\u0027s unique ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the refund\u0027s associated location."
        },
        "transaction_id": {
          "type": "string",
          "description": "The ID of the transaction that the refunded tender is part of."
        },
        "tender_id": {
          "type": "string",
          "description": "The ID of the refunded tender."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the refund was created, in RFC 3339 format."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund being issued."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money refunded to the buyer."
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "APPROVED",
            "REJECTED",
            "FAILED"
          ],
          "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`)."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of Square processing fee money refunded to the *merchant*."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this refund.\nFor example, fees assessed on a refund of a purchase by a third party integration."
        }
      },
      "description": "Represents a refund processed for a Square transaction.",
      "x-release-status": "PUBLIC"
    },
    "RegisterDomainRequest": {
      "type": "object",
      "required": [
        "domain_name"
      ],
      "properties": {
        "domain_name": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "A domain name as described in RFC-1034 that will be registered with ApplePay"
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "domain_name": "example.com"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.python",
        "csharp": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.csharp",
        "java": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.java",
        "php": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.php",
        "javascript": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.javascript",
        "ruby": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.ruby"
      }
    },
    "RegisterDomainResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "VERIFIED"
          ],
          "description": "Status of the domain registration.\n\nSee [RegisterDomainResponseStatus](#type-registerdomainresponsestatus) for possible values."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.\n\nEither `errors` or `status` will be present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "status": "VERIFIED"
      }
    },
    "RenewTokenRequest": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The token you want to renew."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "example": {
        "request_url": "/oauth2/clients/{client_id}/access-token/renew",
        "request_body": {
          "access_token": "ACCESS_TOKEN"
        }
      }
    },
    "RenewTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The renewed access token.\nThis value might be different from the `access_token` you provided in your request.\nYou provide this token in a header with every request to Connect API endpoints.\nSee [Request and response headers](https://docs.connect.squareup.com/api/connect/v2/#requestandresponseheaders) for the format of this header."
        },
        "token_type": {
          "type": "string",
          "description": "This value is always _bearer_."
        },
        "expires_at": {
          "type": "string",
          "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the authorizing merchant\u0027s business."
        },
        "subscription_id": {
          "type": "string",
          "description": "The ID of the merchant [subscription](https://docs.connect.squareup.com/api/connect/v1/#navsection-subscriptionmanagement) associated with the authorization.\nOnly present if the merchant signed up for a subscription during authorization."
        },
        "plan_id": {
          "type": "string",
          "description": "The ID of the [subscription](https://docs.connect.squareup.com/api/connect/v1/#navsection-subscriptionmanagement) plan the merchant signed up for.\nOnly present if the merchant signed up for a subscription during authorization."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "example": {
        "access_token": "ACCESS_TOKEN",
        "token_type": "bearer",
        "expires_at": "2006-01-02T15:04:05Z",
        "merchant_id": "MERCHANT_ID"
      }
    },
    "RetrieveCatalogObjectRequest": {
      "type": "object",
      "properties": {
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?include_related_objects\u003dtrue"
      }
    },
    "RetrieveCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `object` field."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "ITEM",
          "id": "W62UWFY35CWMYGVWK6TWJDNI",
          "updated_at": "2016-11-16T22:25:24.878Z",
          "version": 1479335124878,
          "is_deleted": false,
          "present_at_all_locations": true,
          "item_data": {
            "name": "Tea",
            "description": "Hot Leaf Juice",
            "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "tax_ids": [
              "HURXQOOAIC4IZSI2BEXQRYFY"
            ],
            "variations": [
              {
                "type": "ITEM_VARIATION",
                "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                "updated_at": "2016-11-16T22:25:24.878Z",
                "version": 1479335124878,
                "is_deleted": false,
                "present_at_all_locations": true,
                "item_variation_data": {
                  "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                  "name": "Mug",
                  "ordinal": 0,
                  "pricing_type": "FIXED_PRICING",
                  "price_money": {
                    "amount": 150,
                    "currency": "USD"
                  }
                }
              }
            ]
          }
        },
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      }
    },
    "RetrieveCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp",
        "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.java",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php",
        "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.javascript",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby"
      }
    },
    "RetrieveCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The requested customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomer](#endpoint-retrievecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp",
        "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.java",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php",
        "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.javascript",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby"
      }
    },
    "RetrieveEmployeeRequest": {
      "type": "object",
      "properties": {},
      "description": "Retrieve an employee by `Employee.id`",
      "x-release-status": "PUBLIC"
    },
    "RetrieveEmployeeResponse": {
      "type": "object",
      "properties": {
        "employee": {
          "$ref": "#/definitions/Employee",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveEmployee](#endpoint-retrieveemployee) endpoint.\n\nOne of `errors` or `employee` is present in a given response (never both).",
      "x-release-status": "PUBLIC"
    },
    "RetrieveInventoryAdjustmentRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "RetrieveInventoryAdjustmentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "adjustment": {
          "$ref": "#/definitions/InventoryAdjustment",
          "description": "The requested [InventoryAdjustment](#type-inventoryadjustment)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "adjustment": {
          "id": "UDMOEO78BG6GYWA2XDRYX3KB",
          "reference_id": "4a366069-4096-47a2-99a5-0084ac879509",
          "from_state": "IN_STOCK",
          "to_state": "SOLD",
          "location_id": "C6W5YS5QM06F5",
          "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
          "catalog_object_type": "ITEM_VARIATION",
          "quantity": "7",
          "total_price_money": {
            "amount": 4550,
            "currency": "USD"
          },
          "occurred_at": "2016-11-16T25:44:22.837Z",
          "created_at": "2016-11-17T13:02:15.142Z",
          "source": {
            "product": "SQUARE_POS",
            "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
            "name": "Square Point of Sale 4.37"
          },
          "employee_id": "LRK57NSQ5X7PUD05"
        }
      }
    },
    "RetrieveInventoryChangesRequest": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "string",
          "description": "The [Location](#type-location) IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_ids\u003d\u0026cursor\u003d"
      }
    },
    "RetrieveInventoryChangesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The set of inventory changes for the requested object and locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "changes": [
          {
            "type": "ADJUSTMENT",
            "adjustment": {
              "id": "OJKJIUANKLMLQANZADNPLKAD",
              "reference_id": "d8207693-168f-4b44-a2fd-a7ff533ddd26",
              "from_state": "IN_STOCK",
              "to_state": "SOLD",
              "location_id": "C6W5YS5QM06F5",
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "quantity": "3",
              "total_price_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "occurred_at": "2016-11-16T22:25:24.878Z",
              "created_at": "2016-11-16T22:25:24.878Z",
              "source": {
                "product": "SQUARE_POS",
                "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                "name": "Square Point of Sale 4.37"
              },
              "employee_id": "AV7YRCGI2H1J5NQ8E1XIZCNA",
              "transaction_id": "5APV6JYK1SNCZD11AND2RX1Z"
            }
          }
        ]
      }
    },
    "RetrieveInventoryCountRequest": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "string",
          "description": "The [Location](#type-location) IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_ids\u003dC6W5YS5QM06F5\u0026cursor\u003d"
      }
    },
    "RetrieveInventoryCountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current calculated inventory counts for the requested object and\nlocations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "C6W5YS5QM06F5",
            "quantity": "22",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "RetrieveInventoryPhysicalCountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "RetrieveInventoryPhysicalCountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "count": {
          "$ref": "#/definitions/InventoryPhysicalCount",
          "description": "The requested [InventoryPhysicalCount](#type-inventoryphysicalcount)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "count": {
          "id": "ANZADNPLKADOJKJIUANKLMLQ",
          "reference_id": "f857ec37-f9a0-4458-8e23-5b5e0bea4e53",
          "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
          "catalog_object_type": "ITEM_VARIATION",
          "state": "IN_STOCK",
          "location_id": "C6W5YS5QM06F5",
          "quantity": "15",
          "source": {
            "product": "SQUARE_POS",
            "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
            "name": "Square Point of Sale 4.37"
          },
          "employee_id": "LRK57NSQ5X7PUD05",
          "occurred_at": "2016-11-16T22:25:24.878Z",
          "created_at": "2016-11-16T22:25:24.878Z"
        }
      }
    },
    "RetrieveTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "RetrieveTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The requested transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "processing_fee_money": {
                "amount": 138,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              },
              "additional_recipients": [
                {
                  "location_id": "057P5VYJ4A5X1",
                  "description": "Application fees",
                  "amount_money": {
                    "amount": 20,
                    "currency": "USD"
                  }
                }
              ]
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      }
    },
    "RevokeTokenRequest": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Your application\u0027s ID, available from the [application dashboard](https://connect.squareup.com/apps)."
        },
        "access_token": {
          "type": "string",
          "description": "The access token of the merchant whose token you want to revoke.\nDo not provide a value for merchant_id if you provide this parameter."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the merchant whose token you want to revoke.\nDo not provide a value for access_token if you provide this parameter."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_url": "/oauth2/revoke",
        "request_body": {
          "access_token": "ACCESS_TOKEN",
          "client_id": "CLIENT_ID"
        }
      }
    },
    "RevokeTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "If the request is successful, this is true."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "success": true
      }
    },
    "SearchCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "object_types": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITEM",
              "CATEGORY",
              "ITEM_VARIATION",
              "TAX",
              "DISCOUNT",
              "MODIFIER_LIST",
              "MODIFIER"
            ]
          },
          "description": "The desired set of object types to appear in the search results. The legal values are taken from the\n[CatalogObjectType](#type-catalogobjecttype) enumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`,\n`\"DISCOUNT\"`, `\"TAX\"`, `\"MODIFIER\"`, or `\"MODIFIER_LIST\"`."
        },
        "include_deleted_objects": {
          "type": "boolean",
          "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf a [CatalogItem](#type-catalogitem) is returned in the object field of the response,\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be included in the `related_objects` field of the\nresponse.\n\nIf a [CatalogItemVariation](#type-catalogitemvariation) is returned in the object field of the\nresponse, its parent [CatalogItem](#type-catalogitem) will be included in the `related_objects` field of\nthe response."
        },
        "begin_time": {
          "type": "string",
          "description": "Return objects modified after this [timestamp](#workingwithdates), in RFC 3339\nformat, e.g., \"2016-09-04T23:59:33.123Z\". The timestamp is exclusive - objects with a\ntimestamp equal to `begin_time` will not be included in the response."
        },
        "query": {
          "$ref": "#/definitions/CatalogQuery",
          "description": "A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned."
        },
        "limit": {
          "type": "integer",
          "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_types": [
            "ITEM"
          ],
          "query": {
            "prefix_query": {
              "attribute_name": "name",
              "attribute_prefix": "tea"
            }
          },
          "limit": 100
        }
      }
    },
    "SearchCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the objects in the `objects` field."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
            "updated_at": "2017-10-26T15:41:32.337Z",
            "version": 1509032492337,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea - Black",
              "description": "A delicious blend of black tea.",
              "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
              "product_type": "REGULAR",
              "tax_ids": [
                "ZXITPM6RWHZ7GZ7EIP3YKECM"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "5GSZPX6EU7MM75S57OONG3V5",
                  "updated_at": "2017-10-26T15:27:31.626Z",
                  "version": 1509031651626,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                    "name": "Regular",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "XVLBN7DU6JTWHJTG5F265B43",
                  "updated_at": "2017-10-26T15:27:31.626Z",
                  "version": 1509031651626,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                    "name": "Large",
                    "ordinal": 2,
                    "price_money": {
                      "amount": 225,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                }
              ],
              "visibility": "PRIVATE"
            }
          },
          {
            "type": "ITEM",
            "id": "NNNEM3LA656Q46NXLWCNI7S5",
            "updated_at": "2017-10-26T15:41:23.232Z",
            "version": 1509032483232,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea - Green",
              "description": "Relaxing green herbal tea.",
              "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
              "product_type": "REGULAR",
              "tax_ids": [
                "ZXITPM6RWHZ7GZ7EIP3YKECM"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "FHYBVIA6NVBCSOVETA62WEA4",
                  "updated_at": "2017-10-26T15:29:00.524Z",
                  "version": 1509031740524,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "NNNEM3LA656Q46NXLWCNI7S5",
                    "name": "Regular",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                }
              ],
              "visibility": "PRIVATE"
            }
          }
        ]
      }
    },
    "SearchCustomersRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "Include the pagination cursor in subsequent calls to this endpoint to retrieve\nthe next set of results associated with the original query.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "A limit on the number of results to be returned in a single page.\nThe limit is advisory - the implementation may return more or fewer results.\nIf the supplied limit is negative, zero, or is higher than the maximum limit\nof 1,000, it will be ignored."
        },
        "query": {
          "$ref": "#/definitions/CustomerQuery",
          "description": "Query customers based on the given conditions and sort order.\nCalling SearchCustomers without an explicit query parameter will return\nall customers ordered alphabetically based on `given_name` and\n`family_name`."
        }
      },
      "description": "Defines the fields included in the request body for the\n[SearchCustomers](#endpoint-searchcustomer) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "creation_source": {
                "values": [
                  "THIRD_PARTY"
                ],
                "rule": "INCLUDE"
              },
              "created_at": {
                "start_at": "2018-01-01T00:00:00-00:00",
                "end_at": "2018-02-01T00:00:00-00:00"
              }
            },
            "sort": {
              "field": "CREATED_AT",
              "order": "ASC"
            }
          },
          "limit": 2
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/SearchCustomers/SearchCustomersRequest.python",
        "csharp": "/sdk_samples/SearchCustomers/SearchCustomersRequest.csharp",
        "java": "/sdk_samples/SearchCustomers/SearchCustomersRequest.java",
        "php": "/sdk_samples/SearchCustomers/SearchCustomersRequest.php",
        "javascript": "/sdk_samples/SearchCustomers/SearchCustomersRequest.javascript",
        "ruby": "/sdk_samples/SearchCustomers/SearchCustomersRequest.ruby"
      }
    },
    "SearchCustomersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "description": "An array of `Customer` objects that match a query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor that can be used during subsequent calls\nto SearchCustomers to retrieve the next set of results associated\nwith the original query. Pagination cursors are only present when\na request succeeds and additional results are available.\n\nSee [Pagination](/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [SearchCustomers](#endpoint-searchcustomers) endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customers": [
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2018-01-23T20:21:54.859Z",
            "updated_at": "2018-04-20T10:02:43.083Z",
            "given_name": "James",
            "family_name": "Bond",
            "email_address": "james.bond@example.com",
            "address": {
              "address_line_1": "505 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4250",
            "reference_id": "YOUR_REFERENCE_ID_2",
            "creation_source": "THIRD_PARTY"
          },
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2018-01-30T14:10:54.859Z",
            "updated_at": "2018-03-08T18:25:54.859Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "amelia.earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID_1",
            "note": "a customer",
            "creation_source": "THIRD_PARTY"
          }
        ],
        "cursor": "9dpS093Uy12AzeE"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/SearchCustomers/SearchCustomersResponse.python",
        "csharp": "/sdk_samples/SearchCustomers/SearchCustomersResponse.csharp",
        "java": "/sdk_samples/SearchCustomers/SearchCustomersResponse.java",
        "php": "/sdk_samples/SearchCustomers/SearchCustomersResponse.php",
        "javascript": "/sdk_samples/SearchCustomers/SearchCustomersResponse.javascript",
        "ruby": "/sdk_samples/SearchCustomers/SearchCustomersResponse.ruby"
      }
    },
    "SearchShiftsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/ShiftQuery",
          "description": "Query filters."
        },
        "limit": {
          "minimum": 1,
          "maximum": 200,
          "type": "integer",
          "description": "number of resources in a page (200 by default)."
        },
        "cursor": {
          "type": "string",
          "description": "opaque cursor for fetching the next page."
        }
      },
      "description": "A request for a filtered and sorted set of `Shift` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "workday": {
                "date_range": {
                  "start_date": "2019-01-20",
                  "end_date": "2019-02-03"
                },
                "match_shifts_by": "START_AT",
                "default_timezone": "America/Los_Angeles"
              }
            }
          },
          "limit": 100
        }
      }
    },
    "SearchShiftsResponse": {
      "type": "object",
      "properties": {
        "shifts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shift"
          },
          "description": "Shifts"
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for `Shift` objects. Contains\nthe requested `Shift` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shifts": [
          {
            "id": "X714F3HA6D1PT",
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-21T03:11:00-05:00",
            "end_at": "2019-01-21T13:11:00-05:00",
            "wage": {
              "title": "Barista",
              "hourly_rate": {
                "amount": 1100,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "SJW7X6AKEJQ65",
                "start_at": "2019-01-21T06:11:00-05:00",
                "end_at": "2019-01-21T06:11:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT10M",
                "is_paid": true
              }
            ],
            "status": "CLOSED",
            "version": 6,
            "created_at": "2019-01-24T01:12:03Z",
            "updated_at": "2019-02-07T22:21:08Z"
          },
          {
            "id": "GDHYBZYWK0P2V",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-22T12:02:00-05:00",
            "end_at": "2019-01-22T13:02:00-05:00",
            "wage": {
              "title": "Cook",
              "hourly_rate": {
                "amount": 1600,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "BKS6VR7WR748A",
                "start_at": "2019-01-23T14:30:00-05:00",
                "end_at": "2019-01-23T14:40:00-05:00",
                "break_type_id": "WQX00VR99F53J",
                "name": "Tea Break",
                "expected_duration": "PT10M",
                "is_paid": true
              },
              {
                "id": "BQFEZSHFZSC51",
                "start_at": "2019-01-22T12:30:00-05:00",
                "end_at": "2019-01-22T12:44:00-05:00",
                "break_type_id": "P6Q468ZFRN1AC",
                "name": "Coffee Break",
                "expected_duration": "PT15M",
                "is_paid": false
              }
            ],
            "status": "CLOSED",
            "version": 16,
            "created_at": "2019-01-23T23:32:45Z",
            "updated_at": "2019-01-24T00:56:25Z"
          }
        ]
      }
    },
    "Shift": {
      "type": "object",
      "required": [
        "employee_id",
        "start_at"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "UUID for this object"
        },
        "employee_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the employee this shift belongs to."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the location this shift occurred at. Should be based on\nwhere the employee clocked in."
        },
        "timezone": {
          "type": "string",
          "description": "Read-only convenience value that is calculated from the location based\non `location_id`. Format: the IANA Timezone Database identifier for the\nlocation timezone."
        },
        "start_at": {
          "minLength": 1,
          "type": "string",
          "description": "RFC 3339; shifted to location timezone + offset. Precision up to the\nminute is respected; seconds are truncated."
        },
        "end_at": {
          "type": "string",
          "description": "RFC 3339; shifted to timezone + offset. Precision up to the minute is\nrespected; seconds are truncated. The `end_at` minute is not\ncounted when the shift length is calculated. For example, a shift from `00:00`\nto `08:01` is considered an 8 hour shift (midnight to 8am)."
        },
        "wage": {
          "$ref": "#/definitions/ShiftWage",
          "description": "Job and pay related information."
        },
        "breaks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Break"
          },
          "description": "A list of any paid or unpaid breaks that were taken during this shift."
        },
        "status": {
          "type": "string",
          "enum": [
            "OPEN",
            "CLOSED"
          ],
          "description": "Describes working state of the current `Shift`."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC."
        }
      },
      "description": "A record of the hourly rate, start, and end times for a single work shift \nfor an employee. May include a record of the start and end times for breaks \ntaken during the shift.",
      "x-release-status": "PUBLIC"
    },
    "ShiftFilter": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fetch shifts for the specified location."
        },
        "employee_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fetch shifts for the specified employee."
        },
        "status": {
          "type": "string",
          "enum": [
            "OPEN",
            "CLOSED"
          ],
          "description": "Fetch a `Shift` instance by `Shift.status`."
        },
        "start": {
          "$ref": "#/definitions/TimeRange",
          "description": "Fetch `Shift`s that start in the time range - Inclusive."
        },
        "end": {
          "$ref": "#/definitions/TimeRange",
          "description": "Fetch the `Shift`s that end in the time range - Inclusive."
        },
        "workday": {
          "$ref": "#/definitions/ShiftWorkday",
          "description": "Fetch the `Shift`s based on workday date range."
        }
      },
      "description": "Defines a filter used in a search for `Shift` records. `AND` logic is\nused by Square\u0027s servers to apply each filter property specified.",
      "x-release-status": "PUBLIC"
    },
    "ShiftQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/ShiftFilter",
          "description": "Query filter options"
        },
        "sort": {
          "$ref": "#/definitions/ShiftSort",
          "description": "Sort order details"
        }
      },
      "description": "The parameters of a `Shift` search query. Includes filter and sort options.",
      "x-release-status": "PUBLIC"
    },
    "ShiftSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "START_AT",
            "END_AT",
            "CREATED_AT",
            "UPDATED_AT"
          ],
          "description": "The field to sort on."
        },
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are returned. Defaults to DESC."
        }
      },
      "description": "Sets the sort order of search results.",
      "x-release-status": "PUBLIC"
    },
    "ShiftWage": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the job performed during this shift. Square\nlabor-reporting UIs may group shifts together by title."
        },
        "hourly_rate": {
          "$ref": "#/definitions/Money",
          "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on annual wage and hours worked per week."
        }
      },
      "description": "The hourly wage rate used to compensate an employee for this shift.",
      "x-release-status": "PUBLIC"
    },
    "ShiftWorkday": {
      "type": "object",
      "properties": {
        "date_range": {
          "$ref": "#/definitions/DateRange",
          "description": "Dates for fetching the shifts"
        },
        "match_shifts_by": {
          "type": "string",
          "enum": [
            "START_AT",
            "END_AT",
            "INTERSECTION"
          ],
          "description": "The strategy on which the dates are applied."
        },
        "default_timezone": {
          "type": "string",
          "description": "Location-specific timezones convert workdays to datetime filters.\nEvery location included in the query must have a timezone, or this field\nmust be provided as a fallback. Format: the IANA timezone database\nidentifier for the relevant timezone."
        }
      },
      "description": "A `Shift` search query filter parameter that sets a range of days that \na `Shift` must start or end in before passing the filter condition.",
      "x-release-status": "PUBLIC"
    },
    "SourceApplication": {
      "type": "object",
      "properties": {
        "product": {
          "type": "string",
          "enum": [
            "SQUARE_POS",
            "EXTERNAL_API",
            "BILLING",
            "APPOINTMENTS",
            "INVOICES",
            "ONLINE_STORE",
            "PAYROLL",
            "DASHBOARD",
            "ITEM_LIBRARY_IMPORT",
            "OTHER"
          ],
          "description": "Read-only [Product](#type-product) type for the application."
        },
        "application_id": {
          "type": "string",
          "description": "Read-only Square ID assigned to the application. Only used for\n[Product](#type-product) type `EXTERNAL_API`."
        },
        "name": {
          "type": "string",
          "description": "Read-only display name assigned to the application\n(e.g. `\"Custom Application\"`, `\"Square POS 4.74 for Android\"`)."
        }
      },
      "description": "Provides information about the application used to generate an inventory\nchange.",
      "x-release-status": "PUBLIC"
    },
    "Tender": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "transaction_id": {
          "type": "string",
          "description": "The ID of the tender\u0027s associated transaction."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the tender was created, in RFC 3339 format."
        },
        "note": {
          "type": "string",
          "description": "An optional note associated with the tender at the time of payment."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the tender."
        },
        "tip_money": {
          "$ref": "#/definitions/Money",
          "description": "The tip\u0027s amount of the tender."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of any Square processing fees applied to the tender.\n\nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds."
        },
        "customer_id": {
          "type": "string",
          "description": "If the tender is associated with a customer or represents a customer\u0027s card on file,\nthis is the ID of the associated customer."
        },
        "type": {
          "type": "string",
          "enum": [
            "CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "SQUARE_GIFT_CARD",
            "NO_SALE",
            "OTHER"
          ],
          "description": "The type of tender, such as `CARD` or `CASH`."
        },
        "card_details": {
          "$ref": "#/definitions/TenderCardDetails",
          "description": "The details of the card tender.\n\nThis value is present only if the value of `type` is `CARD`."
        },
        "cash_details": {
          "$ref": "#/definitions/TenderCashDetails",
          "description": "The details of the cash tender.\n\nThis value is present only if the value of `type` is `CASH`."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this tender.\nFor example, fees assessed on the purchase by a third party integration."
        }
      },
      "description": "Represents a tender (i.e., a method of payment) used in a Square transaction.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "AUTHORIZED",
            "CAPTURED",
            "VOIDED",
            "FAILED"
          ],
          "description": "The credit card payment\u0027s current state (such as `AUTHORIZED` or\n`CAPTURED`). See [TenderCardDetailsStatus](#type-tendercarddetailsstatus)\nfor possible values."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The credit card\u0027s non-confidential details."
        },
        "entry_method": {
          "type": "string",
          "enum": [
            "SWIPED",
            "KEYED",
            "EMV",
            "ON_FILE",
            "CONTACTLESS"
          ],
          "description": "The method used to enter the card\u0027s details for the transaction."
        }
      },
      "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`",
      "x-release-status": "PUBLIC"
    },
    "TenderCashDetails": {
      "type": "object",
      "properties": {
        "buyer_tendered_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of cash provided by the buyer, before change is given."
        },
        "change_back_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of change returned to the buyer."
        }
      },
      "description": "Represents the details of a tender with `type` `CASH`.",
      "x-release-status": "PUBLIC"
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "start_at": {
          "type": "string",
          "description": "A datetime value in RFC-3339 format indicating when the time range\nstarts."
        },
        "end_at": {
          "type": "string",
          "description": "A datetime value in RFC-3339 format indicating when the time range\nends."
        }
      },
      "description": "Represents a generic time range. The start and end values are\nrepresented in RFC-3339 format. Time ranges are customized to be\ninclusive or exclusive based on the needs of a particular endpoint.\nRefer to the relevent endpoint-specific documentation to determine\nhow time ranges are handled.",
      "x-release-status": "PUBLIC"
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The transaction\u0027s unique ID, issued by Square payments servers."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the transaction was created, in RFC 3339 format."
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          },
          "description": "The tenders used to pay in the transaction."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "Refunds that have been applied to any tender in the transaction."
        },
        "reference_id": {
          "type": "string",
          "description": "If the transaction was created with the [Charge](#endpoint-charge)\nendpoint, this value is the same as the value provided for the `reference_id`\nparameter in the request to that endpoint. Otherwise, it is not set."
        },
        "product": {
          "type": "string",
          "enum": [
            "REGISTER",
            "EXTERNAL_API",
            "BILLING",
            "APPOINTMENTS",
            "INVOICES",
            "ONLINE_STORE",
            "PAYROLL",
            "OTHER"
          ],
          "description": "The Square product that processed the transaction."
        },
        "client_id": {
          "type": "string",
          "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction\u0027s canonical `id`, which is\ngenerated by Square\u0027s backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided in the request, if any."
        },
        "order_id": {
          "type": "string",
          "description": "The order_id is an identifier for the order associated with this transaction, if any."
        }
      },
      "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Point of Sale.\n\nThe `tenders` field of this object lists all methods of payment used to pay in\nthe transaction.",
      "x-release-status": "PUBLIC"
    },
    "UpdateBreakTypeRequest": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The updated `BreakType`."
        }
      },
      "description": "A request to update a `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "break_type": {
            "location_id": "26M7H24AZ9N6R",
            "break_name": "Lunch",
            "expected_duration": "PT50M",
            "is_paid": true,
            "version": 1
          }
        }
      }
    },
    "UpdateBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to a request to update a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "Q6JSJS6D4DBCH",
          "location_id": "26M7H24AZ9N6R",
          "break_name": "Lunch",
          "expected_duration": "PT50M",
          "is_paid": true,
          "version": 2,
          "created_at": "2018-06-12T20:19:12Z",
          "updated_at": "2019-02-26T23:12:59Z"
        }
      }
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "An optional note to associate with the customer."
        },
        "birthday": {
          "type": "string",
          "description": "The customer birthday in RFC-3339 format. Year is optional,\ntimezone and times are not allowed. Example: `0000-09-01T00:00:00-00:00`\nfor a birthday on September 1st. `1998-09-01T00:00:00-00:00` for a birthday\non September 1st 1998."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[UpdateCustomer](#endpoint-updatecustomer) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "phone_number": "",
          "email_address": "New.Amelia.Earhart@example.com",
          "note": "updated customer note"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp",
        "java": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.java",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.php",
        "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.javascript",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby"
      }
    },
    "UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The updated customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomer](#endpoint-updatecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-25T20:21:55Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "New.Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "updated customer note",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp",
        "java": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.java",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.php",
        "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.javascript",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby"
      }
    },
    "UpdateItemModifierListsRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The [CatalogItem](#type-catalogitem)s whose [CatalogModifierList](#type-catalogmodifierlist)s are being updated."
        },
        "modifier_lists_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to enable for the [CatalogItem](#type-catalogitem)."
        },
        "modifier_lists_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to disable for the [CatalogItem](#type-catalogitem)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_enable": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_disable": [
            "7WRC16CJZDVLSNDQ35PP6YAD"
          ]
        }
      }
    },
    "UpdateItemModifierListsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      }
    },
    "UpdateItemTaxesRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The [CatalogItem](#type-catalogitem)s whose enabled/disabled [CatalogTax](#type-catalogtax)es are being updated."
        },
        "taxes_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to enable for the [CatalogItem](#type-catalogitem)."
        },
        "taxes_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to disable for the [CatalogItem](#type-catalogitem)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "taxes_to_enable": [
            "4WRCNHCJZDVLSNDQ35PP6YAD"
          ],
          "taxes_to_disable": [
            "AQCEGCEBBQONINDOHRGZISEX"
          ]
        }
      }
    },
    "UpdateItemTaxesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      }
    },
    "UpdateShiftRequest": {
      "type": "object",
      "required": [
        "shift"
      ],
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The updated `Shift` object."
        }
      },
      "description": "A request to update a `Shift` object.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "shift": {
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Bartender",
              "hourly_rate": {
                "amount": 1500,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "X7GAQYVVRRG6P",
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ],
            "version": 1
          }
        }
      }
    },
    "UpdateShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The updated `Shift`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to update a `Shift`. Contains\nthe updated `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "K0YH4CV5462JB",
          "employee_id": "ormj0jJJZ5OZIzxrZYJI",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-01-25T03:11:00-05:00",
          "end_at": "2019-01-25T13:11:00-05:00",
          "wage": {
            "title": "Bartender",
            "hourly_rate": {
              "amount": 1500,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "X7GAQYVVRRG6P",
              "start_at": "2019-01-25T06:11:00-05:00",
              "end_at": "2019-01-25T06:16:00-05:00",
              "break_type_id": "REGS1EQR1TPZ5",
              "name": "Tea Break",
              "expected_duration": "PT5M",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 2,
          "created_at": "2019-02-28T00:39:02Z",
          "updated_at": "2019-02-28T00:42:41Z"
        }
      }
    },
    "UpdateWorkweekConfigRequest": {
      "type": "object",
      "properties": {
        "workweek_config": {
          "$ref": "#/definitions/WorkweekConfig",
          "description": "The updated `WorkweekConfig` object."
        }
      },
      "description": "A request to update a `WorkweekConfig` object",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "workweek_config": {
            "start_of_week": "MON",
            "start_of_day_local_time": "10:00",
            "version": 10
          }
        }
      }
    },
    "UpdateWorkweekConfigResponse": {
      "type": "object",
      "properties": {
        "workweek_config": {
          "$ref": "#/definitions/WorkweekConfig",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to update a `WorkweekConfig` object. Contains\nthe updated `WorkweekConfig` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "workweek_config": {
          "id": "FY4VCAQN700GM",
          "start_of_week": "MON",
          "start_of_day_local_time": "10:00",
          "version": 11,
          "created_at": "2016-02-04T00:58:24Z",
          "updated_at": "2019-02-28T01:04:35Z"
        }
      }
    },
    "UpsertCatalogObjectRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "object"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](/basics/api101/idempotency) for more information."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "A [CatalogObject](#type-catalogobject) to be created or updated. The object\u0027s `is_deleted` field must not\nbe set to `true`. When creating a new object, the object\u0027s ID must either start with a `#` character or be left\nblank. In either case it will be replaced with a server-generated ID."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "af3d1afc-7212-4300-b463-0bfc5314a5ae",
          "object": {
            "type": "ITEM",
            "id": "#Cocoa",
            "item_data": {
              "name": "Cocoa",
              "description": "Hot chocolate",
              "abbreviation": "Ch"
            }
          }
        }
      }
    },
    "UpsertCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "catalog_object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The created [CatalogObject](#type-catalogobject)."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this Upsert."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "catalog_object": {
          "type": "ITEM",
          "id": "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "updated_at": "2016-11-16T22:32:42.996Z",
          "version": 1479335562996,
          "is_deleted": false,
          "item_data": {
            "name": "Cocoa",
            "description": "Hot chocolate",
            "abbreviation": "Ch"
          }
        },
        "id_mappings": [
          {
            "client_object_id": "#Cocoa",
            "object_id": "7SB3ZQYJ5GDMVFL7JK46JCHT"
          }
        ]
      }
    },
    "V1AdjustInventoryRequest": {
      "type": "object",
      "properties": {
        "quantity_delta": {
          "type": "number",
          "description": "The number to adjust the variation\u0027s quantity by."
        },
        "adjustment_type": {
          "type": "string",
          "enum": [
            "SALE",
            "RECEIVE_STOCK",
            "MANUAL_ADJUST"
          ],
          "description": "The reason for the inventory adjustment.\nSee [V1AdjustInventoryRequestAdjustmentType](#type-v1adjustinventoryrequestadjustmenttype) for possible values"
        },
        "memo": {
          "type": "string",
          "description": "A note about the inventory adjustment."
        }
      },
      "description": "V1AdjustInventoryRequest",
      "x-release-status": "PUBLIC"
    },
    "V1ApplyFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ApplyModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1BankAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The bank account\u0027s Square-issued ID."
        },
        "merchant_id": {
          "type": "string",
          "description": "The Square-issued ID of the merchant associated with the bank account."
        },
        "bank_name": {
          "type": "string",
          "description": "The name of the bank that manages the account."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the bank account."
        },
        "routing_number": {
          "type": "string",
          "description": "The bank account\u0027s routing number."
        },
        "account_number_suffix": {
          "type": "string",
          "description": "The last few digits of the bank account number."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "type": {
          "type": "string",
          "enum": [
            "BUSINESS_CHECKING",
            "CHECKING",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "description": "The bank account\u0027s type (for example, savings or checking).\nSee [V1BankAccountType](#type-v1bankaccounttype) for possible values"
        }
      },
      "description": "V1BankAccount",
      "x-release-status": "PUBLIC"
    },
    "V1CashDrawerEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that created the event."
        },
        "event_type": {
          "type": "string",
          "enum": [
            "NO_SALE",
            "CASH_TENDER_PAYMENT",
            "OTHER_TENDER_PAYMENT",
            "CASH_TENDER_CANCELED_PAYMENT",
            "OTHER_TENDER_CANCELED_PAYMENT",
            "CASH_TENDER_REFUND",
            "OTHER_TENDER_REFUND",
            "PAID_IN",
            "PAID_OUT"
          ],
          "description": "The type of event that occurred.\nSee [V1CashDrawerEventEventType](#type-v1cashdrawereventeventtype) for possible values"
        },
        "event_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money)."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event occurred, in ISO 8601 format."
        },
        "description": {
          "type": "string",
          "description": "An optional description of the event, entered by the employee that created it."
        }
      },
      "description": "V1CashDrawerEvent",
      "x-release-status": "PUBLIC"
    },
    "V1CashDrawerShift": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The shift\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "enum": [
            "OPEN",
            "ENDED",
            "CLOSED"
          ],
          "description": "The shift\u0027s current state.\nSee [V1CashDrawerShiftEventType](#type-v1cashdrawershifteventtype) for possible values"
        },
        "opened_at": {
          "type": "string",
          "description": "The time when the shift began, in ISO 8601 format."
        },
        "ended_at": {
          "type": "string",
          "description": "The time when the shift ended, in ISO 8601 format."
        },
        "closed_at": {
          "type": "string",
          "description": "The time when the shift was closed, in ISO 8601 format."
        },
        "employee_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift."
        },
        "opening_employee_id": {
          "type": "string",
          "description": "The ID of the employee that started the cash drawer shift."
        },
        "ending_employee_id": {
          "type": "string",
          "description": "The ID of the employee that ended the cash drawer shift."
        },
        "closing_employee_id": {
          "type": "string",
          "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer\u0027s contents."
        },
        "description": {
          "type": "string",
          "description": "The time when the timecard was created, in ISO 8601 format."
        },
        "starting_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money in the cash drawer at the start of the shift."
        },
        "cash_payment_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money added to the cash drawer from cash payments."
        },
        "cash_refunds_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero."
        },
        "cash_paid_in_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money added to the cash drawer for reasons other than cash payments."
        },
        "cash_paid_out_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money removed from the cash drawer for reasons other than cash refunds."
        },
        "expected_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift\u0027s other money amounts."
        },
        "closed_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device running Square Register that was connected to the cash drawer."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1CashDrawerEvent"
          },
          "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift."
        }
      },
      "description": "V1CashDrawerShift",
      "x-release-status": "PUBLIC"
    },
    "V1Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The category\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The category\u0027s name."
        }
      },
      "description": "V1Category",
      "x-release-status": "PUBLIC"
    },
    "V1CreateCategoryRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Category",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateDiscountRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Discount",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateEmployeeRoleRequest": {
      "type": "object",
      "properties": {
        "employee_role": {
          "$ref": "#/definitions/V1EmployeeRole",
          "description": "An EmployeeRole object with a name and permissions, and an optional owner flag."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateFeeRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Fee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateItemRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Item",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateModifierListRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierList",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateModifierOptionRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierOption",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreatePageRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Page",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateRefundRequest": {
      "type": "object",
      "required": [
        "payment_id",
        "type",
        "reason"
      ],
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The ID of the payment to refund. If you are creating a `PARTIAL`\nrefund for a split tender payment, instead provide the id of the\nparticular tender you want to refund."
        },
        "type": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "description": "TThe type of refund (FULL or PARTIAL).\nSee [V1CreateRefundRequestType](#type-v1createrefundrequesttype) for possible values"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money to refund. Required only for PARTIAL refunds."
        },
        "request_idempotence_key": {
          "type": "string",
          "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once."
        }
      },
      "description": "V1CreateRefundRequest",
      "x-release-status": "PUBLIC"
    },
    "V1CreateVariationRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Variation",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteCategoryRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteDiscountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteItemRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteModifierOptionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeletePageCellRequest": {
      "type": "object",
      "properties": {
        "row": {
          "type": "string",
          "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row."
        },
        "column": {
          "type": "string",
          "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeletePageRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteTimecardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteTimecardResponse": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DeleteVariationRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1Discount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The discount\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE."
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of the discount. This amount is 0 if discount_type is VARIABLE_AMOUNT. This field is not included for rate-based discounts."
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "FIXED",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "Indicates whether the discount is a FIXED value or entered at the time of sale.\nSee [V1DiscountDiscountType](#type-v1discountdiscounttype) for possible values"
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the discount to a payment."
        },
        "color": {
          "type": "string",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "description": "The color of the discount\u0027s display label in Square Register, if not the default color. The default color is 9da2a6.\nSee [V1DiscountColor](#type-v1discountcolor) for possible values"
        }
      },
      "description": "V1Discount",
      "x-release-status": "PUBLIC"
    },
    "V1Employee": {
      "type": "object",
      "required": [
        "first_name",
        "last_name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The employee\u0027s unique ID."
        },
        "first_name": {
          "type": "string",
          "description": "The employee\u0027s first name."
        },
        "last_name": {
          "type": "string",
          "description": "The employee\u0027s last name."
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ids of the employee\u0027s associated roles. Currently, you can specify only one or zero roles per employee."
        },
        "authorized_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the locations the employee is allowed to clock in at."
        },
        "email": {
          "type": "string",
          "description": "The employee\u0027s email address."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard.\nSee [V1EmployeeStatus](#type-v1employeestatus) for possible values"
        },
        "external_id": {
          "type": "string",
          "description": "An ID the merchant can set to associate the employee with an entity in another system."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format."
        }
      },
      "description": "Represents one of a business\u0027s employees.",
      "x-release-status": "PUBLIC"
    },
    "V1EmployeeRole": {
      "type": "object",
      "required": [
        "name",
        "permissions"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The role\u0027s unique ID, Can only be set by Square."
        },
        "name": {
          "type": "string",
          "description": "The role\u0027s merchant-defined name."
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "REGISTER_ACCESS_SALES_HISTORY",
              "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
              "REGISTER_CHANGE_SETTINGS",
              "REGISTER_EDIT_ITEM",
              "REGISTER_ISSUE_REFUNDS",
              "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
              "REGISTER_VIEW_SUMMARY_REPORTS"
            ]
          },
          "description": "The role\u0027s permissions.\nSee [V1EmployeeRolePermissions](#type-v1employeerolepermissions) for possible values"
        },
        "is_owner": {
          "type": "boolean",
          "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated."
        }
      },
      "description": "V1EmployeeRole",
      "x-release-status": "PUBLIC"
    },
    "V1Fee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fee\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The fee\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "calculation_phase": {
          "type": "string",
          "enum": [
            "FEE_SUBTOTAL_PHASE",
            "OTHER",
            "FEE_TOTAL_PHASE"
          ],
          "description": "Forthcoming\nSee [V1FeeCalculationPhase](#type-v1feecalculationphase) for possible values"
        },
        "adjustment_type": {
          "type": "string",
          "enum": [
            "TAX"
          ],
          "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees.\nSee [V1FeeAdjustmentType](#type-v1feeadjustmenttype) for possible values"
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item."
        },
        "enabled": {
          "type": "boolean",
          "description": "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the fee is ADDITIVE or INCLUSIVE.\nSee [V1FeeInclusionType](#type-v1feeinclusiontype) for possible values"
        },
        "type": {
          "type": "string",
          "enum": [
            "CA_GST",
            "CA_HST",
            "CA_PST",
            "CA_QST",
            "JP_CONSUMPTION_TAX",
            "CA_PEI_PST",
            "US_SALES_TAX",
            "OTHER"
          ],
          "description": "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants.\nSee [V1FeeType](#type-v1feetype) for possible values"
        }
      },
      "description": "V1Fee",
      "x-release-status": "PUBLIC"
    },
    "V1InventoryEntry": {
      "type": "object",
      "properties": {
        "variation_id": {
          "type": "string",
          "description": "The variation that the entry corresponds to."
        },
        "quantity_on_hand": {
          "type": "number",
          "description": "The current available quantity of the item variation."
        }
      },
      "description": "V1InventoryEntry",
      "x-release-status": "PUBLIC"
    },
    "V1Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item\u0027s ID. Must be unique among all entity IDs ever provided on behalf of the merchant. You can never reuse an ID. This value can include alphanumeric characters, dashes (-), and underscores (_)."
        },
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "description": {
          "type": "string",
          "description": "The item\u0027s description."
        },
        "type": {
          "type": "string",
          "enum": [
            "NORMAL",
            "GIFT_CARD",
            "OTHER"
          ],
          "description": "The item\u0027s type. This value is NORMAL for almost all items.\nSee [V1ItemType](#type-v1itemtype) for possible values"
        },
        "color": {
          "type": "string",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "description": "The color of the discount\u0027s display label in Square Register, if not the default color. The default color is 9da2a6.\nSee [V1ItemColor](#type-v1itemcolor) for possible values"
        },
        "abbreviation": {
          "type": "string",
          "description": "The text of the item\u0027s display label in Square Register. Only up to the first five characters of the string are used."
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "description": "Indicates whether the item is viewable from the merchant\u0027s online store (PUBLIC) or PRIVATE.\nSee [V1ItemVisibility](#type-v1itemvisibility) for possible values"
        },
        "available_online": {
          "type": "boolean",
          "description": "If true, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "master_image": {
          "$ref": "#/definitions/V1ItemImage",
          "description": "The item\u0027s master image, if any."
        },
        "category": {
          "$ref": "#/definitions/V1Category",
          "description": "The category the item belongs to, if any."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Variation"
          },
          "description": "The item\u0027s variations. You must specify at least one variation."
        },
        "modifier_lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Variation"
          },
          "description": "The modifier lists that apply to the item, if any."
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Fee"
          },
          "description": "The fees that apply to the item, if any."
        },
        "taxable": {
          "type": "boolean",
          "description": "Deprecated. This field is not used."
        },
        "category_id": {
          "type": "string",
          "description": "The ID of the item\u0027s category, if any."
        },
        "available_for_pickup": {
          "type": "boolean",
          "description": "If true, the item can be added to pickup orders from the merchant\u0027s online store. Default value: false"
        }
      },
      "description": "V1Item",
      "x-release-status": "PUBLIC"
    },
    "V1ItemImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The image\u0027s unique ID."
        },
        "url": {
          "type": "string",
          "description": "The image\u0027s publicly accessible URL."
        }
      },
      "description": "V1ItemImage",
      "x-release-status": "PUBLIC"
    },
    "V1ListBankAccountsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListBankAccountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1BankAccount"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListCashDrawerShiftsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days."
        },
        "end_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListCashDrawerShiftsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1CashDrawerShift"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListCategoriesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListCategoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Category"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListDiscountsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListDiscountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Discount"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeeRolesRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeeRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1EmployeeRole"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeesRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
        },
        "end_updated_at": {
          "type": "string",
          "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_created_at": {
          "type": "string",
          "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_created_at": {
          "type": "string",
          "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).\nSee [V1ListEmployeesRequestStatus](#type-v1listemployeesrequeststatus) for possible values"
        },
        "external_id": {
          "type": "string",
          "description": "If provided, the endpoint returns only employee entities with the specified external_id."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Employee"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListFeesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListFeesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Fee"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListInventoryRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListInventoryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1InventoryEntry"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListItemsRequest": {
      "type": "object",
      "properties": {
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Item"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListLocationsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListLocationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Merchant"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListModifierListsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListModifierListsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1ModifierList"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListOrdersRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "TThe order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1ListOrdersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Order"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1ListPagesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListPagesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Page"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListPaymentsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        },
        "include_partial": {
          "type": "boolean",
          "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListPaymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Payment"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListRefundsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "TThe order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListRefundsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Refund"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "TThe order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        "status": {
          "type": "string",
          "enum": [
            "SENT",
            "FAILED"
          ],
          "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).\nSee [V1ListSettlementsRequestStatus](#type-v1listsettlementsrequeststatus) for possible values"
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Settlement"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListTimecardEventsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListTimecardEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1TimecardEvent"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListTimecardsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which timecards are listed in the response, based on their created_at field.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "employee_id": {
          "type": "string",
          "description": "If provided, the endpoint returns only timecards for the employee with the specified ID."
        },
        "begin_clockin_time": {
          "type": "string",
          "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_clockin_time": {
          "type": "string",
          "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_clockout_time": {
          "type": "string",
          "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_clockout_time": {
          "type": "string",
          "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "deleted": {
          "type": "boolean",
          "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don\u0027t provide this parameter, both valid and deleted timecards are returned."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListTimecardsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Timecard"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1Merchant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The merchant account\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the merchant account."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the merchant account."
        },
        "account_type": {
          "type": "string",
          "enum": [
            "LOCATION",
            "BUSINESS"
          ],
          "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION.\nSee [V1MerchantAccountType](#type-v1merchantaccounttype) for possible values"
        },
        "account_capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Capabilities that are enabled for the merchant\u0027s Square account. Capabilities that are not listed in this array are not enabled for the account."
        },
        "country_code": {
          "type": "string",
          "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format."
        },
        "language_code": {
          "type": "string",
          "description": "The language associated with the merchant account, in BCP 47 format."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "business_name": {
          "type": "string",
          "description": "The name of the merchant\u0027s business."
        },
        "business_address": {
          "$ref": "#/definitions/Address",
          "description": "The address of the merchant\u0027s business."
        },
        "business_phone": {
          "$ref": "#/definitions/V1PhoneNumber",
          "description": "The phone number of the merchant\u0027s business."
        },
        "business_type": {
          "type": "string",
          "enum": [
            "ACCOUNTING",
            "APPAREL_AND_ACCESSORY_SHOPS",
            "ART_DEALERS_GALLERIES",
            "ART_DESIGN_AND_PHOTOGRAPHY",
            "BAR_CLUB_LOUNGE",
            "BEAUTY_AND_BARBER_SHOPS",
            "BOOK_STORES",
            "BUSINESS_SERVICES",
            "CATERING",
            "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
            "CHARITIBLE_ORGS",
            "CLEANING_SERVICES",
            "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
            "CONSULTANT",
            "CONTRACTORS",
            "DELIVERY_SERVICES",
            "DENTISTRY",
            "EDUCATION",
            "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
            "FOOD_TRUCK_CART",
            "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
            "FURNITURE_HOME_GOODS",
            "HOTELS_AND_LODGING",
            "INDIVIDUAL_USE",
            "JEWELRY_AND_WATCHES",
            "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
            "LANGUAGE_SCHOOLS",
            "LEGAL_SERVICES",
            "MEDICAL_PRACTITIONERS",
            "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
            "MEMBERSHIP_ORGANIZATIONS",
            "MUSIC_AND_ENTERTAINMENT",
            "OTHER",
            "OUTDOOR_MARKETS",
            "PERSONAL_SERVICES",
            "POLITICAL_ORGANIZATIONS",
            "PROFESSIONAL_SERVICES",
            "REAL_ESTATE",
            "RECREATION_SERVICES",
            "REPAIR_SHOPS_AND_RELATED_SERVICES",
            "RESTAURANTS",
            "RETAIL_SHOPS",
            "SCHOOLS_AND_EDUCATIONAL_SERVICES",
            "SPORTING_GOODS",
            "TAXICABS_AND_LIMOUSINES",
            "TICKET_SALES",
            "TOURISM",
            "TRAVEL_TOURISM",
            "VETERINARY_SERVICES",
            "WEB_DEV_DESIGN"
          ],
          "description": "The type of business operated by the merchant.\nSee [V1MerchantBusinessType](#type-v1merchantbusinesstype) for possible values"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The merchant\u0027s shipping address."
        },
        "location_details": {
          "$ref": "#/definitions/V1MerchantLocationDetails",
          "description": "Additional information for a single-location account specified by its associated business account, if it has one."
        },
        "market_url": {
          "type": "string",
          "description": "The URL of the merchant\u0027s online store."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the **RetrieveBusiness** endpoint.",
      "x-release-status": "PUBLIC"
    },
    "V1MerchantLocationDetails": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string",
          "description": "The nickname assigned to the single-location account by the parent business. This value appears in the parent business\u0027s multi-location dashboard."
        }
      },
      "description": "Additional information for a single-location account specified by its associated business account, if it has one.",
      "x-release-status": "PUBLIC"
    },
    "V1ModifierList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier list\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether MULTIPLE options or a SINGLE option from the modifier list can be applied to a single item.\nSee [V1ModifierListSelectionType](#type-v1modifierlistselectiontype) for possible values"
        },
        "modifier_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1ModifierOption"
          },
          "description": "The options included in the modifier list."
        }
      },
      "description": "V1ModifierList",
      "x-release-status": "PUBLIC"
    },
    "V1ModifierOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier option\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The modifier option\u0027s price."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE."
        },
        "ordinal": {
          "type": "integer",
          "description": "Indicates the modifier option\u0027s list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order."
        },
        "modifier_list_id": {
          "type": "string",
          "description": "The ID of the modifier list the option belongs to."
        }
      },
      "description": "V1ModifierOption",
      "x-release-status": "PUBLIC"
    },
    "V1Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a \u0027cent\u0027 concept)."
        },
        "currency_code": {
          "type": "string",
          "enum": [
            "UNKNOWN_CURRENCY",
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "description": "\nSee [Currency](#type-currency) for possible values"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1Order": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "id": {
          "type": "string",
          "description": "The order\u0027s unique identifier."
        },
        "buyer_email": {
          "type": "string",
          "description": "The email address of the order\u0027s buyer."
        },
        "recipient_name": {
          "type": "string",
          "description": "The name of the order\u0027s buyer."
        },
        "recipient_phone_number": {
          "type": "string",
          "description": "The phone number to use for the order\u0027s delivery."
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "OPEN",
            "COMPLETED",
            "CANCELED",
            "REFUNDED",
            "REJECTED"
          ],
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1OrderState](#type-v1orderstate) for possible values"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The address to ship the order to."
        },
        "subtotal_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of all items purchased in the order, before taxes and shipping."
        },
        "total_shipping_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The shipping cost for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all taxes applied to the order."
        },
        "total_price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the order."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the order was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the order was last modified, in ISO 8601 format."
        },
        "expires_at": {
          "type": "string",
          "description": "The time when the order expires if no action is taken, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "The unique identifier of the payment associated with the order."
        },
        "buyer_note": {
          "type": "string",
          "description": "A note provided by the buyer when the order was created, if any."
        },
        "completed_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to COMPLETED, if any"
        },
        "refunded_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to REFUNDED, if any."
        },
        "canceled_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to CANCELED, if any."
        },
        "tender": {
          "$ref": "#/definitions/V1Tender",
          "description": "The tender used to pay for the order."
        },
        "order_history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1OrderHistoryEntry"
          },
          "description": "The history of actions associated with the order."
        },
        "promo_code": {
          "type": "string",
          "description": "The promo code provided by the buyer, if any."
        },
        "btc_receive_address": {
          "type": "string",
          "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to."
        },
        "btc_price_satoshi": {
          "type": "number",
          "description": "For Bitcoin transactions, the price of the buyer\u0027s order in satoshi (100 million satoshi equals 1 BTC)."
        }
      },
      "description": "V1Order",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1OrderHistoryEntry": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "ORDER_PLACED",
            "DECLINED",
            "PAYMENT_RECEIVED",
            "CANCELED",
            "COMPLETED",
            "REFUNDED",
            "EXPIRED"
          ],
          "description": "The type of action performed on the order.\nSee [V1OrderHistoryEntryAction](#type-v1orderhistoryentryaction) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "The time when the action was performed, in ISO 8601 format."
        }
      },
      "description": "V1OrderHistoryEntry",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The page\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The page\u0027s name, if any."
        },
        "page_index": {
          "minimum": 0,
          "maximum": 6,
          "type": "integer",
          "description": "The page\u0027s position in the merchant\u0027s list of pages. Always an integer between 0 and 6, inclusive."
        },
        "cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PageCell"
          },
          "description": "The cells included on the page."
        }
      },
      "description": "V1Page",
      "x-release-status": "PUBLIC"
    },
    "V1PageCell": {
      "type": "object",
      "properties": {
        "page_id": {
          "type": "string",
          "description": "The unique identifier of the page the cell is included on."
        },
        "row": {
          "type": "integer",
          "description": "The row of the cell. Always an integer between 0 and 4, inclusive."
        },
        "column": {
          "type": "integer",
          "description": "The column of the cell. Always an integer between 0 and 4, inclusive."
        },
        "object_type": {
          "type": "string",
          "enum": [
            "ITEM",
            "DISCOUNT",
            "CATEGORY",
            "PLACEHOLDER"
          ],
          "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER).\nSee [V1PageCellObjectType](#type-v1pagecellobjecttype) for possible values"
        },
        "object_id": {
          "type": "string",
          "description": "The unique identifier of the entity represented in the cell. Not present for cells with an object_type of PLACEHOLDER."
        },
        "placeholder_type": {
          "type": "string",
          "enum": [
            "ALL_ITEMS",
            "DISCOUNTS_CATEGORY",
            "REWARDS_FINDER"
          ],
          "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell\u0027s special behavior.\nSee [V1PageCellPlaceholderType](#type-v1pagecellplaceholdertype) for possible values"
        }
      },
      "description": "V1PageCell",
      "x-release-status": "PUBLIC"
    },
    "V1Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The payment\u0027s unique identifier."
        },
        "merchant_id": {
          "type": "string",
          "description": "The unique identifier of the merchant that took the payment."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the payment was created, in ISO 8601 format. Reflects the time of the first payment if the object represents an incomplete partial payment, and the time of the last or complete payment otherwise."
        },
        "creator_id": {
          "type": "string",
          "description": "The unique identifier of the Square account that took the payment."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device that took the payment."
        },
        "payment_url": {
          "type": "string",
          "description": "The URL of the payment\u0027s detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the payment. Note that for split tender\npayments, this URL corresponds to the receipt for the first tender\nlisted in the payment\u0027s tender field. Each Tender object has its own\nreceipt_url field you can use to get the other receipts associated with\na split tender payment."
        },
        "inclusive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of all inclusive taxes associated with the payment."
        },
        "additive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of all additive taxes associated with the payment."
        },
        "tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money."
        },
        "tip_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all tips applied to the payment."
        },
        "discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "total_collected_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all processing fees collected by Square for the payment."
        },
        "net_total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount to be deposited into the merchant\u0027s bank account for the payment."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all refunds applied to the payment."
        },
        "swedish_rounding_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, including any applicable taxes, rounded to the smallest legal unit of currency (e.g., the nearest penny in USD, the nearest nickel in CAD)"
        },
        "gross_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, including any applicable taxes."
        },
        "net_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, minus any applicable taxes."
        },
        "inclusive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the inclusive taxes associated with the payment."
        },
        "additive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the additive taxes associated with the payment."
        },
        "tender": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Tender"
          },
          "description": "All of the additive taxes associated with the payment."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Refund"
          },
          "description": "All of the refunds applied to the payment. Note that the value of all refunds on a payment can exceed the value of all tenders if a merchant chooses to refund money to a tender after previously accepting returned goods as part of an exchange."
        },
        "itemizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentItemization"
          },
          "description": "The items purchased in the payment."
        },
        "surcharge_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all surcharges applied to the payment."
        },
        "surcharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentSurcharge"
          },
          "description": "A list of all surcharges associated with the payment."
        },
        "is_partial": {
          "type": "boolean",
          "description": "Indicates whether or not the payment is only partially paid for.\nIf true, this payment will have the tenders collected so far, but the\nitemizations will be empty until the payment is completed."
        }
      },
      "description": "A payment represents a paid transaction between a Square merchant and a\ncustomer. Payment details are usually available from Connect API endpoints\nwithin a few minutes after the transaction completes.\n\nEach Payment object includes several fields that end in `_money`. These fields\ndescribe the various amounts of money that contribute to the payment total:\n\n\u003cul\u003e\n\u003cli\u003e\nMonetary values are \u003cb\u003epositive\u003c/b\u003e if they represent an\n\u003cem\u003eincrease\u003c/em\u003e in the amount of money the merchant receives (e.g.,\n\u003ccode\u003etax_money\u003c/code\u003e, \u003ccode\u003etip_money\u003c/code\u003e).\n\u003c/li\u003e\n\u003cli\u003e\nMonetary values are \u003cb\u003enegative\u003c/b\u003e if they represent an\n\u003cem\u003edecrease\u003c/em\u003e in the amount of money the merchant receives (e.g.,\n\u003ccode\u003ediscount_money\u003c/code\u003e, \u003ccode\u003erefunded_money\u003c/code\u003e).\n\u003c/li\u003e\n\u003c/ul\u003e",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this discount adds to the payment (note that this value is always negative or zero)."
        },
        "discount_id": {
          "type": "string",
          "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentDiscount",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentItemDetail": {
      "type": "object",
      "properties": {
        "category_name": {
          "type": "string",
          "description": "The name of the item\u0027s merchant-defined category, if any."
        },
        "sku": {
          "type": "string",
          "description": " The item\u0027s merchant-defined SKU, if any."
        },
        "item_id": {
          "type": "string",
          "description": "The unique ID of the item purchased, if any."
        },
        "item_variation_id": {
          "type": "string",
          "description": "The unique ID of the item variation purchased, if any."
        }
      },
      "description": "V1PaymentItemDetail",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentItemization": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item purchased. This can be a decimal value."
        },
        "itemization_type": {
          "type": "string",
          "enum": [
            "ITEM",
            "CUSTOM_AMOUNT",
            "GIFT_CARD_ACTIVATION",
            "GIFT_CARD_RELOAD",
            "GIFT_CARD_UNKNOWN",
            "OTHER"
          ],
          "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT\nSee [V1PaymentItemizationItemizationType](#type-v1paymentitemizationitemizationtype) for possible values"
        },
        "item_detail": {
          "$ref": "#/definitions/V1PaymentItemDetail",
          "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased."
        },
        "notes": {
          "type": "string",
          "description": "Notes entered by the merchant about the item at the time of payment, if any."
        },
        "item_variation_name": {
          "type": "string",
          "description": "The name of the item variation purchased, if any."
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the item, including all taxes and discounts."
        },
        "single_quantity_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The cost of a single unit of this item."
        },
        "gross_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the itemization and its modifiers, not including taxes or discounts."
        },
        "discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the itemization. This value is always negative or zero."
        },
        "net_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of gross_sales_money and discount_money."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All taxes applied to this itemization."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentDiscount"
          },
          "description": "All discounts applied to this itemization."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentModifier"
          },
          "description": "All modifier options applied to this itemization."
        }
      },
      "description": "Payment include an` itemizations` field that lists the items purchased,\nalong with associated fees, modifiers, and discounts. Each itemization has an\n`itemization_type` field that indicates which of the following the itemization\nrepresents:\n\n\u003cul\u003e\n\u003cli\u003eAn item variation from the merchant\u0027s item library\u003c/li\u003e\n\u003cli\u003eA custom monetary amount\u003c/li\u003e\n\u003cli\u003e\nAn action performed on a Square gift card, such as activating or\nreloading it.\n\u003c/li\u003e\n\u003c/ul\u003e\n\n*Note**: itemization information included in a `Payment` object reflects\ndetails collected **at the time of the payment**. Details such as the name or\nprice of items might have changed since the payment was processed.",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentModifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this modifier option adds to the payment."
        },
        "modifier_option_id": {
          "type": "string",
          "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentModifier",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentSurcharge": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the surcharge."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money applied to the order as a result of the surcharge."
        },
        "rate": {
          "type": "string",
          "description": "The amount of the surcharge as a percentage. The percentage is provided as a string representing the decimal equivalent of the percentage. For example, \"0.7\" corresponds to a 7% surcharge. Exactly one of rate or amount_money should be set."
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of the surcharge as a Money object. Exactly one of rate or amount_money should be set."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "AUTO_GRATUITY",
            "CUSTOM"
          ],
          "description": "Indicates the source of the surcharge. For example, if it was applied as an automatic gratuity for a large group.\nSee [V1PaymentSurchargeType](#type-v1paymentsurchargetype) for possible values"
        },
        "taxable": {
          "type": "boolean",
          "description": "Indicates whether the surcharge is taxable."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "The list of taxes that should be applied to the surcharge."
        },
        "surcharge_id": {
          "type": "string",
          "description": "A Square-issued unique identifier associated with the surcharge."
        }
      },
      "description": "V1PaymentSurcharge",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentTax": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "name": {
          "type": "string",
          "description": "The merchant-defined name of the tax."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this tax adds to the payment."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1PaymentTaxInclusionType](#type-v1paymenttaxinclusiontype) for possible values"
        },
        "fee_id": {
          "type": "string",
          "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentTax",
      "x-release-status": "PUBLIC"
    },
    "V1PhoneNumber": {
      "type": "object",
      "required": [
        "calling_code",
        "number"
      ],
      "properties": {
        "calling_code": {
          "type": "string",
          "description": "The phone number\u0027s international calling code. For US phone numbers, this value is +1."
        },
        "number": {
          "type": "string",
          "description": "The phone number."
        }
      },
      "description": "Represents a phone number.",
      "x-release-status": "PUBLIC"
    },
    "V1Refund": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "description": "The type of refund\nSee [V1RefundType](#type-v1refundtype) for possible values"
        },
        "reason": {
          "type": "string",
          "description": "The merchant-specified reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money refunded. This amount is always negative."
        },
        "refunded_processing_fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of processing fee money refunded. This amount is always positive."
        },
        "refunded_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of tax money refunded. This amount is always negative."
        },
        "refunded_additive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of additive tax money refunded. This amount is always negative."
        },
        "refunded_additive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the additive taxes associated with the refund."
        },
        "refunded_inclusive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of inclusive tax money refunded. This amount is always negative."
        },
        "refunded_inclusive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the inclusive taxes associated with the refund."
        },
        "refunded_tip_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of tip money refunded. This amount is always negative."
        },
        "refunded_discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of discount money refunded. This amount is always positive."
        },
        "refunded_surcharge_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of surcharge money refunded. This amount is always negative."
        },
        "refunded_surcharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentSurcharge"
          },
          "description": "A list of all surcharges associated with the refund."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format."
        },
        "processed_at": {
          "type": "string",
          "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange \u003d\u003d true), payment_id is the ID of the original payment ID even if the payment includes other tenders."
        },
        "merchant_id": {
          "type": "string",
          "description": ""
        },
        "is_exchange": {
          "type": "boolean",
          "description": "Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded."
        }
      },
      "description": "V1Refund",
      "x-release-status": "PUBLIC"
    },
    "V1RemoveFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RemoveModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveBankAccountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveBusinessRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveCashDrawerShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveEmployeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveEmployeeRoleRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveItemRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveOrderRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1RetrievePaymentRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveSettlementRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveTimecardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1Settlement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "status": {
          "type": "string",
          "enum": [
            "FAILED",
            "SENT"
          ],
          "description": "The settlement\u0027s current status.\nSee [V1SettlementStatus](#type-v1settlementstatus) for possible values"
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money involved in the settlement. A positive amount indicates a deposit, and a negative amount indicates a withdrawal. This amount is never zero."
        },
        "initiated_at": {
          "type": "string",
          "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format."
        },
        "bank_account_id": {
          "type": "string",
          "description": "The Square-issued unique identifier for the bank account associated with the settlement."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1SettlementEntry"
          },
          "description": "The entries included in this settlement."
        }
      },
      "description": "V1Settlement",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementEntry": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "type": {
          "type": "string",
          "enum": [
            "ADJUSTMENT",
            "BALANCE_CHARGE",
            "CHARGE",
            "FREE_PROCESSING",
            "HOLD_ADJUSTMENT",
            "PAID_SERVICE_FEE",
            "PAID_SERVICE_FEE_REFUND",
            "REDEMPTION_CODE",
            "REFUND",
            "RETURNED_PAYOUT",
            "SQUARE_CAPITAL_ADVANCE",
            "SQUARE_CAPITAL_PAYMENT",
            "SQUARE_CAPITAL_REVERSED_PAYMENT",
            "SUBSCRIPTION_FEE",
            "SUBSCRIPTION_FEE_REFUND",
            "OTHER",
            "INCENTED_PAYMENT",
            "RETURNED_ACH_ENTRY",
            "RETURNED_SQUARE_275",
            "SQUARE_275",
            "SQUARE_CARD"
          ],
          "description": "The settlement\u0027s current status.\nSee [V1SettlementEntryType](#type-v1settlemententrytype) for possible values"
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of money this entry contributes to the total settlement amount."
        },
        "fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero."
        }
      },
      "description": "V1SettlementEntry",
      "x-release-status": "PUBLIC"
    },
    "V1Tender": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "type": {
          "type": "string",
          "enum": [
            "CREDIT_CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "NO_SALE",
            "SQUARE_WALLET",
            "SQUARE_GIFT_CARD",
            "UNKNOWN",
            "OTHER"
          ],
          "description": "The type of tender.\nSee [V1TenderType](#type-v1tendertype) for possible values"
        },
        "name": {
          "type": "string",
          "description": "A human-readable description of the tender."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that processed the tender."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the tender."
        },
        "card_brand": {
          "type": "string",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTERCARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "description": "The brand of credit card provided.\nSee [CardBrand](#type-cardbrand) for possible values"
        },
        "pan_suffix": {
          "type": "string",
          "description": "The last four digits of the provided credit card\u0027s account number."
        },
        "entry_method": {
          "type": "string",
          "enum": [
            "MANUAL",
            "SCANNED",
            "SQUARE_CASH",
            "SQUARE_WALLET",
            "SWIPED",
            "WEB_FORM",
            "OTHER"
          ],
          "description": "The tender\u0027s unique ID.\nSee [V1TenderEntryMethod](#type-v1tenderentrymethod) for possible values"
        },
        "payment_note": {
          "type": "string",
          "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER."
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of money provided in this form of tender."
        },
        "tendered_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of total_money applied to the payment."
        },
        "tendered_at": {
          "type": "string",
          "description": "The time when the tender was created, in ISO 8601 format."
        },
        "settled_at": {
          "type": "string",
          "description": "The time when the tender was settled, in ISO 8601 format."
        },
        "change_back_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of total_money returned to the buyer as change."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all refunds applied to this tender. This amount is always negative or zero."
        },
        "is_exchange": {
          "type": "boolean",
          "description": "Indicates whether or not the tender is associated with an exchange. If is_exchange is true, the tender represents the value of goods returned in an exchange not the actual money paid. The exchange value reduces the tender amounts needed to pay for items purchased in the exchange."
        }
      },
      "description": "A tender represents a discrete monetary exchange. Square represents this\nexchange as a money object with a specific currency and amount, where the\namount is given in the smallest denomination of the given currency.\n\nSquare POS can accept more than one form of tender for a single payment (such\nas by splitting a bill between a credit card and a gift card). The `tender`\nfield of the Payment object lists all forms of tender used for the payment.\n\nSplit tender payments behave slightly differently from single tender payments:\n\nThe receipt_url for a split tender corresponds only to the first tender listed\nin the tender field. To get the receipt URLs for the remaining tenders, use\nthe receipt_url fields of the corresponding Tender objects.\n\n*A note on gift cards**: when a customer purchases a Square gift card from a\nmerchant, the merchant receives the full amount of the gift card in the\nassociated payment.\n\nWhen that gift card is used as a tender, the balance of the gift card is\nreduced and the merchant receives no funds. A `Tender` object with a type of\n`SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the\nassociated payment.",
      "x-release-status": "PUBLIC"
    },
    "V1Timecard": {
      "type": "object",
      "required": [
        "employee_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The timecard\u0027s unique ID."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee the timecard is associated with."
        },
        "deleted": {
          "type": "boolean",
          "description": "If true, the timecard was deleted by the merchant, and it is no longer valid."
        },
        "clockin_time": {
          "type": "string",
          "description": "The clock-in time for the timecard, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system."
        },
        "clockin_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked in from. We strongly reccomend providing a clockin_location_id. Square uses the clockin_location_id to determine a timecard’s timezone and overtime rules."
        },
        "clockout_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the timecard was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the timecard was most recently updated, in ISO 8601 format."
        },
        "regular_seconds_worked": {
          "type": "number",
          "description": "The total number of regular (non-overtime) seconds worked in the timecard."
        },
        "overtime_seconds_worked": {
          "type": "number",
          "description": "The total number of overtime seconds worked in the timecard."
        },
        "doubletime_seconds_worked": {
          "type": "number",
          "description": "The total number of doubletime seconds worked in the timecard."
        }
      },
      "description": "Represents a timecard for an employee.",
      "x-release-status": "PUBLIC"
    },
    "V1TimecardEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "enum": [
            "API_CREATE",
            "API_EDIT",
            "API_DELETE",
            "REGISTER_CLOCKIN",
            "REGISTER_CLOCKOUT",
            "DASHBOARD_SUPERVISOR_CLOSE",
            "DASHBOARD_EDIT",
            "DASHBOARD_DELETE"
          ],
          "description": "The ID of the timecard to list events for.\nSee [V1TimecardEventEventType](#type-v1timecardeventeventtype) for possible values"
        },
        "clockin_time": {
          "type": "string",
          "description": "The time the employee clocked in, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The time the employee clocked out, in ISO 8601 format."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event was created, in ISO 8601 format."
        }
      },
      "description": "V1TimecardEvent",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateCategoryRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Category",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateDiscountRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Discount",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateEmployeeRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Employee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateEmployeeRoleRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1EmployeeRole",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateFeeRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Fee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateItemRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Item",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateModifierListRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether multiple options from the modifier list can be applied to a single item.\nSee [V1UpdateModifierListRequestSelectionType](#type-v1updatemodifierlistrequestselectiontype) for possible values"
        }
      },
      "description": "V1UpdateModifierListRequest",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateModifierOptionRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierOption",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateOrderRequest": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "COMPLETE",
            "CANCEL",
            "REFUND"
          ],
          "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND).\nSee [V1UpdateOrderRequestAction](#type-v1updateorderrequestaction) for possible values"
        },
        "shipped_tracking_number": {
          "type": "string",
          "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE."
        },
        "completed_note": {
          "type": "string",
          "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE."
        },
        "refunded_note": {
          "type": "string",
          "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND."
        },
        "canceled_note": {
          "type": "string",
          "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL."
        }
      },
      "description": "V1UpdateOrderRequest",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1UpdatePageCellRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1PageCell",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdatePageRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Page",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateTimecardRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Timecard",
          "description": "An object containing the fields to POST for the request.\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateVariationRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Variation",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1Variation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item variation\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The item variation\u0027s name."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the variation\u0027s associated item."
        },
        "ordinal": {
          "type": "integer",
          "description": "Indicates the variation\u0027s list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order"
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time of sale.\nSee [V1VariationPricingType](#type-v1variationpricingtype) for possible values"
        },
        "price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The item variation\u0027s price, if any."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If true, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "LOW_QUANTITY",
            "NONE",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold.\nSee [V1VariationInventoryAlertType](#type-v1variationinventoryalerttype) for possible values"
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "description": "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard."
        },
        "user_data": {
          "type": "string",
          "description": "Arbitrary metadata associated with the variation. Cannot exceed 255 characters."
        }
      },
      "description": "V1Variation",
      "x-release-status": "PUBLIC"
    },
    "VoidTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "VoidTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [VoidTransaction](#endpoint-voidtransaction) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "WorkweekConfig": {
      "type": "object",
      "required": [
        "start_of_week",
        "start_of_day_local_time"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object"
        },
        "start_of_week": {
          "type": "string",
          "enum": [
            "MON",
            "TUE",
            "WED",
            "THU",
            "FRI",
            "SAT",
            "SUN"
          ],
          "description": "The day of the week on which a business week cuts over for\ncompensation purposes."
        },
        "start_of_day_local_time": {
          "minLength": 1,
          "type": "string",
          "description": "The local time at which a business week cuts over. Represented as a\nstring in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are\ntruncated)."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC"
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC"
        }
      },
      "description": "Sets the Day of the week and hour of the day that a business starts a \nwork week. Used for the calculation of overtime pay.",
      "x-release-status": "PUBLIC"
    }
  }
}
